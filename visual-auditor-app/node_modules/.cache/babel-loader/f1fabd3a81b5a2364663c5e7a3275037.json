{"ast":null,"code":"import _slicedToArray from \"/Users/davidmunechika/Documents/Code/Research/visual-auditor/visual-auditor-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { exactProp, HTMLElementType, unstable_useEnhancedEffect as useEnhancedEffect, unstable_useForkRef as useForkRef, unstable_setRef as setRef } from '@mui/utils';\n\nfunction getContainer(container) {\n  return typeof container === 'function' ? container() : container;\n}\n/**\n * Portals provide a first-class way to render children into a DOM node\n * that exists outside the DOM hierarchy of the parent component.\n */\n\n\nvar Portal = /*#__PURE__*/React.forwardRef(function Portal(props, ref) {\n  var children = props.children,\n      container = props.container,\n      _props$disablePortal = props.disablePortal,\n      disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal;\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      mountNode = _React$useState2[0],\n      setMountNode = _React$useState2[1];\n\n  var handleRef = useForkRef( /*#__PURE__*/React.isValidElement(children) ? children.ref : null, ref);\n  useEnhancedEffect(function () {\n    if (!disablePortal) {\n      setMountNode(getContainer(container) || document.body);\n    }\n  }, [container, disablePortal]);\n  useEnhancedEffect(function () {\n    if (mountNode && !disablePortal) {\n      setRef(ref, mountNode);\n      return function () {\n        setRef(ref, null);\n      };\n    }\n\n    return undefined;\n  }, [ref, mountNode, disablePortal]);\n\n  if (disablePortal) {\n    if ( /*#__PURE__*/React.isValidElement(children)) {\n      return /*#__PURE__*/React.cloneElement(children, {\n        ref: handleRef\n      });\n    }\n\n    return children;\n  }\n\n  return mountNode ? /*#__PURE__*/ReactDOM.createPortal(children, mountNode) : mountNode;\n});\nprocess.env.NODE_ENV !== \"production\" ? Portal.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The children to render into the `container`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * An HTML element or function that returns one.\n   * The `container` will have the portal children appended to it.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([HTMLElementType, PropTypes.func]),\n\n  /**\n   * The `children` will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  Portal['propTypes' + ''] = exactProp(Portal.propTypes);\n}\n\nexport default Portal;","map":{"version":3,"sources":["/Users/davidmunechika/Documents/Code/Research/visual-auditor/visual-auditor-app/node_modules/@mui/core/Portal/Portal.js"],"names":["React","ReactDOM","PropTypes","exactProp","HTMLElementType","unstable_useEnhancedEffect","useEnhancedEffect","unstable_useForkRef","useForkRef","unstable_setRef","setRef","getContainer","container","Portal","forwardRef","props","ref","children","disablePortal","useState","mountNode","setMountNode","handleRef","isValidElement","document","body","undefined","cloneElement","createPortal","process","env","NODE_ENV","propTypes","node","oneOfType","func","bool"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { exactProp, HTMLElementType, unstable_useEnhancedEffect as useEnhancedEffect, unstable_useForkRef as useForkRef, unstable_setRef as setRef } from '@mui/utils';\n\nfunction getContainer(container) {\n  return typeof container === 'function' ? container() : container;\n}\n/**\n * Portals provide a first-class way to render children into a DOM node\n * that exists outside the DOM hierarchy of the parent component.\n */\n\n\nconst Portal = /*#__PURE__*/React.forwardRef(function Portal(props, ref) {\n  const {\n    children,\n    container,\n    disablePortal = false\n  } = props;\n  const [mountNode, setMountNode] = React.useState(null);\n  const handleRef = useForkRef( /*#__PURE__*/React.isValidElement(children) ? children.ref : null, ref);\n  useEnhancedEffect(() => {\n    if (!disablePortal) {\n      setMountNode(getContainer(container) || document.body);\n    }\n  }, [container, disablePortal]);\n  useEnhancedEffect(() => {\n    if (mountNode && !disablePortal) {\n      setRef(ref, mountNode);\n      return () => {\n        setRef(ref, null);\n      };\n    }\n\n    return undefined;\n  }, [ref, mountNode, disablePortal]);\n\n  if (disablePortal) {\n    if ( /*#__PURE__*/React.isValidElement(children)) {\n      return /*#__PURE__*/React.cloneElement(children, {\n        ref: handleRef\n      });\n    }\n\n    return children;\n  }\n\n  return mountNode ? /*#__PURE__*/ReactDOM.createPortal(children, mountNode) : mountNode;\n});\nprocess.env.NODE_ENV !== \"production\" ? Portal.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The children to render into the `container`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * An HTML element or function that returns one.\n   * The `container` will have the portal children appended to it.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([HTMLElementType, PropTypes.func]),\n\n  /**\n   * The `children` will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  Portal['propTypes' + ''] = exactProp(Portal.propTypes);\n}\n\nexport default Portal;"]},"metadata":{},"sourceType":"module"}