{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"align\", \"className\", \"component\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getTypographyUtilityClass } from './typographyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var align = ownerState.align,\n      gutterBottom = ownerState.gutterBottom,\n      noWrap = ownerState.noWrap,\n      paragraph = ownerState.paragraph,\n      variant = ownerState.variant,\n      classes = ownerState.classes;\n  var slots = {\n    root: ['root', variant, ownerState.align !== 'inherit' && \"align\".concat(capitalize(align)), gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\n\nexport var TypographyRoot = styled('span', {\n  name: 'MuiTypography',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    var ownerState = props.ownerState;\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[\"align\".concat(capitalize(ownerState.align))], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\n  }\n})(function (_ref) {\n  var theme = _ref.theme,\n      ownerState = _ref.ownerState;\n  return _extends({\n    margin: 0\n  }, ownerState.variant && theme.typography[ownerState.variant], ownerState.align !== 'inherit' && {\n    textAlign: ownerState.align\n  }, ownerState.noWrap && {\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap'\n  }, ownerState.gutterBottom && {\n    marginBottom: '0.35em'\n  }, ownerState.paragraph && {\n    marginBottom: 16\n  });\n});\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n}; // TODO v6: deprecate these color values in v5.x and remove the transformation in v6\n\nvar colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\n\nvar transformDeprecatedColors = function transformDeprecatedColors(color) {\n  return colorTransformations[color] || color;\n};\n\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  var themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n  var color = transformDeprecatedColors(themeProps.color);\n  var props = extendSxProp(_extends({}, themeProps, {\n    color: color\n  }));\n\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      className = props.className,\n      component = props.component,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var ownerState = _extends({}, props, {\n    align: align,\n    color: color,\n    className: className,\n    component: component,\n    gutterBottom: gutterBottom,\n    noWrap: noWrap,\n    paragraph: paragraph,\n    variant: variant,\n    variantMapping: variantMapping\n  });\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  var classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TypographyRoot, _extends({\n    as: Component,\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the element will be a paragraph element.\n   * @default false\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .object\n} : void 0;\nexport default Typography;","map":{"version":3,"sources":["/Users/davidmunechika/Documents/Code/Research/visual-auditor/visual-auditor-app/node_modules/@mui/material/Typography/Typography.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","clsx","unstable_extendSxProp","extendSxProp","unstable_composeClasses","composeClasses","styled","useThemeProps","capitalize","getTypographyUtilityClass","jsx","_jsx","useUtilityClasses","ownerState","align","gutterBottom","noWrap","paragraph","variant","classes","slots","root","TypographyRoot","name","slot","overridesResolver","props","styles","theme","margin","typography","textAlign","overflow","textOverflow","whiteSpace","marginBottom","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","colorTransformations","primary","textPrimary","secondary","textSecondary","error","transformDeprecatedColors","color","Typography","forwardRef","inProps","ref","themeProps","className","component","variantMapping","other","Component","as","process","env","NODE_ENV","propTypes","oneOf","children","node","object","string","elementType","bool","sx","oneOfType"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getTypographyUtilityClass } from './typographyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\n\nexport const TypographyRoot = styled('span', {\n  name: 'MuiTypography',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0\n}, ownerState.variant && theme.typography[ownerState.variant], ownerState.align !== 'inherit' && {\n  textAlign: ownerState.align\n}, ownerState.noWrap && {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap'\n}, ownerState.gutterBottom && {\n  marginBottom: '0.35em'\n}, ownerState.paragraph && {\n  marginBottom: 16\n}));\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n}; // TODO v6: deprecate these color values in v5.x and remove the transformation in v6\n\nconst colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\n\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\n\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n  const color = transformDeprecatedColors(themeProps.color);\n  const props = extendSxProp(_extends({}, themeProps, {\n    color\n  }));\n\n  const {\n    align = 'inherit',\n    className,\n    component,\n    gutterBottom = false,\n    noWrap = false,\n    paragraph = false,\n    variant = 'body1',\n    variantMapping = defaultVariantMapping\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    align,\n    color,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  });\n\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TypographyRoot, _extends({\n    as: Component,\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the element will be a paragraph element.\n   * @default false\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .object\n} : void 0;\nexport default Typography;"]},"metadata":{},"sourceType":"module"}