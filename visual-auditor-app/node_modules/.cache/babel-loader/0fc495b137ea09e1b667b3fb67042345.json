{"ast":null,"code":"import _slicedToArray from \"/Users/davidmunechika/Documents/Code/Research/visual-auditor/visual-auditor-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"children\", \"className\", \"color\", \"component\", \"disabled\", \"error\", \"focused\", \"fullWidth\", \"hiddenLabel\", \"margin\", \"required\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { isFilled, isAdornedStart } from '../InputBase/utils';\nimport capitalize from '../utils/capitalize';\nimport isMuiElement from '../utils/isMuiElement';\nimport FormControlContext from './FormControlContext';\nimport { getFormControlUtilityClasses } from './formControlClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var classes = ownerState.classes,\n      margin = ownerState.margin,\n      fullWidth = ownerState.fullWidth;\n  var slots = {\n    root: ['root', margin !== 'none' && \"margin\".concat(capitalize(margin)), fullWidth && 'fullWidth']\n  };\n  return composeClasses(slots, getFormControlUtilityClasses, classes);\n};\n\nvar FormControlRoot = styled('div', {\n  name: 'MuiFormControl',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(_ref, styles) {\n    var ownerState = _ref.ownerState;\n    return _extends({}, styles.root, styles[\"margin\".concat(capitalize(ownerState.margin))], ownerState.fullWidth && styles.fullWidth);\n  }\n})(function (_ref2) {\n  var ownerState = _ref2.ownerState;\n  return _extends({\n    display: 'inline-flex',\n    flexDirection: 'column',\n    position: 'relative',\n    // Reset fieldset default style.\n    minWidth: 0,\n    padding: 0,\n    margin: 0,\n    border: 0,\n    verticalAlign: 'top'\n  }, ownerState.margin === 'normal' && {\n    marginTop: 16,\n    marginBottom: 8\n  }, ownerState.margin === 'dense' && {\n    marginTop: 8,\n    marginBottom: 4\n  }, ownerState.fullWidth && {\n    width: '100%'\n  });\n});\n/**\n * Provides context such as filled/focused/error/required for form inputs.\n * Relying on the context provides high flexibility and ensures that the state always stays\n * consistent across the children of the `FormControl`.\n * This context is used by the following components:\n *\n *  - FormLabel\n *  - FormHelperText\n *  - Input\n *  - InputLabel\n *\n * You can find one composition example below and more going to [the demos](/components/text-fields/#components).\n *\n * ```jsx\n * <FormControl>\n *   <InputLabel htmlFor=\"my-input\">Email address</InputLabel>\n *   <Input id=\"my-input\" aria-describedby=\"my-helper-text\" />\n *   <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText>\n * </FormControl>\n * ```\n *\n * ⚠️ Only one `InputBase` can be used within a FormControl because it create visual inconsistencies.\n * For instance, only one input can be focused at the same time, the state shouldn't be shared.\n */\n\nvar FormControl = /*#__PURE__*/React.forwardRef(function FormControl(inProps, ref) {\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormControl'\n  });\n\n  var children = props.children,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$error = props.error,\n      error = _props$error === void 0 ? false : _props$error,\n      visuallyFocused = props.focused,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$hiddenLabel = props.hiddenLabel,\n      hiddenLabel = _props$hiddenLabel === void 0 ? false : _props$hiddenLabel,\n      _props$margin = props.margin,\n      margin = _props$margin === void 0 ? 'none' : _props$margin,\n      _props$required = props.required,\n      required = _props$required === void 0 ? false : _props$required,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'outlined' : _props$variant,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var ownerState = _extends({}, props, {\n    color: color,\n    component: component,\n    disabled: disabled,\n    error: error,\n    fullWidth: fullWidth,\n    hiddenLabel: hiddenLabel,\n    margin: margin,\n    required: required,\n    size: size,\n    variant: variant\n  });\n\n  var classes = useUtilityClasses(ownerState);\n\n  var _React$useState = React.useState(function () {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    var initialAdornedStart = false;\n\n    if (children) {\n      React.Children.forEach(children, function (child) {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        var input = isMuiElement(child, ['Select']) ? child.props.input : child;\n\n        if (input && isAdornedStart(input.props)) {\n          initialAdornedStart = true;\n        }\n      });\n    }\n\n    return initialAdornedStart;\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      adornedStart = _React$useState2[0],\n      setAdornedStart = _React$useState2[1];\n\n  var _React$useState3 = React.useState(function () {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    var initialFilled = false;\n\n    if (children) {\n      React.Children.forEach(children, function (child) {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        if (isFilled(child.props, true)) {\n          initialFilled = true;\n        }\n      });\n    }\n\n    return initialFilled;\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      filled = _React$useState4[0],\n      setFilled = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      focusedState = _React$useState6[0],\n      setFocused = _React$useState6[1];\n\n  if (disabled && focusedState) {\n    setFocused(false);\n  }\n\n  var focused = visuallyFocused !== undefined && !disabled ? visuallyFocused : focusedState;\n  var registerEffect;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    var registeredInput = React.useRef(false);\n\n    registerEffect = function registerEffect() {\n      if (registeredInput.current) {\n        console.error(['MUI: There are multiple `InputBase` components inside a FormControl.', 'This creates visual inconsistencies, only use one `InputBase`.'].join('\\n'));\n      }\n\n      registeredInput.current = true;\n      return function () {\n        registeredInput.current = false;\n      };\n    };\n  }\n\n  var onFilled = React.useCallback(function () {\n    setFilled(true);\n  }, []);\n  var onEmpty = React.useCallback(function () {\n    setFilled(false);\n  }, []);\n  var childContext = {\n    adornedStart: adornedStart,\n    setAdornedStart: setAdornedStart,\n    color: color,\n    disabled: disabled,\n    error: error,\n    filled: filled,\n    focused: focused,\n    fullWidth: fullWidth,\n    hiddenLabel: hiddenLabel,\n    size: size,\n    onBlur: function onBlur() {\n      setFocused(false);\n    },\n    onEmpty: onEmpty,\n    onFilled: onFilled,\n    onFocus: function onFocus() {\n      setFocused(true);\n    },\n    registerEffect: registerEffect,\n    required: required,\n    variant: variant\n  };\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(FormControlRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: children\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControl.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the label, input and helper text should be displayed in a disabled state.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label is displayed in an error state.\n   * @default false\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the component is displayed in focused state.\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `true`, the component will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * If `true`, the label is hidden.\n   * This is used to increase density for a `FilledInput`.\n   * Be sure to add `aria-label` to the `input` element.\n   * @default false\n   */\n  hiddenLabel: PropTypes.bool,\n\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   * @default 'none'\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n\n  /**\n   * If `true`, the label will indicate that the `input` is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The variant to use.\n   * @default 'outlined'\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default FormControl;","map":{"version":3,"sources":["/Users/davidmunechika/Documents/Code/Research/visual-auditor/visual-auditor-app/node_modules/@mui/material/FormControl/FormControl.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","clsx","unstable_composeClasses","composeClasses","useThemeProps","styled","isFilled","isAdornedStart","capitalize","isMuiElement","FormControlContext","getFormControlUtilityClasses","jsx","_jsx","useUtilityClasses","ownerState","classes","margin","fullWidth","slots","root","FormControlRoot","name","slot","overridesResolver","styles","display","flexDirection","position","minWidth","padding","border","verticalAlign","marginTop","marginBottom","width","FormControl","forwardRef","inProps","ref","props","children","className","color","component","disabled","error","visuallyFocused","focused","hiddenLabel","required","size","variant","other","useState","initialAdornedStart","Children","forEach","child","input","adornedStart","setAdornedStart","initialFilled","filled","setFilled","focusedState","setFocused","undefined","registerEffect","process","env","NODE_ENV","registeredInput","useRef","current","console","join","onFilled","useCallback","onEmpty","childContext","onBlur","onFocus","Provider","value","as","propTypes","node","object","string","oneOfType","oneOf","elementType","bool","sx"],"mappings":";AAAA,OAAOA,6BAAP,MAA0C,yDAA1C;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,IAAMC,SAAS,GAAG,CAAC,UAAD,EAAa,WAAb,EAA0B,OAA1B,EAAmC,WAAnC,EAAgD,UAAhD,EAA4D,OAA5D,EAAqE,SAArE,EAAgF,WAAhF,EAA6F,aAA7F,EAA4G,QAA5G,EAAsH,UAAtH,EAAkI,MAAlI,EAA0I,SAA1I,CAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,uBAAuB,IAAIC,cAApC,QAA0D,WAA1D;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,QAAT,EAAmBC,cAAnB,QAAyC,oBAAzC;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,SAASC,4BAAT,QAA6C,sBAA7C;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,UAAU,EAAI;AACtC,MACEC,OADF,GAIID,UAJJ,CACEC,OADF;AAAA,MAEEC,MAFF,GAIIF,UAJJ,CAEEE,MAFF;AAAA,MAGEC,SAHF,GAIIH,UAJJ,CAGEG,SAHF;AAKA,MAAMC,KAAK,GAAG;AACZC,IAAAA,IAAI,EAAE,CAAC,MAAD,EAASH,MAAM,KAAK,MAAX,oBAA8BT,UAAU,CAACS,MAAD,CAAxC,CAAT,EAA6DC,SAAS,IAAI,WAA1E;AADM,GAAd;AAGA,SAAOf,cAAc,CAACgB,KAAD,EAAQR,4BAAR,EAAsCK,OAAtC,CAArB;AACD,CAVD;;AAYA,IAAMK,eAAe,GAAGhB,MAAM,CAAC,KAAD,EAAQ;AACpCiB,EAAAA,IAAI,EAAE,gBAD8B;AAEpCC,EAAAA,IAAI,EAAE,MAF8B;AAGpCC,EAAAA,iBAAiB,EAAE,iCAEhBC,MAFgB,EAEL;AAAA,QADZV,UACY,QADZA,UACY;AACZ,WAAOlB,QAAQ,CAAC,EAAD,EAAK4B,MAAM,CAACL,IAAZ,EAAkBK,MAAM,iBAAUjB,UAAU,CAACO,UAAU,CAACE,MAAZ,CAApB,EAAxB,EAAoEF,UAAU,CAACG,SAAX,IAAwBO,MAAM,CAACP,SAAnG,CAAf;AACD;AAPmC,CAAR,CAAN,CAQrB;AAAA,MACDH,UADC,SACDA,UADC;AAAA,SAEGlB,QAAQ,CAAC;AACb6B,IAAAA,OAAO,EAAE,aADI;AAEbC,IAAAA,aAAa,EAAE,QAFF;AAGbC,IAAAA,QAAQ,EAAE,UAHG;AAIb;AACAC,IAAAA,QAAQ,EAAE,CALG;AAMbC,IAAAA,OAAO,EAAE,CANI;AAObb,IAAAA,MAAM,EAAE,CAPK;AAQbc,IAAAA,MAAM,EAAE,CARK;AASbC,IAAAA,aAAa,EAAE;AATF,GAAD,EAUXjB,UAAU,CAACE,MAAX,KAAsB,QAAtB,IAAkC;AACnCgB,IAAAA,SAAS,EAAE,EADwB;AAEnCC,IAAAA,YAAY,EAAE;AAFqB,GAVvB,EAaXnB,UAAU,CAACE,MAAX,KAAsB,OAAtB,IAAiC;AAClCgB,IAAAA,SAAS,EAAE,CADuB;AAElCC,IAAAA,YAAY,EAAE;AAFoB,GAbtB,EAgBXnB,UAAU,CAACG,SAAX,IAAwB;AACzBiB,IAAAA,KAAK,EAAE;AADkB,GAhBb,CAFX;AAAA,CARqB,CAAxB;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,WAAW,GAAG,aAAarC,KAAK,CAACsC,UAAN,CAAiB,SAASD,WAAT,CAAqBE,OAArB,EAA8BC,GAA9B,EAAmC;AACnF,MAAMC,KAAK,GAAGpC,aAAa,CAAC;AAC1BoC,IAAAA,KAAK,EAAEF,OADmB;AAE1BhB,IAAAA,IAAI,EAAE;AAFoB,GAAD,CAA3B;;AAKA,MACEmB,QADF,GAcID,KAdJ,CACEC,QADF;AAAA,MAEEC,SAFF,GAcIF,KAdJ,CAEEE,SAFF;AAAA,qBAcIF,KAdJ,CAGEG,KAHF;AAAA,MAGEA,KAHF,6BAGU,SAHV;AAAA,yBAcIH,KAdJ,CAIEI,SAJF;AAAA,MAIEA,SAJF,iCAIc,KAJd;AAAA,wBAcIJ,KAdJ,CAKEK,QALF;AAAA,MAKEA,QALF,gCAKa,KALb;AAAA,qBAcIL,KAdJ,CAMEM,KANF;AAAA,MAMEA,KANF,6BAMU,KANV;AAAA,MAOWC,eAPX,GAcIP,KAdJ,CAOEQ,OAPF;AAAA,yBAcIR,KAdJ,CAQEtB,SARF;AAAA,MAQEA,SARF,iCAQc,KARd;AAAA,2BAcIsB,KAdJ,CASES,WATF;AAAA,MASEA,WATF,mCASgB,KAThB;AAAA,sBAcIT,KAdJ,CAUEvB,MAVF;AAAA,MAUEA,MAVF,8BAUW,MAVX;AAAA,wBAcIuB,KAdJ,CAWEU,QAXF;AAAA,MAWEA,QAXF,gCAWa,KAXb;AAAA,oBAcIV,KAdJ,CAYEW,IAZF;AAAA,MAYEA,IAZF,4BAYS,QAZT;AAAA,uBAcIX,KAdJ,CAaEY,OAbF;AAAA,MAaEA,OAbF,+BAaY,UAbZ;AAAA,MAeMC,KAfN,GAeczD,6BAA6B,CAAC4C,KAAD,EAAQ1C,SAAR,CAf3C;;AAiBA,MAAMiB,UAAU,GAAGlB,QAAQ,CAAC,EAAD,EAAK2C,KAAL,EAAY;AACrCG,IAAAA,KAAK,EAALA,KADqC;AAErCC,IAAAA,SAAS,EAATA,SAFqC;AAGrCC,IAAAA,QAAQ,EAARA,QAHqC;AAIrCC,IAAAA,KAAK,EAALA,KAJqC;AAKrC5B,IAAAA,SAAS,EAATA,SALqC;AAMrC+B,IAAAA,WAAW,EAAXA,WANqC;AAOrChC,IAAAA,MAAM,EAANA,MAPqC;AAQrCiC,IAAAA,QAAQ,EAARA,QARqC;AASrCC,IAAAA,IAAI,EAAJA,IATqC;AAUrCC,IAAAA,OAAO,EAAPA;AAVqC,GAAZ,CAA3B;;AAaA,MAAMpC,OAAO,GAAGF,iBAAiB,CAACC,UAAD,CAAjC;;AACA,wBAAwChB,KAAK,CAACuD,QAAN,CAAe,YAAM;AAC3D;AACA;AACA,QAAIC,mBAAmB,GAAG,KAA1B;;AAEA,QAAId,QAAJ,EAAc;AACZ1C,MAAAA,KAAK,CAACyD,QAAN,CAAeC,OAAf,CAAuBhB,QAAvB,EAAiC,UAAAiB,KAAK,EAAI;AACxC,YAAI,CAACjD,YAAY,CAACiD,KAAD,EAAQ,CAAC,OAAD,EAAU,QAAV,CAAR,CAAjB,EAA+C;AAC7C;AACD;;AAED,YAAMC,KAAK,GAAGlD,YAAY,CAACiD,KAAD,EAAQ,CAAC,QAAD,CAAR,CAAZ,GAAkCA,KAAK,CAAClB,KAAN,CAAYmB,KAA9C,GAAsDD,KAApE;;AAEA,YAAIC,KAAK,IAAIpD,cAAc,CAACoD,KAAK,CAACnB,KAAP,CAA3B,EAA0C;AACxCe,UAAAA,mBAAmB,GAAG,IAAtB;AACD;AACF,OAVD;AAWD;;AAED,WAAOA,mBAAP;AACD,GApBuC,CAAxC;AAAA;AAAA,MAAOK,YAAP;AAAA,MAAqBC,eAArB;;AAqBA,yBAA4B9D,KAAK,CAACuD,QAAN,CAAe,YAAM;AAC/C;AACA;AACA,QAAIQ,aAAa,GAAG,KAApB;;AAEA,QAAIrB,QAAJ,EAAc;AACZ1C,MAAAA,KAAK,CAACyD,QAAN,CAAeC,OAAf,CAAuBhB,QAAvB,EAAiC,UAAAiB,KAAK,EAAI;AACxC,YAAI,CAACjD,YAAY,CAACiD,KAAD,EAAQ,CAAC,OAAD,EAAU,QAAV,CAAR,CAAjB,EAA+C;AAC7C;AACD;;AAED,YAAIpD,QAAQ,CAACoD,KAAK,CAAClB,KAAP,EAAc,IAAd,CAAZ,EAAiC;AAC/BsB,UAAAA,aAAa,GAAG,IAAhB;AACD;AACF,OARD;AASD;;AAED,WAAOA,aAAP;AACD,GAlB2B,CAA5B;AAAA;AAAA,MAAOC,MAAP;AAAA,MAAeC,SAAf;;AAmBA,yBAAmCjE,KAAK,CAACuD,QAAN,CAAe,KAAf,CAAnC;AAAA;AAAA,MAAOW,YAAP;AAAA,MAAqBC,UAArB;;AAEA,MAAIrB,QAAQ,IAAIoB,YAAhB,EAA8B;AAC5BC,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD;;AAED,MAAMlB,OAAO,GAAGD,eAAe,KAAKoB,SAApB,IAAiC,CAACtB,QAAlC,GAA6CE,eAA7C,GAA+DkB,YAA/E;AACA,MAAIG,cAAJ;;AAEA,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC;AACA,QAAMC,eAAe,GAAGzE,KAAK,CAAC0E,MAAN,CAAa,KAAb,CAAxB;;AAEAL,IAAAA,cAAc,GAAG,0BAAM;AACrB,UAAII,eAAe,CAACE,OAApB,EAA6B;AAC3BC,QAAAA,OAAO,CAAC7B,KAAR,CAAc,CAAC,sEAAD,EAAyE,gEAAzE,EAA2I8B,IAA3I,CAAgJ,IAAhJ,CAAd;AACD;;AAEDJ,MAAAA,eAAe,CAACE,OAAhB,GAA0B,IAA1B;AACA,aAAO,YAAM;AACXF,QAAAA,eAAe,CAACE,OAAhB,GAA0B,KAA1B;AACD,OAFD;AAGD,KATD;AAUD;;AAED,MAAMG,QAAQ,GAAG9E,KAAK,CAAC+E,WAAN,CAAkB,YAAM;AACvCd,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD,GAFgB,EAEd,EAFc,CAAjB;AAGA,MAAMe,OAAO,GAAGhF,KAAK,CAAC+E,WAAN,CAAkB,YAAM;AACtCd,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAFe,EAEb,EAFa,CAAhB;AAGA,MAAMgB,YAAY,GAAG;AACnBpB,IAAAA,YAAY,EAAZA,YADmB;AAEnBC,IAAAA,eAAe,EAAfA,eAFmB;AAGnBlB,IAAAA,KAAK,EAALA,KAHmB;AAInBE,IAAAA,QAAQ,EAARA,QAJmB;AAKnBC,IAAAA,KAAK,EAALA,KALmB;AAMnBiB,IAAAA,MAAM,EAANA,MANmB;AAOnBf,IAAAA,OAAO,EAAPA,OAPmB;AAQnB9B,IAAAA,SAAS,EAATA,SARmB;AASnB+B,IAAAA,WAAW,EAAXA,WATmB;AAUnBE,IAAAA,IAAI,EAAJA,IAVmB;AAWnB8B,IAAAA,MAAM,EAAE,kBAAM;AACZf,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAbkB;AAcnBa,IAAAA,OAAO,EAAPA,OAdmB;AAenBF,IAAAA,QAAQ,EAARA,QAfmB;AAgBnBK,IAAAA,OAAO,EAAE,mBAAM;AACbhB,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD,KAlBkB;AAmBnBE,IAAAA,cAAc,EAAdA,cAnBmB;AAoBnBlB,IAAAA,QAAQ,EAARA,QApBmB;AAqBnBE,IAAAA,OAAO,EAAPA;AArBmB,GAArB;AAuBA,SAAO,aAAavC,IAAI,CAACH,kBAAkB,CAACyE,QAApB,EAA8B;AACpDC,IAAAA,KAAK,EAAEJ,YAD6C;AAEpDvC,IAAAA,QAAQ,EAAE,aAAa5B,IAAI,CAACQ,eAAD,EAAkBxB,QAAQ,CAAC;AACpDwF,MAAAA,EAAE,EAAEzC,SADgD;AAEpD7B,MAAAA,UAAU,EAAEA,UAFwC;AAGpD2B,MAAAA,SAAS,EAAEzC,IAAI,CAACe,OAAO,CAACI,IAAT,EAAesB,SAAf,CAHqC;AAIpDH,MAAAA,GAAG,EAAEA;AAJ+C,KAAD,EAKlDc,KALkD,EAK3C;AACRZ,MAAAA,QAAQ,EAAEA;AADF,KAL2C,CAA1B;AAFyB,GAA9B,CAAxB;AAWD,CA9IgC,CAAjC;AA+IA4B,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCnC,WAAW,CAACkD;AACpD;AADwC,EAEtC;AACA;AACA;AACA;AACA;;AAEA;AACF;AACA;AACE7C,EAAAA,QAAQ,EAAEzC,SAAS,CAACuF,IATpB;;AAWA;AACF;AACA;AACEvE,EAAAA,OAAO,EAAEhB,SAAS,CAACwF,MAdnB;;AAgBA;AACF;AACA;AACE9C,EAAAA,SAAS,EAAE1C,SAAS,CAACyF,MAnBrB;;AAqBA;AACF;AACA;AACA;AACE9C,EAAAA,KAAK,EAAE3C;AACP;AADgB,GAEf0F,SAFM,CAEI,CAAC1F,SAAS,CAAC2F,KAAV,CAAgB,CAAC,SAAD,EAAY,WAAZ,EAAyB,OAAzB,EAAkC,MAAlC,EAA0C,SAA1C,EAAqD,SAArD,CAAhB,CAAD,EAAmF3F,SAAS,CAACyF,MAA7F,CAFJ,CAzBP;;AA6BA;AACF;AACA;AACA;AACE7C,EAAAA,SAAS,EAAE5C,SAAS,CAAC4F,WAjCrB;;AAmCA;AACF;AACA;AACA;AACE/C,EAAAA,QAAQ,EAAE7C,SAAS,CAAC6F,IAvCpB;;AAyCA;AACF;AACA;AACA;AACE/C,EAAAA,KAAK,EAAE9C,SAAS,CAAC6F,IA7CjB;;AA+CA;AACF;AACA;AACE7C,EAAAA,OAAO,EAAEhD,SAAS,CAAC6F,IAlDnB;;AAoDA;AACF;AACA;AACA;AACE3E,EAAAA,SAAS,EAAElB,SAAS,CAAC6F,IAxDrB;;AA0DA;AACF;AACA;AACA;AACA;AACA;AACE5C,EAAAA,WAAW,EAAEjD,SAAS,CAAC6F,IAhEvB;;AAkEA;AACF;AACA;AACA;AACE5E,EAAAA,MAAM,EAAEjB,SAAS,CAAC2F,KAAV,CAAgB,CAAC,OAAD,EAAU,MAAV,EAAkB,QAAlB,CAAhB,CAtER;;AAwEA;AACF;AACA;AACA;AACEzC,EAAAA,QAAQ,EAAElD,SAAS,CAAC6F,IA5EpB;;AA8EA;AACF;AACA;AACA;AACE1C,EAAAA,IAAI,EAAEnD;AACN;AADe,GAEd0F,SAFK,CAEK,CAAC1F,SAAS,CAAC2F,KAAV,CAAgB,CAAC,QAAD,EAAW,OAAX,CAAhB,CAAD,EAAuC3F,SAAS,CAACyF,MAAjD,CAFL,CAlFN;;AAsFA;AACF;AACA;AACEK,EAAAA,EAAE,EAAE9F,SAAS,CAACwF,MAzFd;;AA2FA;AACF;AACA;AACA;AACEpC,EAAAA,OAAO,EAAEpD,SAAS,CAAC2F,KAAV,CAAgB,CAAC,QAAD,EAAW,UAAX,EAAuB,UAAvB,CAAhB;AA/FT,CAFF,GAkGI,KAAK,CAlGT;AAmGA,eAAevD,WAAf","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"color\", \"component\", \"disabled\", \"error\", \"focused\", \"fullWidth\", \"hiddenLabel\", \"margin\", \"required\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { isFilled, isAdornedStart } from '../InputBase/utils';\nimport capitalize from '../utils/capitalize';\nimport isMuiElement from '../utils/isMuiElement';\nimport FormControlContext from './FormControlContext';\nimport { getFormControlUtilityClasses } from './formControlClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    margin,\n    fullWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', margin !== 'none' && `margin${capitalize(margin)}`, fullWidth && 'fullWidth']\n  };\n  return composeClasses(slots, getFormControlUtilityClasses, classes);\n};\n\nconst FormControlRoot = styled('div', {\n  name: 'MuiFormControl',\n  slot: 'Root',\n  overridesResolver: ({\n    ownerState\n  }, styles) => {\n    return _extends({}, styles.root, styles[`margin${capitalize(ownerState.margin)}`], ownerState.fullWidth && styles.fullWidth);\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  flexDirection: 'column',\n  position: 'relative',\n  // Reset fieldset default style.\n  minWidth: 0,\n  padding: 0,\n  margin: 0,\n  border: 0,\n  verticalAlign: 'top'\n}, ownerState.margin === 'normal' && {\n  marginTop: 16,\n  marginBottom: 8\n}, ownerState.margin === 'dense' && {\n  marginTop: 8,\n  marginBottom: 4\n}, ownerState.fullWidth && {\n  width: '100%'\n}));\n/**\n * Provides context such as filled/focused/error/required for form inputs.\n * Relying on the context provides high flexibility and ensures that the state always stays\n * consistent across the children of the `FormControl`.\n * This context is used by the following components:\n *\n *  - FormLabel\n *  - FormHelperText\n *  - Input\n *  - InputLabel\n *\n * You can find one composition example below and more going to [the demos](/components/text-fields/#components).\n *\n * ```jsx\n * <FormControl>\n *   <InputLabel htmlFor=\"my-input\">Email address</InputLabel>\n *   <Input id=\"my-input\" aria-describedby=\"my-helper-text\" />\n *   <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText>\n * </FormControl>\n * ```\n *\n * ⚠️ Only one `InputBase` can be used within a FormControl because it create visual inconsistencies.\n * For instance, only one input can be focused at the same time, the state shouldn't be shared.\n */\n\nconst FormControl = /*#__PURE__*/React.forwardRef(function FormControl(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormControl'\n  });\n\n  const {\n    children,\n    className,\n    color = 'primary',\n    component = 'div',\n    disabled = false,\n    error = false,\n    focused: visuallyFocused,\n    fullWidth = false,\n    hiddenLabel = false,\n    margin = 'none',\n    required = false,\n    size = 'medium',\n    variant = 'outlined'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    disabled,\n    error,\n    fullWidth,\n    hiddenLabel,\n    margin,\n    required,\n    size,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const [adornedStart, setAdornedStart] = React.useState(() => {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    let initialAdornedStart = false;\n\n    if (children) {\n      React.Children.forEach(children, child => {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        const input = isMuiElement(child, ['Select']) ? child.props.input : child;\n\n        if (input && isAdornedStart(input.props)) {\n          initialAdornedStart = true;\n        }\n      });\n    }\n\n    return initialAdornedStart;\n  });\n  const [filled, setFilled] = React.useState(() => {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    let initialFilled = false;\n\n    if (children) {\n      React.Children.forEach(children, child => {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        if (isFilled(child.props, true)) {\n          initialFilled = true;\n        }\n      });\n    }\n\n    return initialFilled;\n  });\n  const [focusedState, setFocused] = React.useState(false);\n\n  if (disabled && focusedState) {\n    setFocused(false);\n  }\n\n  const focused = visuallyFocused !== undefined && !disabled ? visuallyFocused : focusedState;\n  let registerEffect;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const registeredInput = React.useRef(false);\n\n    registerEffect = () => {\n      if (registeredInput.current) {\n        console.error(['MUI: There are multiple `InputBase` components inside a FormControl.', 'This creates visual inconsistencies, only use one `InputBase`.'].join('\\n'));\n      }\n\n      registeredInput.current = true;\n      return () => {\n        registeredInput.current = false;\n      };\n    };\n  }\n\n  const onFilled = React.useCallback(() => {\n    setFilled(true);\n  }, []);\n  const onEmpty = React.useCallback(() => {\n    setFilled(false);\n  }, []);\n  const childContext = {\n    adornedStart,\n    setAdornedStart,\n    color,\n    disabled,\n    error,\n    filled,\n    focused,\n    fullWidth,\n    hiddenLabel,\n    size,\n    onBlur: () => {\n      setFocused(false);\n    },\n    onEmpty,\n    onFilled,\n    onFocus: () => {\n      setFocused(true);\n    },\n    registerEffect,\n    required,\n    variant\n  };\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(FormControlRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: children\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControl.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the label, input and helper text should be displayed in a disabled state.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label is displayed in an error state.\n   * @default false\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the component is displayed in focused state.\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `true`, the component will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * If `true`, the label is hidden.\n   * This is used to increase density for a `FilledInput`.\n   * Be sure to add `aria-label` to the `input` element.\n   * @default false\n   */\n  hiddenLabel: PropTypes.bool,\n\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   * @default 'none'\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n\n  /**\n   * If `true`, the label will indicate that the `input` is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The variant to use.\n   * @default 'outlined'\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default FormControl;"]},"metadata":{},"sourceType":"module"}