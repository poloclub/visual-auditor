{"ast":null,"code":"import _slicedToArray from \"/Users/davidmunechika/Documents/Code/Research/visual-auditor/visual-auditor-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport ascending from \"./ascending.js\";\nimport group, { rollup } from \"./group.js\";\nimport sort from \"./sort.js\";\nexport default function groupSort(values, reduce, key) {\n  return (reduce.length !== 2 ? sort(rollup(values, reduce, key), function (_ref, _ref2) {\n    var _ref3 = _slicedToArray(_ref, 2),\n        ak = _ref3[0],\n        av = _ref3[1];\n\n    var _ref4 = _slicedToArray(_ref2, 2),\n        bk = _ref4[0],\n        bv = _ref4[1];\n\n    return ascending(av, bv) || ascending(ak, bk);\n  }) : sort(group(values, key), function (_ref5, _ref6) {\n    var _ref7 = _slicedToArray(_ref5, 2),\n        ak = _ref7[0],\n        av = _ref7[1];\n\n    var _ref8 = _slicedToArray(_ref6, 2),\n        bk = _ref8[0],\n        bv = _ref8[1];\n\n    return reduce(av, bv) || ascending(ak, bk);\n  })).map(function (_ref9) {\n    var _ref10 = _slicedToArray(_ref9, 1),\n        key = _ref10[0];\n\n    return key;\n  });\n}","map":{"version":3,"sources":["/Users/davidmunechika/Documents/Code/Research/visual-auditor/visual-auditor-app/node_modules/d3-array/src/groupSort.js"],"names":["ascending","group","rollup","sort","groupSort","values","reduce","key","length","ak","av","bk","bv","map"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,gBAAtB;AACA,OAAOC,KAAP,IAAeC,MAAf,QAA4B,YAA5B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,eAAe,SAASC,SAAT,CAAmBC,MAAnB,EAA2BC,MAA3B,EAAmCC,GAAnC,EAAwC;AACrD,SAAO,CAACD,MAAM,CAACE,MAAP,KAAkB,CAAlB,GACJL,IAAI,CAACD,MAAM,CAACG,MAAD,EAASC,MAAT,EAAiBC,GAAjB,CAAP,EAA+B;AAAA;AAAA,QAAEE,EAAF;AAAA,QAAMC,EAAN;;AAAA;AAAA,QAAYC,EAAZ;AAAA,QAAgBC,EAAhB;;AAAA,WAAwBZ,SAAS,CAACU,EAAD,EAAKE,EAAL,CAAT,IAAqBZ,SAAS,CAACS,EAAD,EAAKE,EAAL,CAAtD;AAAA,GAA/B,CADA,GAEJR,IAAI,CAACF,KAAK,CAACI,MAAD,EAASE,GAAT,CAAN,EAAsB;AAAA;AAAA,QAAEE,EAAF;AAAA,QAAMC,EAAN;;AAAA;AAAA,QAAYC,EAAZ;AAAA,QAAgBC,EAAhB;;AAAA,WAAwBN,MAAM,CAACI,EAAD,EAAKE,EAAL,CAAN,IAAkBZ,SAAS,CAACS,EAAD,EAAKE,EAAL,CAAnD;AAAA,GAAtB,CAFD,EAGJE,GAHI,CAGA;AAAA;AAAA,QAAEN,GAAF;;AAAA,WAAWA,GAAX;AAAA,GAHA,CAAP;AAID","sourcesContent":["import ascending from \"./ascending.js\";\nimport group, {rollup} from \"./group.js\";\nimport sort from \"./sort.js\";\n\nexport default function groupSort(values, reduce, key) {\n  return (reduce.length !== 2\n    ? sort(rollup(values, reduce, key), (([ak, av], [bk, bv]) => ascending(av, bv) || ascending(ak, bk)))\n    : sort(group(values, key), (([ak, av], [bk, bv]) => reduce(av, bv) || ascending(ak, bk))))\n    .map(([key]) => key);\n}\n"]},"metadata":{},"sourceType":"module"}