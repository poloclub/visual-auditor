{"ast":null,"code":"import _regeneratorRuntime from \"/Users/davidmunechika/Documents/Code/Research/visual-auditor/visual-auditor-app/node_modules/@babel/runtime/regenerator\";\nimport _createForOfIteratorHelper from \"/Users/davidmunechika/Documents/Code/Research/visual-auditor/visual-auditor-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(flatten);\n\nfunction flatten(arrays) {\n  var _iterator, _step, array;\n\n  return _regeneratorRuntime.wrap(function flatten$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _iterator = _createForOfIteratorHelper(arrays);\n          _context.prev = 1;\n\n          _iterator.s();\n\n        case 3:\n          if ((_step = _iterator.n()).done) {\n            _context.next = 8;\n            break;\n          }\n\n          array = _step.value;\n          return _context.delegateYield(array, \"t0\", 6);\n\n        case 6:\n          _context.next = 3;\n          break;\n\n        case 8:\n          _context.next = 13;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t1 = _context[\"catch\"](1);\n\n          _iterator.e(_context.t1);\n\n        case 13:\n          _context.prev = 13;\n\n          _iterator.f();\n\n          return _context.finish(13);\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 10, 13, 16]]);\n}\n\nexport default function merge(arrays) {\n  return Array.from(flatten(arrays));\n}","map":{"version":3,"sources":["/Users/davidmunechika/Documents/Code/Research/visual-auditor/visual-auditor-app/node_modules/d3-array/src/merge.js"],"names":["flatten","arrays","array","merge","Array","from"],"mappings":";;;oDAAUA,O;;AAAV,SAAUA,OAAV,CAAkBC,MAAlB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,iDACsBA,MADtB;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AACaC,UAAAA,KADb;AAEI,wCAAOA,KAAP;;AAFJ;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMA,eAAe,SAASC,KAAT,CAAeF,MAAf,EAAuB;AACpC,SAAOG,KAAK,CAACC,IAAN,CAAWL,OAAO,CAACC,MAAD,CAAlB,CAAP;AACD","sourcesContent":["function* flatten(arrays) {\n  for (const array of arrays) {\n    yield* array;\n  }\n}\n\nexport default function merge(arrays) {\n  return Array.from(flatten(arrays));\n}\n"]},"metadata":{},"sourceType":"module"}