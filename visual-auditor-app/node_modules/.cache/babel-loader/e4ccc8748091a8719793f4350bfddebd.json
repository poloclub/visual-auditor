{"ast":null,"code":"import _slicedToArray from \"/Users/davidmunechika/Documents/Code/Research/visual-auditor/visual-auditor-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n/* eslint-disable no-constant-condition */\n\nimport * as React from 'react';\nimport { unstable_setRef as setRef, unstable_useEventCallback as useEventCallback, unstable_useControlled as useControlled, unstable_useId as useId } from '@mui/utils'; // https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE11 support for this feature\n\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : string;\n}\n\nexport function createFilterOptions() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _config$ignoreAccents = config.ignoreAccents,\n      ignoreAccents = _config$ignoreAccents === void 0 ? true : _config$ignoreAccents,\n      _config$ignoreCase = config.ignoreCase,\n      ignoreCase = _config$ignoreCase === void 0 ? true : _config$ignoreCase,\n      limit = config.limit,\n      _config$matchFrom = config.matchFrom,\n      matchFrom = _config$matchFrom === void 0 ? 'any' : _config$matchFrom,\n      stringify = config.stringify,\n      _config$trim = config.trim,\n      trim = _config$trim === void 0 ? false : _config$trim;\n  return function (options, _ref) {\n    var inputValue = _ref.inputValue,\n        getOptionLabel = _ref.getOptionLabel;\n    var input = trim ? inputValue.trim() : inputValue;\n\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n\n    var filteredOptions = options.filter(function (option) {\n      var candidate = (stringify || getOptionLabel)(option);\n\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n    return typeof limit === 'number' ? filteredOptions.slice(0, limit) : filteredOptions;\n  };\n} // To replace with .findIndex() once we stop IE11 support.\n\nfunction findIndex(array, comp) {\n  for (var i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nvar defaultFilterOptions = createFilterOptions(); // Number of options to jump in list box when pageup and pagedown keys are used.\n\nvar pageSize = 5;\nexport default function useAutocomplete(props) {\n  var _props$autoComplete = props.autoComplete,\n      autoComplete = _props$autoComplete === void 0 ? false : _props$autoComplete,\n      _props$autoHighlight = props.autoHighlight,\n      autoHighlight = _props$autoHighlight === void 0 ? false : _props$autoHighlight,\n      _props$autoSelect = props.autoSelect,\n      autoSelect = _props$autoSelect === void 0 ? false : _props$autoSelect,\n      _props$blurOnSelect = props.blurOnSelect,\n      blurOnSelect = _props$blurOnSelect === void 0 ? false : _props$blurOnSelect,\n      disabledProp = props.disabled,\n      _props$clearOnBlur = props.clearOnBlur,\n      clearOnBlur = _props$clearOnBlur === void 0 ? !props.freeSolo : _props$clearOnBlur,\n      _props$clearOnEscape = props.clearOnEscape,\n      clearOnEscape = _props$clearOnEscape === void 0 ? false : _props$clearOnEscape,\n      _props$componentName = props.componentName,\n      componentName = _props$componentName === void 0 ? 'useAutocomplete' : _props$componentName,\n      _props$defaultValue = props.defaultValue,\n      defaultValue = _props$defaultValue === void 0 ? props.multiple ? [] : null : _props$defaultValue,\n      _props$disableClearab = props.disableClearable,\n      disableClearable = _props$disableClearab === void 0 ? false : _props$disableClearab,\n      _props$disableCloseOn = props.disableCloseOnSelect,\n      disableCloseOnSelect = _props$disableCloseOn === void 0 ? false : _props$disableCloseOn,\n      _props$disabledItemsF = props.disabledItemsFocusable,\n      disabledItemsFocusable = _props$disabledItemsF === void 0 ? false : _props$disabledItemsF,\n      _props$disableListWra = props.disableListWrap,\n      disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra,\n      _props$filterOptions = props.filterOptions,\n      filterOptions = _props$filterOptions === void 0 ? defaultFilterOptions : _props$filterOptions,\n      _props$filterSelected = props.filterSelectedOptions,\n      filterSelectedOptions = _props$filterSelected === void 0 ? false : _props$filterSelected,\n      _props$freeSolo = props.freeSolo,\n      freeSolo = _props$freeSolo === void 0 ? false : _props$freeSolo,\n      getOptionDisabled = props.getOptionDisabled,\n      _props$getOptionLabel = props.getOptionLabel,\n      getOptionLabelProp = _props$getOptionLabel === void 0 ? function (option) {\n    var _option$label;\n\n    return (_option$label = option.label) != null ? _option$label : option;\n  } : _props$getOptionLabel,\n      _props$isOptionEqualT = props.isOptionEqualToValue,\n      isOptionEqualToValue = _props$isOptionEqualT === void 0 ? function (option, value) {\n    return option === value;\n  } : _props$isOptionEqualT,\n      groupBy = props.groupBy,\n      _props$handleHomeEndK = props.handleHomeEndKeys,\n      handleHomeEndKeys = _props$handleHomeEndK === void 0 ? !props.freeSolo : _props$handleHomeEndK,\n      idProp = props.id,\n      _props$includeInputIn = props.includeInputInList,\n      includeInputInList = _props$includeInputIn === void 0 ? false : _props$includeInputIn,\n      inputValueProp = props.inputValue,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      onChange = props.onChange,\n      onClose = props.onClose,\n      onHighlightChange = props.onHighlightChange,\n      onInputChange = props.onInputChange,\n      onOpen = props.onOpen,\n      openProp = props.open,\n      _props$openOnFocus = props.openOnFocus,\n      openOnFocus = _props$openOnFocus === void 0 ? false : _props$openOnFocus,\n      options = props.options,\n      _props$selectOnFocus = props.selectOnFocus,\n      selectOnFocus = _props$selectOnFocus === void 0 ? !props.freeSolo : _props$selectOnFocus,\n      valueProp = props.value;\n  var id = useId(idProp);\n  var getOptionLabel = getOptionLabelProp;\n\n  getOptionLabel = function getOptionLabel(option) {\n    var optionLabel = getOptionLabelProp(option);\n\n    if (typeof optionLabel !== 'string') {\n      if (process.env.NODE_ENV !== 'production') {\n        var erroneousReturn = optionLabel === undefined ? 'undefined' : \"\".concat(typeof optionLabel, \" (\").concat(optionLabel, \")\");\n        console.error(\"MUI: The `getOptionLabel` method of \".concat(componentName, \" returned \").concat(erroneousReturn, \" instead of a string for \").concat(JSON.stringify(option), \".\"));\n      }\n\n      return String(optionLabel);\n    }\n\n    return optionLabel;\n  };\n\n  var ignoreFocus = React.useRef(false);\n  var firstFocus = React.useRef(true);\n  var inputRef = React.useRef(null);\n  var listboxRef = React.useRef(null);\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var _React$useState3 = React.useState(-1),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      focusedTag = _React$useState4[0],\n      setFocusedTag = _React$useState4[1];\n\n  var defaultHighlighted = autoHighlight ? 0 : -1;\n  var highlightedIndexRef = React.useRef(defaultHighlighted);\n\n  var _useControlled = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: componentName\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      value = _useControlled2[0],\n      setValueState = _useControlled2[1];\n\n  var _useControlled3 = useControlled({\n    controlled: inputValueProp,\n    default: '',\n    name: componentName,\n    state: 'inputValue'\n  }),\n      _useControlled4 = _slicedToArray(_useControlled3, 2),\n      inputValue = _useControlled4[0],\n      setInputValueState = _useControlled4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      focused = _React$useState6[0],\n      setFocused = _React$useState6[1];\n\n  var resetInputValue = React.useCallback(function (event, newValue) {\n    var newInputValue;\n\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      var optionLabel = getOptionLabel(newValue);\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n\n    if (inputValue === newInputValue) {\n      return;\n    }\n\n    setInputValueState(newInputValue);\n\n    if (onInputChange) {\n      onInputChange(event, newInputValue, 'reset');\n    }\n  }, [getOptionLabel, inputValue, multiple, onInputChange, setInputValueState]);\n  var prevValue = React.useRef();\n  React.useEffect(function () {\n    var valueChange = value !== prevValue.current;\n    prevValue.current = value;\n\n    if (focused && !valueChange) {\n      return;\n    } // Only reset the input's value when freeSolo if the component's value changes.\n\n\n    if (freeSolo && !valueChange) {\n      return;\n    }\n\n    resetInputValue(null, value);\n  }, [value, resetInputValue, focused, prevValue, freeSolo]);\n\n  var _useControlled5 = useControlled({\n    controlled: openProp,\n    default: false,\n    name: componentName,\n    state: 'open'\n  }),\n      _useControlled6 = _slicedToArray(_useControlled5, 2),\n      open = _useControlled6[0],\n      setOpenState = _useControlled6[1];\n\n  var _React$useState7 = React.useState(true),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      inputPristine = _React$useState8[0],\n      setInputPristine = _React$useState8[1];\n\n  var inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);\n  var popupOpen = open;\n  var filteredOptions = popupOpen ? filterOptions(options.filter(function (option) {\n    if (filterSelectedOptions && (multiple ? value : [value]).some(function (value2) {\n      return value2 !== null && isOptionEqualToValue(option, value2);\n    })) {\n      return false;\n    }\n\n    return true;\n  }), // we use the empty string to manipulate `filterOptions` to not filter any options\n  // i.e. the filter predicate always returns true\n  {\n    inputValue: inputValueIsSelectedValue && inputPristine ? '' : inputValue,\n    getOptionLabel: getOptionLabel\n  }) : [];\n  var listboxAvailable = open && filteredOptions.length > 0;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (value !== null && !freeSolo && options.length > 0) {\n      var missingValue = (multiple ? value : [value]).filter(function (value2) {\n        return !options.some(function (option) {\n          return isOptionEqualToValue(option, value2);\n        });\n      });\n\n      if (missingValue.length > 0) {\n        console.warn([\"MUI: The value provided to \".concat(componentName, \" is invalid.\"), \"None of the options match with `\".concat(missingValue.length > 1 ? JSON.stringify(missingValue) : JSON.stringify(missingValue[0]), \"`.\"), 'You can use the `isOptionEqualToValue` prop to customize the equality test.'].join('\\n'));\n      }\n    }\n  }\n\n  var focusTag = useEventCallback(function (tagToFocus) {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(\"[data-tag-index=\\\"\".concat(tagToFocus, \"\\\"]\")).focus();\n    }\n  }); // Ensure the focusedTag is never inconsistent\n\n  React.useEffect(function () {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index === -1) {\n      return -1;\n    }\n\n    var nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === filteredOptions.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      var option = listboxRef.current.querySelector(\"[data-option-index=\\\"\".concat(nextFocus, \"\\\"]\")); // Same logic as MenuList.js\n\n      var nextFocusDisabled = disabledItemsFocusable ? false : !option || option.disabled || option.getAttribute('aria-disabled') === 'true';\n\n      if (option && !option.hasAttribute('tabindex') || nextFocusDisabled) {\n        // Move to the next element.\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  var setHighlightedIndex = useEventCallback(function (_ref2) {\n    var event = _ref2.event,\n        index = _ref2.index,\n        _ref2$reason = _ref2.reason,\n        reason = _ref2$reason === void 0 ? 'auto' : _ref2$reason;\n    highlightedIndexRef.current = index; // does the index exist?\n\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', \"\".concat(id, \"-option-\").concat(index));\n    }\n\n    if (onHighlightChange) {\n      onHighlightChange(event, index === -1 ? null : filteredOptions[index], reason);\n    }\n\n    if (!listboxRef.current) {\n      return;\n    }\n\n    var prev = listboxRef.current.querySelector('[role=\"option\"].Mui-focused');\n\n    if (prev) {\n      prev.classList.remove('Mui-focused');\n      prev.classList.remove('Mui-focusVisible');\n    }\n\n    var listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]'); // \"No results\"\n\n    if (!listboxNode) {\n      return;\n    }\n\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n\n    var option = listboxRef.current.querySelector(\"[data-option-index=\\\"\".concat(index, \"\\\"]\"));\n\n    if (!option) {\n      return;\n    }\n\n    option.classList.add('Mui-focused');\n\n    if (reason === 'keyboard') {\n      option.classList.add('Mui-focusVisible');\n    } // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n    //\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n\n\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && reason !== 'mouse') {\n      var element = option;\n      var scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      var elementBottom = element.offsetTop + element.offsetHeight;\n\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0) < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0);\n      }\n    }\n  });\n  var changeHighlightedIndex = useEventCallback(function (_ref3) {\n    var event = _ref3.event,\n        diff = _ref3.diff,\n        _ref3$direction = _ref3.direction,\n        direction = _ref3$direction === void 0 ? 'next' : _ref3$direction,\n        _ref3$reason = _ref3.reason,\n        reason = _ref3$reason === void 0 ? 'auto' : _ref3$reason;\n\n    if (!popupOpen) {\n      return;\n    }\n\n    var getNextIndex = function getNextIndex() {\n      var maxIndex = filteredOptions.length - 1;\n\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n\n      if (diff === 'start') {\n        return 0;\n      }\n\n      if (diff === 'end') {\n        return maxIndex;\n      }\n\n      var newIndex = highlightedIndexRef.current + diff;\n\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n\n        return maxIndex;\n      }\n\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n\n        return 0;\n      }\n\n      return newIndex;\n    };\n\n    var nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex({\n      index: nextIndex,\n      reason: reason,\n      event: event\n    }); // Sync the content of the input with the highlighted option.\n\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        var option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option; // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n\n        var index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  });\n  var syncHighlightedIndex = React.useCallback(function () {\n    if (!popupOpen) {\n      return;\n    }\n\n    var valueItem = multiple ? value[0] : value; // The popup is empty, reset\n\n    if (filteredOptions.length === 0 || valueItem == null) {\n      changeHighlightedIndex({\n        diff: 'reset'\n      });\n      return;\n    }\n\n    if (!listboxRef.current) {\n      return;\n    } // Synchronize the value with the highlighted index\n\n\n    if (valueItem != null) {\n      var currentOption = filteredOptions[highlightedIndexRef.current]; // Keep the current highlighted index if possible\n\n      if (multiple && currentOption && findIndex(value, function (val) {\n        return isOptionEqualToValue(currentOption, val);\n      }) !== -1) {\n        return;\n      }\n\n      var itemIndex = findIndex(filteredOptions, function (optionItem) {\n        return isOptionEqualToValue(optionItem, valueItem);\n      });\n\n      if (itemIndex === -1) {\n        changeHighlightedIndex({\n          diff: 'reset'\n        });\n      } else {\n        setHighlightedIndex({\n          index: itemIndex\n        });\n      }\n\n      return;\n    } // Prevent the highlighted index to leak outside the boundaries.\n\n\n    if (highlightedIndexRef.current >= filteredOptions.length - 1) {\n      setHighlightedIndex({\n        index: filteredOptions.length - 1\n      });\n      return;\n    } // Restore the focus to the previous index.\n\n\n    setHighlightedIndex({\n      index: highlightedIndexRef.current\n    }); // Ignore filteredOptions (and options, isOptionEqualToValue, getOptionLabel) not to break the scroll position\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [// Only sync the highlighted index when the option switch between empty and not\n  filteredOptions.length, // Don't sync the highlighted index with the value when multiple\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  multiple ? false : value, filterSelectedOptions, changeHighlightedIndex, setHighlightedIndex, popupOpen, inputValue, multiple]);\n  var handleListboxRef = useEventCallback(function (node) {\n    setRef(listboxRef, node);\n\n    if (!node) {\n      return;\n    }\n\n    syncHighlightedIndex();\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(function () {\n      if (!inputRef.current || inputRef.current.nodeName !== 'INPUT') {\n        console.error([\"MUI: Unable to find the input element. It was resolved to \".concat(inputRef.current, \" while an HTMLInputElement was expected.\"), \"Instead, \".concat(componentName, \" expects an input element.\"), '', componentName === 'useAutocomplete' ? 'Make sure you have binded getInputProps correctly and that the normal ref/effect resolutions order is guaranteed.' : 'Make sure you have customized the input component correctly.'].join('\\n'));\n      }\n    }, [componentName]);\n  }\n\n  React.useEffect(function () {\n    syncHighlightedIndex();\n  }, [syncHighlightedIndex]);\n\n  var handleOpen = function handleOpen(event) {\n    if (open) {\n      return;\n    }\n\n    setOpenState(true);\n    setInputPristine(true);\n\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n\n  var handleClose = function handleClose(event, reason) {\n    if (!open) {\n      return;\n    }\n\n    setOpenState(false);\n\n    if (onClose) {\n      onClose(event, reason);\n    }\n  };\n\n  var handleValue = function handleValue(event, newValue, reason, details) {\n    if (value === newValue) {\n      return;\n    }\n\n    if (onChange) {\n      onChange(event, newValue, reason, details);\n    }\n\n    setValueState(newValue);\n  };\n\n  var isTouch = React.useRef(false);\n\n  var selectNewValue = function selectNewValue(event, option) {\n    var reasonProp = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'selectOption';\n    var origin = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'options';\n    var reason = reasonProp;\n    var newValue = option;\n\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n\n      if (process.env.NODE_ENV !== 'production') {\n        var matches = newValue.filter(function (val) {\n          return isOptionEqualToValue(option, val);\n        });\n\n        if (matches.length > 1) {\n          console.error([\"MUI: The `isOptionEqualToValue` method of \".concat(componentName, \" do not handle the arguments correctly.\"), \"The component expects a single value to match a given option but found \".concat(matches.length, \" matches.\")].join('\\n'));\n        }\n      }\n\n      var itemIndex = findIndex(newValue, function (valueItem) {\n        return isOptionEqualToValue(option, valueItem);\n      });\n\n      if (itemIndex === -1) {\n        newValue.push(option);\n      } else if (origin !== 'freeSolo') {\n        newValue.splice(itemIndex, 1);\n        reason = 'removeOption';\n      }\n    }\n\n    resetInputValue(event, newValue);\n    handleValue(event, newValue, reason, {\n      option: option\n    });\n\n    if (!disableCloseOnSelect && !event.ctrlKey && !event.metaKey) {\n      handleClose(event, reason);\n    }\n\n    if (blurOnSelect === true || blurOnSelect === 'touch' && isTouch.current || blurOnSelect === 'mouse' && !isTouch.current) {\n      inputRef.current.blur();\n    }\n  };\n\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n\n    var nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      var option = anchorEl.querySelector(\"[data-tag-index=\\\"\".concat(nextFocus, \"\\\"]\")); // Same logic as MenuList.js\n\n      if (!option || !option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true') {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  var handleFocusTag = function handleFocusTag(event, direction) {\n    if (!multiple) {\n      return;\n    }\n\n    handleClose(event, 'toggleInput');\n    var nextTag = focusedTag;\n\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n\n  var handleClear = function handleClear(event) {\n    ignoreFocus.current = true;\n    setInputValueState('');\n\n    if (onInputChange) {\n      onInputChange(event, '', 'clear');\n    }\n\n    handleValue(event, multiple ? [] : null, 'clear');\n  };\n\n  var handleKeyDown = function handleKeyDown(other) {\n    return function (event) {\n      if (other.onKeyDown) {\n        other.onKeyDown(event);\n      }\n\n      if (event.defaultMuiPrevented) {\n        return;\n      }\n\n      if (focusedTag !== -1 && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n        setFocusedTag(-1);\n        focusTag(-1);\n      } // Wait until IME is settled.\n\n\n      if (event.which !== 229) {\n        switch (event.key) {\n          case 'Home':\n            if (popupOpen && handleHomeEndKeys) {\n              // Prevent scroll of the page\n              event.preventDefault();\n              changeHighlightedIndex({\n                diff: 'start',\n                direction: 'next',\n                reason: 'keyboard',\n                event: event\n              });\n            }\n\n            break;\n\n          case 'End':\n            if (popupOpen && handleHomeEndKeys) {\n              // Prevent scroll of the page\n              event.preventDefault();\n              changeHighlightedIndex({\n                diff: 'end',\n                direction: 'previous',\n                reason: 'keyboard',\n                event: event\n              });\n            }\n\n            break;\n\n          case 'PageUp':\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: -pageSize,\n              direction: 'previous',\n              reason: 'keyboard',\n              event: event\n            });\n            handleOpen(event);\n            break;\n\n          case 'PageDown':\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: pageSize,\n              direction: 'next',\n              reason: 'keyboard',\n              event: event\n            });\n            handleOpen(event);\n            break;\n\n          case 'ArrowDown':\n            // Prevent cursor move\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 1,\n              direction: 'next',\n              reason: 'keyboard',\n              event: event\n            });\n            handleOpen(event);\n            break;\n\n          case 'ArrowUp':\n            // Prevent cursor move\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: -1,\n              direction: 'previous',\n              reason: 'keyboard',\n              event: event\n            });\n            handleOpen(event);\n            break;\n\n          case 'ArrowLeft':\n            handleFocusTag(event, 'previous');\n            break;\n\n          case 'ArrowRight':\n            handleFocusTag(event, 'next');\n            break;\n\n          case 'Enter':\n            if (highlightedIndexRef.current !== -1 && popupOpen) {\n              var option = filteredOptions[highlightedIndexRef.current];\n              var disabled = getOptionDisabled ? getOptionDisabled(option) : false; // Avoid early form validation, let the end-users continue filling the form.\n\n              event.preventDefault();\n\n              if (disabled) {\n                return;\n              }\n\n              selectNewValue(event, option, 'selectOption'); // Move the selection to the end.\n\n              if (autoComplete) {\n                inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n              }\n            } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\n              if (multiple) {\n                // Allow people to add new values before they submit the form.\n                event.preventDefault();\n              }\n\n              selectNewValue(event, inputValue, 'createOption', 'freeSolo');\n            }\n\n            break;\n\n          case 'Escape':\n            if (popupOpen) {\n              // Avoid Opera to exit fullscreen mode.\n              event.preventDefault(); // Avoid the Modal to handle the event.\n\n              event.stopPropagation();\n              handleClose(event, 'escape');\n            } else if (clearOnEscape && (inputValue !== '' || multiple && value.length > 0)) {\n              // Avoid Opera to exit fullscreen mode.\n              event.preventDefault(); // Avoid the Modal to handle the event.\n\n              event.stopPropagation();\n              handleClear(event);\n            }\n\n            break;\n\n          case 'Backspace':\n            if (multiple && inputValue === '' && value.length > 0) {\n              var index = focusedTag === -1 ? value.length - 1 : focusedTag;\n              var newValue = value.slice();\n              newValue.splice(index, 1);\n              handleValue(event, newValue, 'removeOption', {\n                option: value[index]\n              });\n            }\n\n            break;\n\n          default:\n        }\n      }\n    };\n  };\n\n  var handleFocus = function handleFocus(event) {\n    setFocused(true);\n\n    if (openOnFocus && !ignoreFocus.current) {\n      handleOpen(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    // Ignore the event when using the scrollbar with IE11\n    if (listboxRef.current !== null && listboxRef.current.parentElement.contains(document.activeElement)) {\n      inputRef.current.focus();\n      return;\n    }\n\n    setFocused(false);\n    firstFocus.current = true;\n    ignoreFocus.current = false;\n\n    if (autoSelect && highlightedIndexRef.current !== -1 && popupOpen) {\n      selectNewValue(event, filteredOptions[highlightedIndexRef.current], 'blur');\n    } else if (autoSelect && freeSolo && inputValue !== '') {\n      selectNewValue(event, inputValue, 'blur', 'freeSolo');\n    } else if (clearOnBlur) {\n      resetInputValue(event, value);\n    }\n\n    handleClose(event, 'blur');\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newValue = event.target.value;\n\n    if (inputValue !== newValue) {\n      setInputValueState(newValue);\n      setInputPristine(false);\n\n      if (onInputChange) {\n        onInputChange(event, newValue, 'input');\n      }\n    }\n\n    if (newValue === '') {\n      if (!disableClearable && !multiple) {\n        handleValue(event, null, 'clear');\n      }\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  var handleOptionMouseOver = function handleOptionMouseOver(event) {\n    setHighlightedIndex({\n      event: event,\n      index: Number(event.currentTarget.getAttribute('data-option-index')),\n      reason: 'mouse'\n    });\n  };\n\n  var handleOptionTouchStart = function handleOptionTouchStart() {\n    isTouch.current = true;\n  };\n\n  var handleOptionClick = function handleOptionClick(event) {\n    var index = Number(event.currentTarget.getAttribute('data-option-index'));\n    selectNewValue(event, filteredOptions[index], 'selectOption');\n    isTouch.current = false;\n  };\n\n  var handleTagDelete = function handleTagDelete(index) {\n    return function (event) {\n      var newValue = value.slice();\n      newValue.splice(index, 1);\n      handleValue(event, newValue, 'removeOption', {\n        option: value[index]\n      });\n    };\n  };\n\n  var handlePopupIndicator = function handlePopupIndicator(event) {\n    if (open) {\n      handleClose(event, 'toggleInput');\n    } else {\n      handleOpen(event);\n    }\n  }; // Prevent input blur when interacting with the combobox\n\n\n  var handleMouseDown = function handleMouseDown(event) {\n    if (event.target.getAttribute('id') !== id) {\n      event.preventDefault();\n    }\n  }; // Focus the input when interacting with the combobox\n\n\n  var handleClick = function handleClick() {\n    inputRef.current.focus();\n\n    if (selectOnFocus && firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {\n      inputRef.current.select();\n    }\n\n    firstFocus.current = false;\n  };\n\n  var handleInputMouseDown = function handleInputMouseDown(event) {\n    if (inputValue === '' || !open) {\n      handlePopupIndicator(event);\n    }\n  };\n\n  var dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  var groupedOptions = filteredOptions;\n\n  if (groupBy) {\n    // used to keep track of key and indexes in the result array\n    var indexBy = new Map();\n    var warn = false;\n    groupedOptions = filteredOptions.reduce(function (acc, option, index) {\n      var group = groupBy(option);\n\n      if (acc.length > 0 && acc[acc.length - 1].group === group) {\n        acc[acc.length - 1].options.push(option);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          if (indexBy.get(group) && !warn) {\n            console.warn(\"MUI: The options provided combined with the `groupBy` method of \".concat(componentName, \" returns duplicated headers.\"), 'You can solve the issue by sorting the options with the output of `groupBy`.');\n            warn = true;\n          }\n\n          indexBy.set(group, true);\n        }\n\n        acc.push({\n          key: index,\n          index: index,\n          group: group,\n          options: [option]\n        });\n      }\n\n      return acc;\n    }, []);\n  }\n\n  if (disabledProp && focused) {\n    handleBlur();\n  }\n\n  return {\n    getRootProps: function getRootProps() {\n      var other = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _extends({\n        'aria-owns': listboxAvailable ? \"\".concat(id, \"-listbox\") : null,\n        role: 'combobox',\n        'aria-expanded': listboxAvailable\n      }, other, {\n        onKeyDown: handleKeyDown(other),\n        onMouseDown: handleMouseDown,\n        onClick: handleClick\n      });\n    },\n    getInputLabelProps: function getInputLabelProps() {\n      return {\n        id: \"\".concat(id, \"-label\"),\n        htmlFor: id\n      };\n    },\n    getInputProps: function getInputProps() {\n      return {\n        id: id,\n        value: inputValue,\n        onBlur: handleBlur,\n        onFocus: handleFocus,\n        onChange: handleInputChange,\n        onMouseDown: handleInputMouseDown,\n        // if open then this is handled imperativeley so don't let react override\n        // only have an opinion about this when closed\n        'aria-activedescendant': popupOpen ? '' : null,\n        'aria-autocomplete': autoComplete ? 'both' : 'list',\n        'aria-controls': listboxAvailable ? \"\".concat(id, \"-listbox\") : null,\n        // Disable browser's suggestion that might overlap with the popup.\n        // Handle autocomplete but not autofill.\n        autoComplete: 'off',\n        ref: inputRef,\n        autoCapitalize: 'none',\n        spellCheck: 'false'\n      };\n    },\n    getClearProps: function getClearProps() {\n      return {\n        tabIndex: -1,\n        onClick: handleClear\n      };\n    },\n    getPopupIndicatorProps: function getPopupIndicatorProps() {\n      return {\n        tabIndex: -1,\n        onClick: handlePopupIndicator\n      };\n    },\n    getTagProps: function getTagProps(_ref4) {\n      var index = _ref4.index;\n      return {\n        key: index,\n        'data-tag-index': index,\n        tabIndex: -1,\n        onDelete: handleTagDelete(index)\n      };\n    },\n    getListboxProps: function getListboxProps() {\n      return {\n        role: 'listbox',\n        id: \"\".concat(id, \"-listbox\"),\n        'aria-labelledby': \"\".concat(id, \"-label\"),\n        ref: handleListboxRef,\n        onMouseDown: function onMouseDown(event) {\n          // Prevent blur\n          event.preventDefault();\n        }\n      };\n    },\n    getOptionProps: function getOptionProps(_ref5) {\n      var index = _ref5.index,\n          option = _ref5.option;\n      var selected = (multiple ? value : [value]).some(function (value2) {\n        return value2 != null && isOptionEqualToValue(option, value2);\n      });\n      var disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        key: getOptionLabel(option),\n        tabIndex: -1,\n        role: 'option',\n        id: \"\".concat(id, \"-option-\").concat(index),\n        onMouseOver: handleOptionMouseOver,\n        onClick: handleOptionClick,\n        onTouchStart: handleOptionTouchStart,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id: id,\n    inputValue: inputValue,\n    value: value,\n    dirty: dirty,\n    popupOpen: popupOpen,\n    focused: focused || focusedTag !== -1,\n    anchorEl: anchorEl,\n    setAnchorEl: setAnchorEl,\n    focusedTag: focusedTag,\n    groupedOptions: groupedOptions\n  };\n}","map":{"version":3,"sources":["/Users/davidmunechika/Documents/Code/Research/visual-auditor/visual-auditor-app/node_modules/@mui/core/AutocompleteUnstyled/useAutocomplete.js"],"names":["_extends","React","unstable_setRef","setRef","unstable_useEventCallback","useEventCallback","unstable_useControlled","useControlled","unstable_useId","useId","stripDiacritics","string","normalize","replace","createFilterOptions","config","ignoreAccents","ignoreCase","limit","matchFrom","stringify","trim","options","inputValue","getOptionLabel","input","toLowerCase","filteredOptions","filter","option","candidate","indexOf","slice","findIndex","array","comp","i","length","defaultFilterOptions","pageSize","useAutocomplete","props","autoComplete","autoHighlight","autoSelect","blurOnSelect","disabledProp","disabled","clearOnBlur","freeSolo","clearOnEscape","componentName","defaultValue","multiple","disableClearable","disableCloseOnSelect","disabledItemsFocusable","disableListWrap","filterOptions","filterSelectedOptions","getOptionDisabled","getOptionLabelProp","_option$label","label","isOptionEqualToValue","value","groupBy","handleHomeEndKeys","idProp","id","includeInputInList","inputValueProp","onChange","onClose","onHighlightChange","onInputChange","onOpen","openProp","open","openOnFocus","selectOnFocus","valueProp","optionLabel","process","env","NODE_ENV","erroneousReturn","undefined","console","error","JSON","String","ignoreFocus","useRef","firstFocus","inputRef","listboxRef","useState","anchorEl","setAnchorEl","focusedTag","setFocusedTag","defaultHighlighted","highlightedIndexRef","controlled","default","name","setValueState","state","setInputValueState","focused","setFocused","resetInputValue","useCallback","event","newValue","newInputValue","prevValue","useEffect","valueChange","current","setOpenState","inputPristine","setInputPristine","inputValueIsSelectedValue","popupOpen","some","value2","listboxAvailable","missingValue","warn","join","focusTag","tagToFocus","focus","querySelector","validOptionIndex","index","direction","nextFocus","nextFocusDisabled","getAttribute","hasAttribute","setHighlightedIndex","reason","removeAttribute","setAttribute","prev","classList","remove","listboxNode","parentElement","scrollTop","add","scrollHeight","clientHeight","element","scrollBottom","elementBottom","offsetTop","offsetHeight","changeHighlightedIndex","diff","getNextIndex","maxIndex","newIndex","Math","abs","nextIndex","setSelectionRange","syncHighlightedIndex","valueItem","currentOption","val","itemIndex","optionItem","handleListboxRef","node","nodeName","handleOpen","handleClose","handleValue","details","isTouch","selectNewValue","reasonProp","origin","Array","isArray","matches","push","splice","ctrlKey","metaKey","blur","validTagIndex","handleFocusTag","nextTag","handleClear","handleKeyDown","other","onKeyDown","defaultMuiPrevented","key","which","preventDefault","stopPropagation","handleFocus","handleBlur","contains","document","activeElement","handleInputChange","target","handleOptionMouseOver","Number","currentTarget","handleOptionTouchStart","handleOptionClick","handleTagDelete","handlePopupIndicator","handleMouseDown","handleClick","selectionEnd","selectionStart","select","handleInputMouseDown","dirty","groupedOptions","indexBy","Map","reduce","acc","group","get","set","getRootProps","role","onMouseDown","onClick","getInputLabelProps","htmlFor","getInputProps","onBlur","onFocus","ref","autoCapitalize","spellCheck","getClearProps","tabIndex","getPopupIndicatorProps","getTagProps","onDelete","getListboxProps","getOptionProps","selected","onMouseOver","onTouchStart"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\n\n/* eslint-disable no-constant-condition */\nimport * as React from 'react';\nimport { unstable_setRef as setRef, unstable_useEventCallback as useEventCallback, unstable_useControlled as useControlled, unstable_useId as useId } from '@mui/utils'; // https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE11 support for this feature\n\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : string;\n}\n\nexport function createFilterOptions(config = {}) {\n  const {\n    ignoreAccents = true,\n    ignoreCase = true,\n    limit,\n    matchFrom = 'any',\n    stringify,\n    trim = false\n  } = config;\n  return (options, {\n    inputValue,\n    getOptionLabel\n  }) => {\n    let input = trim ? inputValue.trim() : inputValue;\n\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n\n    const filteredOptions = options.filter(option => {\n      let candidate = (stringify || getOptionLabel)(option);\n\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n    return typeof limit === 'number' ? filteredOptions.slice(0, limit) : filteredOptions;\n  };\n} // To replace with .findIndex() once we stop IE11 support.\n\nfunction findIndex(array, comp) {\n  for (let i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nconst defaultFilterOptions = createFilterOptions(); // Number of options to jump in list box when pageup and pagedown keys are used.\n\nconst pageSize = 5;\nexport default function useAutocomplete(props) {\n  const {\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    blurOnSelect = false,\n    disabled: disabledProp,\n    clearOnBlur = !props.freeSolo,\n    clearOnEscape = false,\n    componentName = 'useAutocomplete',\n    defaultValue = props.multiple ? [] : null,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    filterOptions = defaultFilterOptions,\n    filterSelectedOptions = false,\n    freeSolo = false,\n    getOptionDisabled,\n    getOptionLabel: getOptionLabelProp = option => {\n      var _option$label;\n\n      return (_option$label = option.label) != null ? _option$label : option;\n    },\n    isOptionEqualToValue = (option, value) => option === value,\n    groupBy,\n    handleHomeEndKeys = !props.freeSolo,\n    id: idProp,\n    includeInputInList = false,\n    inputValue: inputValueProp,\n    multiple = false,\n    onChange,\n    onClose,\n    onHighlightChange,\n    onInputChange,\n    onOpen,\n    open: openProp,\n    openOnFocus = false,\n    options,\n    selectOnFocus = !props.freeSolo,\n    value: valueProp\n  } = props;\n  const id = useId(idProp);\n  let getOptionLabel = getOptionLabelProp;\n\n  getOptionLabel = option => {\n    const optionLabel = getOptionLabelProp(option);\n\n    if (typeof optionLabel !== 'string') {\n      if (process.env.NODE_ENV !== 'production') {\n        const erroneousReturn = optionLabel === undefined ? 'undefined' : `${typeof optionLabel} (${optionLabel})`;\n        console.error(`MUI: The \\`getOptionLabel\\` method of ${componentName} returned ${erroneousReturn} instead of a string for ${JSON.stringify(option)}.`);\n      }\n\n      return String(optionLabel);\n    }\n\n    return optionLabel;\n  };\n\n  const ignoreFocus = React.useRef(false);\n  const firstFocus = React.useRef(true);\n  const inputRef = React.useRef(null);\n  const listboxRef = React.useRef(null);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [focusedTag, setFocusedTag] = React.useState(-1);\n  const defaultHighlighted = autoHighlight ? 0 : -1;\n  const highlightedIndexRef = React.useRef(defaultHighlighted);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: componentName\n  });\n  const [inputValue, setInputValueState] = useControlled({\n    controlled: inputValueProp,\n    default: '',\n    name: componentName,\n    state: 'inputValue'\n  });\n  const [focused, setFocused] = React.useState(false);\n  const resetInputValue = React.useCallback((event, newValue) => {\n    let newInputValue;\n\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      const optionLabel = getOptionLabel(newValue);\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n\n    if (inputValue === newInputValue) {\n      return;\n    }\n\n    setInputValueState(newInputValue);\n\n    if (onInputChange) {\n      onInputChange(event, newInputValue, 'reset');\n    }\n  }, [getOptionLabel, inputValue, multiple, onInputChange, setInputValueState]);\n  const prevValue = React.useRef();\n  React.useEffect(() => {\n    const valueChange = value !== prevValue.current;\n    prevValue.current = value;\n\n    if (focused && !valueChange) {\n      return;\n    } // Only reset the input's value when freeSolo if the component's value changes.\n\n\n    if (freeSolo && !valueChange) {\n      return;\n    }\n\n    resetInputValue(null, value);\n  }, [value, resetInputValue, focused, prevValue, freeSolo]);\n  const [open, setOpenState] = useControlled({\n    controlled: openProp,\n    default: false,\n    name: componentName,\n    state: 'open'\n  });\n  const [inputPristine, setInputPristine] = React.useState(true);\n  const inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);\n  const popupOpen = open;\n  const filteredOptions = popupOpen ? filterOptions(options.filter(option => {\n    if (filterSelectedOptions && (multiple ? value : [value]).some(value2 => value2 !== null && isOptionEqualToValue(option, value2))) {\n      return false;\n    }\n\n    return true;\n  }), // we use the empty string to manipulate `filterOptions` to not filter any options\n  // i.e. the filter predicate always returns true\n  {\n    inputValue: inputValueIsSelectedValue && inputPristine ? '' : inputValue,\n    getOptionLabel\n  }) : [];\n  const listboxAvailable = open && filteredOptions.length > 0;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (value !== null && !freeSolo && options.length > 0) {\n      const missingValue = (multiple ? value : [value]).filter(value2 => !options.some(option => isOptionEqualToValue(option, value2)));\n\n      if (missingValue.length > 0) {\n        console.warn([`MUI: The value provided to ${componentName} is invalid.`, `None of the options match with \\`${missingValue.length > 1 ? JSON.stringify(missingValue) : JSON.stringify(missingValue[0])}\\`.`, 'You can use the `isOptionEqualToValue` prop to customize the equality test.'].join('\\n'));\n      }\n    }\n  }\n\n  const focusTag = useEventCallback(tagToFocus => {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(`[data-tag-index=\"${tagToFocus}\"]`).focus();\n    }\n  }); // Ensure the focusedTag is never inconsistent\n\n  React.useEffect(() => {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index === -1) {\n      return -1;\n    }\n\n    let nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === filteredOptions.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      const option = listboxRef.current.querySelector(`[data-option-index=\"${nextFocus}\"]`); // Same logic as MenuList.js\n\n      const nextFocusDisabled = disabledItemsFocusable ? false : !option || option.disabled || option.getAttribute('aria-disabled') === 'true';\n\n      if (option && !option.hasAttribute('tabindex') || nextFocusDisabled) {\n        // Move to the next element.\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  const setHighlightedIndex = useEventCallback(({\n    event,\n    index,\n    reason = 'auto'\n  }) => {\n    highlightedIndexRef.current = index; // does the index exist?\n\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', `${id}-option-${index}`);\n    }\n\n    if (onHighlightChange) {\n      onHighlightChange(event, index === -1 ? null : filteredOptions[index], reason);\n    }\n\n    if (!listboxRef.current) {\n      return;\n    }\n\n    const prev = listboxRef.current.querySelector('[role=\"option\"].Mui-focused');\n\n    if (prev) {\n      prev.classList.remove('Mui-focused');\n      prev.classList.remove('Mui-focusVisible');\n    }\n\n    const listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]'); // \"No results\"\n\n    if (!listboxNode) {\n      return;\n    }\n\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n\n    const option = listboxRef.current.querySelector(`[data-option-index=\"${index}\"]`);\n\n    if (!option) {\n      return;\n    }\n\n    option.classList.add('Mui-focused');\n\n    if (reason === 'keyboard') {\n      option.classList.add('Mui-focusVisible');\n    } // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n    //\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n\n\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && reason !== 'mouse') {\n      const element = option;\n      const scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      const elementBottom = element.offsetTop + element.offsetHeight;\n\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0) < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0);\n      }\n    }\n  });\n  const changeHighlightedIndex = useEventCallback(({\n    event,\n    diff,\n    direction = 'next',\n    reason = 'auto'\n  }) => {\n    if (!popupOpen) {\n      return;\n    }\n\n    const getNextIndex = () => {\n      const maxIndex = filteredOptions.length - 1;\n\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n\n      if (diff === 'start') {\n        return 0;\n      }\n\n      if (diff === 'end') {\n        return maxIndex;\n      }\n\n      const newIndex = highlightedIndexRef.current + diff;\n\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n\n        return maxIndex;\n      }\n\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n\n        return 0;\n      }\n\n      return newIndex;\n    };\n\n    const nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex({\n      index: nextIndex,\n      reason,\n      event\n    }); // Sync the content of the input with the highlighted option.\n\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        const option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option; // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n\n        const index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  });\n  const syncHighlightedIndex = React.useCallback(() => {\n    if (!popupOpen) {\n      return;\n    }\n\n    const valueItem = multiple ? value[0] : value; // The popup is empty, reset\n\n    if (filteredOptions.length === 0 || valueItem == null) {\n      changeHighlightedIndex({\n        diff: 'reset'\n      });\n      return;\n    }\n\n    if (!listboxRef.current) {\n      return;\n    } // Synchronize the value with the highlighted index\n\n\n    if (valueItem != null) {\n      const currentOption = filteredOptions[highlightedIndexRef.current]; // Keep the current highlighted index if possible\n\n      if (multiple && currentOption && findIndex(value, val => isOptionEqualToValue(currentOption, val)) !== -1) {\n        return;\n      }\n\n      const itemIndex = findIndex(filteredOptions, optionItem => isOptionEqualToValue(optionItem, valueItem));\n\n      if (itemIndex === -1) {\n        changeHighlightedIndex({\n          diff: 'reset'\n        });\n      } else {\n        setHighlightedIndex({\n          index: itemIndex\n        });\n      }\n\n      return;\n    } // Prevent the highlighted index to leak outside the boundaries.\n\n\n    if (highlightedIndexRef.current >= filteredOptions.length - 1) {\n      setHighlightedIndex({\n        index: filteredOptions.length - 1\n      });\n      return;\n    } // Restore the focus to the previous index.\n\n\n    setHighlightedIndex({\n      index: highlightedIndexRef.current\n    }); // Ignore filteredOptions (and options, isOptionEqualToValue, getOptionLabel) not to break the scroll position\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [// Only sync the highlighted index when the option switch between empty and not\n  filteredOptions.length, // Don't sync the highlighted index with the value when multiple\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  multiple ? false : value, filterSelectedOptions, changeHighlightedIndex, setHighlightedIndex, popupOpen, inputValue, multiple]);\n  const handleListboxRef = useEventCallback(node => {\n    setRef(listboxRef, node);\n\n    if (!node) {\n      return;\n    }\n\n    syncHighlightedIndex();\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (!inputRef.current || inputRef.current.nodeName !== 'INPUT') {\n        console.error([`MUI: Unable to find the input element. It was resolved to ${inputRef.current} while an HTMLInputElement was expected.`, `Instead, ${componentName} expects an input element.`, '', componentName === 'useAutocomplete' ? 'Make sure you have binded getInputProps correctly and that the normal ref/effect resolutions order is guaranteed.' : 'Make sure you have customized the input component correctly.'].join('\\n'));\n      }\n    }, [componentName]);\n  }\n\n  React.useEffect(() => {\n    syncHighlightedIndex();\n  }, [syncHighlightedIndex]);\n\n  const handleOpen = event => {\n    if (open) {\n      return;\n    }\n\n    setOpenState(true);\n    setInputPristine(true);\n\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n\n  const handleClose = (event, reason) => {\n    if (!open) {\n      return;\n    }\n\n    setOpenState(false);\n\n    if (onClose) {\n      onClose(event, reason);\n    }\n  };\n\n  const handleValue = (event, newValue, reason, details) => {\n    if (value === newValue) {\n      return;\n    }\n\n    if (onChange) {\n      onChange(event, newValue, reason, details);\n    }\n\n    setValueState(newValue);\n  };\n\n  const isTouch = React.useRef(false);\n\n  const selectNewValue = (event, option, reasonProp = 'selectOption', origin = 'options') => {\n    let reason = reasonProp;\n    let newValue = option;\n\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n\n      if (process.env.NODE_ENV !== 'production') {\n        const matches = newValue.filter(val => isOptionEqualToValue(option, val));\n\n        if (matches.length > 1) {\n          console.error([`MUI: The \\`isOptionEqualToValue\\` method of ${componentName} do not handle the arguments correctly.`, `The component expects a single value to match a given option but found ${matches.length} matches.`].join('\\n'));\n        }\n      }\n\n      const itemIndex = findIndex(newValue, valueItem => isOptionEqualToValue(option, valueItem));\n\n      if (itemIndex === -1) {\n        newValue.push(option);\n      } else if (origin !== 'freeSolo') {\n        newValue.splice(itemIndex, 1);\n        reason = 'removeOption';\n      }\n    }\n\n    resetInputValue(event, newValue);\n    handleValue(event, newValue, reason, {\n      option\n    });\n\n    if (!disableCloseOnSelect && !event.ctrlKey && !event.metaKey) {\n      handleClose(event, reason);\n    }\n\n    if (blurOnSelect === true || blurOnSelect === 'touch' && isTouch.current || blurOnSelect === 'mouse' && !isTouch.current) {\n      inputRef.current.blur();\n    }\n  };\n\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n\n    let nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      const option = anchorEl.querySelector(`[data-tag-index=\"${nextFocus}\"]`); // Same logic as MenuList.js\n\n      if (!option || !option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true') {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  const handleFocusTag = (event, direction) => {\n    if (!multiple) {\n      return;\n    }\n\n    handleClose(event, 'toggleInput');\n    let nextTag = focusedTag;\n\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n\n  const handleClear = event => {\n    ignoreFocus.current = true;\n    setInputValueState('');\n\n    if (onInputChange) {\n      onInputChange(event, '', 'clear');\n    }\n\n    handleValue(event, multiple ? [] : null, 'clear');\n  };\n\n  const handleKeyDown = other => event => {\n    if (other.onKeyDown) {\n      other.onKeyDown(event);\n    }\n\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n\n    if (focusedTag !== -1 && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    } // Wait until IME is settled.\n\n\n    if (event.which !== 229) {\n      switch (event.key) {\n        case 'Home':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'start',\n              direction: 'next',\n              reason: 'keyboard',\n              event\n            });\n          }\n\n          break;\n\n        case 'End':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'end',\n              direction: 'previous',\n              reason: 'keyboard',\n              event\n            });\n          }\n\n          break;\n\n        case 'PageUp':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -pageSize,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'PageDown':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: pageSize,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowDown':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: 1,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowUp':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -1,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowLeft':\n          handleFocusTag(event, 'previous');\n          break;\n\n        case 'ArrowRight':\n          handleFocusTag(event, 'next');\n          break;\n\n        case 'Enter':\n          if (highlightedIndexRef.current !== -1 && popupOpen) {\n            const option = filteredOptions[highlightedIndexRef.current];\n            const disabled = getOptionDisabled ? getOptionDisabled(option) : false; // Avoid early form validation, let the end-users continue filling the form.\n\n            event.preventDefault();\n\n            if (disabled) {\n              return;\n            }\n\n            selectNewValue(event, option, 'selectOption'); // Move the selection to the end.\n\n            if (autoComplete) {\n              inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n            }\n          } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\n            if (multiple) {\n              // Allow people to add new values before they submit the form.\n              event.preventDefault();\n            }\n\n            selectNewValue(event, inputValue, 'createOption', 'freeSolo');\n          }\n\n          break;\n\n        case 'Escape':\n          if (popupOpen) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClose(event, 'escape');\n          } else if (clearOnEscape && (inputValue !== '' || multiple && value.length > 0)) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClear(event);\n          }\n\n          break;\n\n        case 'Backspace':\n          if (multiple && inputValue === '' && value.length > 0) {\n            const index = focusedTag === -1 ? value.length - 1 : focusedTag;\n            const newValue = value.slice();\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'removeOption', {\n              option: value[index]\n            });\n          }\n\n          break;\n\n        default:\n      }\n    }\n  };\n\n  const handleFocus = event => {\n    setFocused(true);\n\n    if (openOnFocus && !ignoreFocus.current) {\n      handleOpen(event);\n    }\n  };\n\n  const handleBlur = event => {\n    // Ignore the event when using the scrollbar with IE11\n    if (listboxRef.current !== null && listboxRef.current.parentElement.contains(document.activeElement)) {\n      inputRef.current.focus();\n      return;\n    }\n\n    setFocused(false);\n    firstFocus.current = true;\n    ignoreFocus.current = false;\n\n    if (autoSelect && highlightedIndexRef.current !== -1 && popupOpen) {\n      selectNewValue(event, filteredOptions[highlightedIndexRef.current], 'blur');\n    } else if (autoSelect && freeSolo && inputValue !== '') {\n      selectNewValue(event, inputValue, 'blur', 'freeSolo');\n    } else if (clearOnBlur) {\n      resetInputValue(event, value);\n    }\n\n    handleClose(event, 'blur');\n  };\n\n  const handleInputChange = event => {\n    const newValue = event.target.value;\n\n    if (inputValue !== newValue) {\n      setInputValueState(newValue);\n      setInputPristine(false);\n\n      if (onInputChange) {\n        onInputChange(event, newValue, 'input');\n      }\n    }\n\n    if (newValue === '') {\n      if (!disableClearable && !multiple) {\n        handleValue(event, null, 'clear');\n      }\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  const handleOptionMouseOver = event => {\n    setHighlightedIndex({\n      event,\n      index: Number(event.currentTarget.getAttribute('data-option-index')),\n      reason: 'mouse'\n    });\n  };\n\n  const handleOptionTouchStart = () => {\n    isTouch.current = true;\n  };\n\n  const handleOptionClick = event => {\n    const index = Number(event.currentTarget.getAttribute('data-option-index'));\n    selectNewValue(event, filteredOptions[index], 'selectOption');\n    isTouch.current = false;\n  };\n\n  const handleTagDelete = index => event => {\n    const newValue = value.slice();\n    newValue.splice(index, 1);\n    handleValue(event, newValue, 'removeOption', {\n      option: value[index]\n    });\n  };\n\n  const handlePopupIndicator = event => {\n    if (open) {\n      handleClose(event, 'toggleInput');\n    } else {\n      handleOpen(event);\n    }\n  }; // Prevent input blur when interacting with the combobox\n\n\n  const handleMouseDown = event => {\n    if (event.target.getAttribute('id') !== id) {\n      event.preventDefault();\n    }\n  }; // Focus the input when interacting with the combobox\n\n\n  const handleClick = () => {\n    inputRef.current.focus();\n\n    if (selectOnFocus && firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {\n      inputRef.current.select();\n    }\n\n    firstFocus.current = false;\n  };\n\n  const handleInputMouseDown = event => {\n    if (inputValue === '' || !open) {\n      handlePopupIndicator(event);\n    }\n  };\n\n  let dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  let groupedOptions = filteredOptions;\n\n  if (groupBy) {\n    // used to keep track of key and indexes in the result array\n    const indexBy = new Map();\n    let warn = false;\n    groupedOptions = filteredOptions.reduce((acc, option, index) => {\n      const group = groupBy(option);\n\n      if (acc.length > 0 && acc[acc.length - 1].group === group) {\n        acc[acc.length - 1].options.push(option);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          if (indexBy.get(group) && !warn) {\n            console.warn(`MUI: The options provided combined with the \\`groupBy\\` method of ${componentName} returns duplicated headers.`, 'You can solve the issue by sorting the options with the output of `groupBy`.');\n            warn = true;\n          }\n\n          indexBy.set(group, true);\n        }\n\n        acc.push({\n          key: index,\n          index,\n          group,\n          options: [option]\n        });\n      }\n\n      return acc;\n    }, []);\n  }\n\n  if (disabledProp && focused) {\n    handleBlur();\n  }\n\n  return {\n    getRootProps: (other = {}) => _extends({\n      'aria-owns': listboxAvailable ? `${id}-listbox` : null,\n      role: 'combobox',\n      'aria-expanded': listboxAvailable\n    }, other, {\n      onKeyDown: handleKeyDown(other),\n      onMouseDown: handleMouseDown,\n      onClick: handleClick\n    }),\n    getInputLabelProps: () => ({\n      id: `${id}-label`,\n      htmlFor: id\n    }),\n    getInputProps: () => ({\n      id,\n      value: inputValue,\n      onBlur: handleBlur,\n      onFocus: handleFocus,\n      onChange: handleInputChange,\n      onMouseDown: handleInputMouseDown,\n      // if open then this is handled imperativeley so don't let react override\n      // only have an opinion about this when closed\n      'aria-activedescendant': popupOpen ? '' : null,\n      'aria-autocomplete': autoComplete ? 'both' : 'list',\n      'aria-controls': listboxAvailable ? `${id}-listbox` : null,\n      // Disable browser's suggestion that might overlap with the popup.\n      // Handle autocomplete but not autofill.\n      autoComplete: 'off',\n      ref: inputRef,\n      autoCapitalize: 'none',\n      spellCheck: 'false'\n    }),\n    getClearProps: () => ({\n      tabIndex: -1,\n      onClick: handleClear\n    }),\n    getPopupIndicatorProps: () => ({\n      tabIndex: -1,\n      onClick: handlePopupIndicator\n    }),\n    getTagProps: ({\n      index\n    }) => ({\n      key: index,\n      'data-tag-index': index,\n      tabIndex: -1,\n      onDelete: handleTagDelete(index)\n    }),\n    getListboxProps: () => ({\n      role: 'listbox',\n      id: `${id}-listbox`,\n      'aria-labelledby': `${id}-label`,\n      ref: handleListboxRef,\n      onMouseDown: event => {\n        // Prevent blur\n        event.preventDefault();\n      }\n    }),\n    getOptionProps: ({\n      index,\n      option\n    }) => {\n      const selected = (multiple ? value : [value]).some(value2 => value2 != null && isOptionEqualToValue(option, value2));\n      const disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        key: getOptionLabel(option),\n        tabIndex: -1,\n        role: 'option',\n        id: `${id}-option-${index}`,\n        onMouseOver: handleOptionMouseOver,\n        onClick: handleOptionClick,\n        onTouchStart: handleOptionTouchStart,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id,\n    inputValue,\n    value,\n    dirty,\n    popupOpen,\n    focused: focused || focusedTag !== -1,\n    anchorEl,\n    setAnchorEl,\n    focusedTag,\n    groupedOptions\n  };\n}"]},"metadata":{},"sourceType":"module"}