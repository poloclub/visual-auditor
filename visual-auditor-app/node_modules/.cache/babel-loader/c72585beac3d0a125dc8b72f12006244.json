{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/davidmunechika/Documents/Code/Research/visual-auditor/visual-auditor-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nexport default function variance(values, valueof) {\n  var count = 0;\n  var delta;\n  var mean = 0;\n  var sum = 0;\n\n  if (valueof === undefined) {\n    var _iterator = _createForOfIteratorHelper(values),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var value = _step.value;\n\n        if (value != null && (value = +value) >= value) {\n          delta = value - mean;\n          mean += delta / ++count;\n          sum += delta * (value - mean);\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  } else {\n    var index = -1;\n\n    var _iterator2 = _createForOfIteratorHelper(values),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var _value = _step2.value;\n\n        if ((_value = valueof(_value, ++index, values)) != null && (_value = +_value) >= _value) {\n          delta = _value - mean;\n          mean += delta / ++count;\n          sum += delta * (_value - mean);\n        }\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  }\n\n  if (count > 1) return sum / (count - 1);\n}","map":{"version":3,"sources":["/Users/davidmunechika/Documents/Code/Research/visual-auditor/visual-auditor-app/node_modules/d3-array/src/variance.js"],"names":["variance","values","valueof","count","delta","mean","sum","undefined","value","index"],"mappings":";AAAA,eAAe,SAASA,QAAT,CAAkBC,MAAlB,EAA0BC,OAA1B,EAAmC;AAChD,MAAIC,KAAK,GAAG,CAAZ;AACA,MAAIC,KAAJ;AACA,MAAIC,IAAI,GAAG,CAAX;AACA,MAAIC,GAAG,GAAG,CAAV;;AACA,MAAIJ,OAAO,KAAKK,SAAhB,EAA2B;AAAA,+CACPN,MADO;AAAA;;AAAA;AACzB,0DAA0B;AAAA,YAAjBO,KAAiB;;AACxB,YAAIA,KAAK,IAAI,IAAT,IAAiB,CAACA,KAAK,GAAG,CAACA,KAAV,KAAoBA,KAAzC,EAAgD;AAC9CJ,UAAAA,KAAK,GAAGI,KAAK,GAAGH,IAAhB;AACAA,UAAAA,IAAI,IAAID,KAAK,GAAG,EAAED,KAAlB;AACAG,UAAAA,GAAG,IAAIF,KAAK,IAAII,KAAK,GAAGH,IAAZ,CAAZ;AACD;AACF;AAPwB;AAAA;AAAA;AAAA;AAAA;AAQ1B,GARD,MAQO;AACL,QAAII,KAAK,GAAG,CAAC,CAAb;;AADK,gDAEaR,MAFb;AAAA;;AAAA;AAEL,6DAA0B;AAAA,YAAjBO,MAAiB;;AACxB,YAAI,CAACA,MAAK,GAAGN,OAAO,CAACM,MAAD,EAAQ,EAAEC,KAAV,EAAiBR,MAAjB,CAAhB,KAA6C,IAA7C,IAAqD,CAACO,MAAK,GAAG,CAACA,MAAV,KAAoBA,MAA7E,EAAoF;AAClFJ,UAAAA,KAAK,GAAGI,MAAK,GAAGH,IAAhB;AACAA,UAAAA,IAAI,IAAID,KAAK,GAAG,EAAED,KAAlB;AACAG,UAAAA,GAAG,IAAIF,KAAK,IAAII,MAAK,GAAGH,IAAZ,CAAZ;AACD;AACF;AARI;AAAA;AAAA;AAAA;AAAA;AASN;;AACD,MAAIF,KAAK,GAAG,CAAZ,EAAe,OAAOG,GAAG,IAAIH,KAAK,GAAG,CAAZ,CAAV;AAChB","sourcesContent":["export default function variance(values, valueof) {\n  let count = 0;\n  let delta;\n  let mean = 0;\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        delta = value - mean;\n        mean += delta / ++count;\n        sum += delta * (value - mean);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        delta = value - mean;\n        mean += delta / ++count;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n  if (count > 1) return sum / (count - 1);\n}\n"]},"metadata":{},"sourceType":"module"}