{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/davidmunechika/Documents/Code/Research/visual-auditor/visual-auditor-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport { InternSet } from \"internmap\";\nexport default function intersection(values) {\n  for (var _len = arguments.length, others = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    others[_key - 1] = arguments[_key];\n  }\n\n  values = new InternSet(values);\n  others = others.map(set);\n\n  var _iterator = _createForOfIteratorHelper(values),\n      _step;\n\n  try {\n    out: for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var value = _step.value;\n\n      var _iterator2 = _createForOfIteratorHelper(others),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var other = _step2.value;\n\n          if (!other.has(value)) {\n            values.delete(value);\n            continue out;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return values;\n}\n\nfunction set(values) {\n  return values instanceof InternSet ? values : new InternSet(values);\n}","map":{"version":3,"sources":["/Users/davidmunechika/Documents/Code/Research/visual-auditor/visual-auditor-app/node_modules/d3-array/src/intersection.js"],"names":["InternSet","intersection","values","others","map","set","out","value","other","has","delete"],"mappings":";AAAA,SAAQA,SAAR,QAAwB,WAAxB;AAEA,eAAe,SAASC,YAAT,CAAsBC,MAAtB,EAAyC;AAAA,oCAARC,MAAQ;AAARA,IAAAA,MAAQ;AAAA;;AACtDD,EAAAA,MAAM,GAAG,IAAIF,SAAJ,CAAcE,MAAd,CAAT;AACAC,EAAAA,MAAM,GAAGA,MAAM,CAACC,GAAP,CAAWC,GAAX,CAAT;;AAFsD,6CAG7BH,MAH6B;AAAA;;AAAA;AAGtDI,IAAAA,GAHsD,EAGjD,oDAA4B;AAAA,UAAjBC,KAAiB;;AAAA,kDACXJ,MADW;AAAA;;AAAA;AAC/B,+DAA4B;AAAA,cAAjBK,KAAiB;;AAC1B,cAAI,CAACA,KAAK,CAACC,GAAN,CAAUF,KAAV,CAAL,EAAuB;AACrBL,YAAAA,MAAM,CAACQ,MAAP,CAAcH,KAAd;AACA,qBAASD,GAAT;AACD;AACF;AAN8B;AAAA;AAAA;AAAA;AAAA;AAOhC;AAVqD;AAAA;AAAA;AAAA;AAAA;;AAWtD,SAAOJ,MAAP;AACD;;AAED,SAASG,GAAT,CAAaH,MAAb,EAAqB;AACnB,SAAOA,MAAM,YAAYF,SAAlB,GAA8BE,MAA9B,GAAuC,IAAIF,SAAJ,CAAcE,MAAd,CAA9C;AACD","sourcesContent":["import {InternSet} from \"internmap\";\n\nexport default function intersection(values, ...others) {\n  values = new InternSet(values);\n  others = others.map(set);\n  out: for (const value of values) {\n    for (const other of others) {\n      if (!other.has(value)) {\n        values.delete(value);\n        continue out;\n      }\n    }\n  }\n  return values;\n}\n\nfunction set(values) {\n  return values instanceof InternSet ? values : new InternSet(values);\n}\n"]},"metadata":{},"sourceType":"module"}