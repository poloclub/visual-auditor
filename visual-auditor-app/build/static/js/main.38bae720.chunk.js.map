{"version":3,"sources":["components/Nav/Nav.js","components/LeftDrawer/LeftDrawer.js","components/RightDrawer/RedGradient.png","components/RightDrawer/BlueGradient.png","components/RightDrawer/RightDrawer.js","hooks/useD3.js","components/Main/SliceBarChart.js","components/Main/ForceLayout.js","components/Main/GraphLayout.js","components/Main/Main.js","App.js","index.js"],"names":["Nav","view","setView","algorithm","setAlgorithm","className","FormControl","sx","s","minWidth","paddingRight","InputLabel","Select","value","label","onChange","event","target","MenuItem","LeftDrawer","numFeatures","setNumFeatures","sampleSize","setSampleSize","metric","setMetric","sortBy","setSortBy","overperforming","setOverperforming","features","setFeatures","edgeFiltering","radius","setRadius","setEdgeFiltering","edgeForce","setEdgeForce","nodeSize","cursorMode","setCursorMode","setNodeSize","show","setShow","showConvexHull","setShowConvexHull","React","useState","switchDisabled","setSwitchDisabled","Drawer","variant","anchor","display","xs","sm","boxSizing","width","style","margin","lineHeight","Box","Slider","valueLabelDisplay","defaultValue","step","min","max","size","flexDirection","alignItems","m","Switch","checked","setTimeout","disabled","FormGroup","marginLeft","featuresData","sort","map","feature","FormControlLabel","control","Checkbox","defaultChecked","includes","filter","handleCheckboxChange","Divider","padding","Button","onClick","marginTop","RightDrawer","details","convexHull","paddingTop","src","BlueGradient","RedGradient","alt","paddingLeft","slice","split","toFixed","similarSlices","length","useD3","renderChartFn","dependencies","ref","useRef","useEffect","d3","current","SliceBarChart","data","model","setDetails","selected","setSelected","doneAnimating","setDoneAnimating","svg","height","div","x","domain","d","rangeRound","y1","select","call","g","attr","tickSizeOuter","selectAll","ticks","remove","append","text","join","Math","abs","on","this","transition","duration","html","round","bandwidth","delay","i","position","background","right","top","viewBox","memo","ForceLayout","degree","hulls","Array","from","keys","groupings","forEach","obj","classifiers","str","indexOf","temp","substring","push","topGroupings","Object","key","a","b","xAxis","yAxis","xAxisGrid","tickSizeInner","yAxisGrid","xCenter","yCenter","nodes","log","sqrt","category","xFeature","yFeature","bubbles","force","strength","y","clientX","clientY","__data__","opacity","colors","vertices","j","hull","line","curve","id","transform","GraphLayout","radiusType","matches","reverseLogLossSamples","reverseCommonSamples","commonSamples","logLossSamples","xTickDistance","yTickDistance","links","count","source","sliceSource","sliceTarget","graph","clamp","lo","hi","link","classed","node","undefined","fx","click","simulation","pow","drag","fy","alpha","restart","overflow","borderRadius","Main","reversedata","modelMetric","values","reverselogloss","logloss","reverseaccuracy","accuracy","reverseprecision","precision","reverserecall","recall","reversef1","f1","logloss_sliceline","metricArray","reverseMetricArray","filteredData","sliceStr","window","onbeforeunload","scrollTo","App","setDetailsCallback","useCallback","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.38bae720.chunk.js","sourcesContent":["import React from 'react';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport './Nav.css';\n\nconst Nav = ({ view, setView, algorithm, setAlgorithm }) => {\n  const handleViewChange = (event) => {\n    setView(event.target.value);\n  };\n\n  const handleAlgorithmChange = (event) => {\n    setAlgorithm(event.target.value);\n  };\n\n  return (\n    <div className='nav-container'>\n      {/* <h1>UCI Adults Dataset</h1> */}\n      <FormControl sx={{ s: 1, minWidth: 175, paddingRight: 1 }}>\n        <InputLabel>View:</InputLabel>\n        <Select value={view} label='View' onChange={handleViewChange}>\n          <MenuItem value={'force'}>Force Layout</MenuItem>\n          <MenuItem value={'graph'}>Graph Layout</MenuItem>\n          <MenuItem value={'bar'}>Bar Chart Layout</MenuItem>\n        </Select>\n      </FormControl>\n      {/* <FormControl sx={{ s: 2, minWidth: 175, paddingRight: 1 }}>\n        <InputLabel>Algorithm:</InputLabel>\n        <Select\n          value={algorithm}\n          label='Algorithm'\n          onChange={handleAlgorithmChange}\n        >\n          <MenuItem value={'slicefinder'}>Slice Finder</MenuItem>\n          <MenuItem value={'sliceline'}>Slice Line</MenuItem>\n        </Select>\n      </FormControl> */}\n    </div>\n  );\n};\n\nexport default Nav;\n","import React from 'react';\nimport Drawer from '@mui/material/Drawer';\nimport Button from '@mui/material/Button';\nimport Slider from '@mui/material/Slider';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Select from '@mui/material/Select';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Divider from '@mui/material/Divider';\nimport Switch from '@mui/material/Switch';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport featuresData from '../../data/features.json'\nimport './LeftDrawer.css';\n\nconst LeftDrawer = ({\n  numFeatures,\n  setNumFeatures,\n  sampleSize,\n  setSampleSize,\n  metric,\n  setMetric,\n  sortBy,\n  setSortBy,\n  overperforming,\n  setOverperforming,\n  features,\n  setFeatures,\n  view,\n  radius,\n  setRadius,\n  edgeFiltering,\n  setEdgeFiltering,\n  edgeForce,\n  setEdgeForce,\n  cursorMode,\n  setCursorMode,\n  nodeSize,\n  setNodeSize,\n  show,\n  setShow,\n  showConvexHull,\n  setShowConvexHull,\n}) => {\n  const [switchDisabled, setSwitchDisabled] = React.useState(false);\n\n  const handleFeaturesChange = (event) => {\n    setNumFeatures(event.target.value);\n    setShowConvexHull(false);\n  };\n\n  const handleSizeChange = (event) => {\n    setSampleSize(event.target.value);\n    setShowConvexHull(false);\n  };\n\n  const handleMetricChange = (event) => {\n    setMetric(event.target.value);\n    setShowConvexHull(false);\n  };\n\n  const handleSortByChange = (event) => {\n    setSortBy(event.target.value);\n    setShowConvexHull(false);\n  };\n\n  const handleSwitchChange = (event) => {\n    setOverperforming(event.target.checked);\n    setShowConvexHull(false);\n  };\n\n  const handleCheckboxChange = (event, label) => {\n    if (event.target.checked) {\n      setFeatures([...features, label]);\n    } else {\n      setFeatures(features.filter((feature) => feature !== label));\n    }\n    setShowConvexHull(false);\n  };\n\n  const handleReset = (event) => {\n    setFeatures(featuresData.features);\n    setNumFeatures(2);\n    setSampleSize(0);\n    setMetric('Log Loss');\n    setSortBy('metric');\n    setOverperforming(false);\n    setEdgeFiltering(500);\n    setEdgeForce(1);\n    setShowConvexHull(false);\n  };\n\n  return (\n    <Drawer\n      variant=\"permanent\"\n      anchor=\"left\"\n      sx={{\n        display: { xs: 'none', sm: 'block' },\n        '& .MuiDrawer-paper': { boxSizing: 'border-box', width: '15rem' },\n      }}\n    >\n      <div className='left-container'>\n        <div style={{margin: '2rem 0', lineHeight: '0.5rem'}}>\n          <h1>Slice Settings</h1>\n          {view !== 'bar' && (<h2>Each slice is a node</h2>)}\n        </div>\n        {view === 'graph' && (\n          <div style={{lineHeight: '0.5'}}>\n            <p><strong>Edge Filtering:</strong></p>\n            <Box sx={{width: '10rem', margin: '0 1rem'}}>\n              <Slider\n                aria-label='Edge Filtering'\n                value={edgeFiltering}\n                valueLabelDisplay='auto'\n                defaultValue={500}\n                step={100}\n                min={0}\n                max={2000}\n                size='small'\n                onChange={(event) => {\n                  setEdgeFiltering(event.target.value);\n                  setShowConvexHull(false);\n                }}\n                />\n            </Box>\n            <p><strong>Edge Force Strength:</strong></p>\n            <Box sx={{width: '10rem', margin: '0 1rem'}}>\n`            <Slider\n              aria-label='Edge Force Strength'\n              defaultValue={1}\n              value={edgeForce}\n              valueLabelDisplay='auto'\n              step={0.01}\n              min={0}\n              max={5}\n              size='small'\n              onChange={(event) => {\n                setEdgeForce(event.target.value);\n                setShowConvexHull(false);\n              }}\n              />`\n            </Box>\n          </div>\n        )}\n        {view === 'bar' ? (\n          <div style={{display: 'flex', flexDirection: 'row', alignItems: 'center'}}>\n            <p><strong>Sort:</strong></p>\n            <FormControl sx={{ m: 0, minWidth: 125 }} size=\"small\">\n              <Select\n                value={sortBy}\n                onChange={handleSortByChange}\n              >\n                <MenuItem value={'metric'}>{metric}</MenuItem>\n                <MenuItem value={'size'}>Slice Size</MenuItem>\n              </Select>\n            </FormControl>\n          </div>\n        ) : (\n            <>\n              <p><strong>Size Represents</strong></p>\n              <FormControl sx={{ s: 1, minWidth: 175 }} size=\"small\">\n                <Select\n                  value={nodeSize}\n                  onChange={(event) => {\n                    setNodeSize(event.target.value);\n                    setShowConvexHull(false);\n                  }}\n                >\n                  <MenuItem value={'size'}>Slice Sample Size</MenuItem>\n                  <MenuItem value={'accuracy'}>Balanced Accuracy</MenuItem>\n                </Select>\n              </FormControl>\n              <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                <div style={{width: '75%'}}>\n                  <p><strong>Convex Hull:</strong></p>\n                </div>\n              <Switch\n                checked={showConvexHull}\n                onChange={(event) => {\n                  if (event.target.checked) {\n                    setSwitchDisabled(true);\n                    setTimeout(() => {\n                      setSwitchDisabled(false);\n                    }, 4000);\n                  }\n                  setShowConvexHull(event.target.checked);\n                }}\n                label='Show Convex Hull'\n                className='switch'\n                disabled={switchDisabled}\n              />\n              </div>\n            </>\n        )}\n        <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n          <div style={{width: '75%'}}>\n            <p><strong>Overperforming:</strong></p>\n          </div>\n          <Switch\n            checked={overperforming}\n            onChange={handleSwitchChange}\n            label='Overperforming Slices'\n            />\n        </div>\n        <p><strong>Minimum Slice Size:</strong></p>\n        <Box sx={{width: '10rem', margin: '1rem'}}>\n          <Slider\n            size='small'\n            defaultValue={100}\n            aria-label='Small'\n            value={sampleSize}\n            valueLabelDisplay='auto'\n            min={0}\n            max={250}\n            step={10}\n            onChange={handleSizeChange}\n          />\n        </Box>\n        <div style={{display: 'flex', flexDirection: 'row', alignItems: 'center'}}>\n          <p><strong>Show</strong></p>\n          <FormControl sx={{ s: 1, minWidth: 125 }} size=\"small\">\n            <Select\n              value={show}\n              onChange={(event) => {\n                setShow(event.target.value);\n                setShowConvexHull(false);\n              }}\n            >\n              <MenuItem value={'ten'}>Top 10 Slices</MenuItem>\n              <MenuItem value={'all'}>All Slices</MenuItem>\n            </Select>\n          </FormControl>\n        </div>\n        <p><strong>Features:</strong></p>\n        <FormGroup style={{ marginLeft: '1rem' }}>\n          {featuresData.features.sort().map((feature) => {\n            return <FormControlLabel\n              control={<Checkbox defaultChecked checked={features.includes(feature)} />}\n              label={feature}\n              key={feature}\n              onChange={(event) => handleCheckboxChange(event, feature)}\n            />\n          })}\n        </FormGroup>\n        <Divider style={{ padding: '1rem' }} />\n        <Button\n          variant='outlined'\n          onClick={handleReset}\n          style={{ marginTop: '1rem' }}\n        >\n          Reset\n        </Button>\n      </div>\n      </Drawer>\n  );\n};\n\nexport default LeftDrawer;\n","export default __webpack_public_path__ + \"static/media/RedGradient.fcc885e6.png\";","export default __webpack_public_path__ + \"static/media/BlueGradient.64b1fe13.png\";","import React from 'react';\nimport Drawer from '@mui/material/Drawer';\nimport './RightDrawer.css';\nimport RedGradient from './RedGradient.png';\nimport BlueGradient from './BlueGradient.png';\n\nconst RightDrawer = ({ details, metric, overperforming, view, convexHull }) => {\n  return (\n    <Drawer\n      sx={{\n        display: { xs: 'none', sm: 'block' },\n        '& .MuiDrawer-paper': { boxSizing: 'border-box', width: '15rem' },\n      }}\n      variant='permanent'\n      anchor='right'\n    >\n      {' '}\n      {view === 'bar' ? (\n        <div className='right-container'>\n          <h1>Legend</h1>\n          <div style={{ paddingTop: '0.25rem', lineHeight: '0.5rem' }}>\n            <p>\n              <strong>Bar Color:</strong>\n            </p>\n            <p>Performance</p>\n          </div>\n          <img\n            src={overperforming ? BlueGradient : RedGradient}\n            alt='Gradient'\n            style={{\n              width: '13rem',\n              padding: '0',\n              margin: '0',\n              paddingLeft: '0.9rem',\n            }}\n          />\n        </div>\n      ) : (\n        <div className='right-container'>\n          <h1>Legend</h1>\n          <div style={{ paddingTop: '0.25rem', lineHeight: '0.5rem' }}>\n            <p>\n              <strong>Node Color:</strong>\n            </p>\n            <p>Performance</p>\n          </div>\n          <img\n            src={overperforming ? BlueGradient : RedGradient}\n            alt='Gradient'\n            style={{\n              width: '13rem',\n              padding: '0',\n              margin: '0',\n              paddingLeft: '0.9rem',\n            }}\n          />\n          <div style={{ paddingTop: '0.25rem', lineHeight: '0.5rem' }}>\n            <p>\n              <strong>Node Size:</strong>\n            </p>\n            <p>Slice Sample Size</p>\n          </div>\n          {view === 'graph' && (\n            <div style={{ paddingTop: '0.25rem', lineHeight: '0.5rem' }}>\n              <p>\n                <strong>Graph Edges:</strong>\n              </p>\n              <p>Overlapping Samples</p>\n            </div>\n          )}\n          {convexHull && (\n            <div style={{ paddingTop: '0.25rem', lineHeight: '0.5rem' }}>\n              <p>\n                <strong>Convex Hull:</strong>\n              </p>\n              <p>Same Features</p>\n            </div>\n          )}\n        </div>\n      )}\n      {details === null ? (\n        <div className='right-container'>\n          <h1>Selected Slice</h1>\n          <p className='thin'>Click on a slice to view the slice details</p>\n        </div>\n      ) : (\n        <div className='right-container'>\n          <h1>Selected Slice</h1>\n          <div style={{ paddingTop: '0.25rem', lineHeight: '0.5rem' }}>\n            <p>\n              <strong>Slice Definition:</strong>\n            </p>\n            {details.slice.split(', ').map((feature) => {\n              return <p>{feature}</p>;\n            })}\n          </div>\n          <div style={{ paddingTop: '0.25rem', lineHeight: '0.5rem' }}>\n            <p>\n              <strong>Slice Size:</strong>\n            </p>\n            <p> {details?.size} samples</p>\n          </div>\n          <div style={{ paddingTop: '0.25rem', lineHeight: '0.5rem' }}>\n            <p>\n              <strong>Slice {metric}:</strong>\n            </p>\n            <p>{details?.metric?.toFixed(3)}</p>\n          </div>\n          {details?.similarSlices?.length > 0 ? (\n            <div style={{ paddingTop: '0.25rem', lineHeight: '1.25rem' }}>\n              <p>\n                <strong>Similar Slices:</strong>\n              </p>\n              <ul className='similar-slices-list'>\n                {details?.similarSlices.map((slice) => (\n                  <li className='similar-slice'>{slice}</li>\n                ))}\n              </ul>\n            </div>\n          ) : null}\n        </div>\n      )}\n      </Drawer>\n  );\n};\n\nexport default RightDrawer;\n","import React from 'react';\nimport * as d3 from 'd3';\n\nexport const useD3 = (renderChartFn, dependencies) => {\n  const ref = React.useRef();\n\n  React.useEffect(() => {\n    renderChartFn(d3.select(ref.current));\n    return () => {};\n  }, dependencies);\n  return ref;\n};\n","import { useD3 } from '../../hooks/useD3';\nimport React, { memo } from 'react';\nimport * as d3 from 'd3';\n\nfunction SliceBarChart({\n  data,\n  model,\n  max,\n  overperforming,\n  metric,\n  setDetails,\n}) {\n  const [selected, setSelected] = React.useState(null);\n  const [doneAnimating, setDoneAnimating] = React.useState(false);\n  React.useEffect(() => {\n    setDoneAnimating(false);\n  }, [data]);\n\n  const ref = useD3(\n    (svg) => {\n      const height = 600;\n      const width = 875;\n      const margin = { top: 60, right: 30, bottom: 50, left: 90 };\n\n      let div = d3\n        .select('.tooltip')\n        .style('opacity', 0)\n        .style('width', '200px')\n        .style('height', '150px')\n        .style('padding', '1rem 1rem 0rem 1rem')\n        .style('border-radius', '20px');\n\n      const x = d3\n        .scaleBand()\n        .domain(data.map((d) => d.slice))\n        .rangeRound([margin.left, width - margin.right])\n        .padding(0.1);\n\n      const y1 = d3\n        .scaleLinear()\n        .domain([0, max])\n        .rangeRound([height - margin.bottom, margin.top]);\n\n      const xAxis = (g) =>\n        g\n          .attr('transform', `translate(0,${height - margin.bottom})`)\n          .call(d3.axisBottom(x).tickSizeOuter(0))\n          .selectAll('text')\n          .style(\"font\", \"14px\")\n          .attr('transform', 'translate(-10,0)rotate(-45)')\n          .style('text-anchor', 'end');\n\n      const y1Axis = (g) =>\n        g\n          .attr('transform', `translate(${margin.left},0)`)\n          .style('color', 'steelblue')\n          .call(d3.axisLeft(y1).ticks(null, 's'))\n          .call((g) => g.select('.domain').remove())\n          .call((g) =>\n            g\n              .append('text')\n              .attr('x', -margin.left)\n              .attr('y', 10)\n              .attr('fill', 'currentColor')\n              .attr('text-anchor', 'start')\n              .text(data.y1)\n          );\n\n      svg.select('.x-axis').call(xAxis);\n      svg.select('.y-axis').call(y1Axis);\n\n      svg\n        .select('.plot-area')\n        .selectAll('.bar')\n        .data(data)\n        .join('rect')\n        .attr('class', 'bar')\n        .attr(\"style\", (d) => {\n          if (d.slice === selected) {\n            return \"outline: 3px solid #FFD600;\"\n          }\n        })\n        .style('fill', (d) => {\n          // if (d.slice === selected) {\n          //   return d3.interpolateGreys(0.5);\n          // }\n          if (overperforming)\n            return d3.interpolateBlues(Math.abs((d.metric - model) / model));\n          return d3.interpolateReds(Math.abs((d.metric - model) / model));\n        })\n        .on('mouseover', function (event, d) {\n          d3.select(this).style('opacity', '0.7').style('cursor', 'pointer');\n          div\n            .transition()\n            .duration(200)\n            .style('opacity', 0.9)\n            .style('right', '20%')\n            .style('top', '100px');\n          div.html(\n            '<strong>Slice Description: </strong>' +\n              '<br><div style={{margin: \"1rem\"}}> </div>' +\n              d.slice +\n              '<br>' +\n              '<strong>Size: </strong>' +\n              '<br>' +\n              d.size +\n              ' samples' +\n              '<br>' +\n              '<strong>' +\n              metric +\n              ': ' +\n              '</strong>' +\n              '<br>' +\n              d.metric.toFixed(2) +\n              ' ' +\n              `(${Math.round(((d.metric - model) / model) * 100)}% difference)`\n          );\n        })\n        .on('mouseout', function (d) {\n          d3.select(this).style('opacity', '1');\n          div\n            .transition()\n            .style('opacity', 0)\n        })\n        .on('click', function (event, d) {\n          setSelected(d.slice);\n          setDetails({\n            slice: d.slice,\n            size: d.size,\n            metric: d.metric,\n            similarSlices: [],\n          });\n        })\n        .attr('x', (d) => x(d.slice))\n        .attr('width', x.bandwidth())\n        .attr('y', (d) => y1(0) - margin.bottom)\n        .attr('height', (d) => height - y1(0));\n\n      // Animation\n      if (!doneAnimating) {\n        svg\n          .selectAll('rect')\n          .transition()\n          .duration(800)\n          .attr('y', function (d) {\n            return y1(d.metric) - margin.bottom;\n          })\n          .attr('height', function (d) {\n            return height - y1(d.metric);\n          })\n          .delay(function (d, i) {\n            return i * 100;\n          });\n        setDoneAnimating(true);\n      } else {\n        svg\n          .selectAll('rect')\n          .attr('y', function (d) {\n            return y1(d.metric) - margin.bottom;\n          })\n          .attr('height', function (d) {\n            return height - y1(d.metric);\n          });\n      }\n\n      svg.selectAll('.line').remove();\n      svg.selectAll('.label').remove();\n\n      svg\n        .append('svg:line')\n        .attr('class', 'line')\n        .attr('x1', 60)\n        .attr('x2', width)\n        .attr('y1', y1(model))\n        .attr('y2', y1(model))\n        .style('stroke', '#e6e6e6');\n      svg\n        .append('text')\n        .attr('class', 'label')\n        .text('Model')\n        .attr('x', 0)\n        .attr('y', y1(model) + 5)\n        .style('fill', 'gray');\n      svg\n        .append('text')\n        .attr('class', 'label')\n        .text(metric)\n        .attr('x', 0)\n        .attr('y', y1(model) + 25)\n        .style('fill', 'gray');\n    },\n    [data, metric, selected]\n  );\n\n  return (\n    <div style={{width: '100%'}}>\n      <div\n        className='tooltip'\n        style={{ position: 'absolute', background: 'lightgray', right: '20%', top: '100px' }}\n      ></div>\n      <svg\n        ref={ref}\n        viewBox=\"0 0 875 875\" width=\"80%\" height=\"80%\"\n        style={{\n          margin: 'auto',\n          display: 'block',\n        }}\n      >\n        <g className='plot-area' />\n        <g className='x-axis' />\n        <g className='y-axis' />\n        <g className='label' />\n      </svg>\n    </div>\n  );\n}\n\nexport default memo(SliceBarChart);","import { useD3 } from '../../hooks/useD3';\nimport React, { memo } from 'react';\nimport * as d3 from 'd3';\nimport './ForceLayout.css';\n\nfunction ForceLayout({\n  data,\n  degree,\n  view,\n  metric,\n  model,\n  overperforming,\n  setDetails,\n  radius,\n  setShowConvexHull,\n}) {\n  const margin = { top: 50, right: 30, bottom: 70, left: 85 };\n  const width = 800;\n  const height = 800;\n  const hulls = Array.from(Array(100).keys());\n\n  let features = [];\n  const groupings = {};\n\n  data.forEach((obj) => {\n    obj.classifiers = [];\n    let str = obj.slice;\n    while (str.indexOf(':') !== -1) {\n      let temp = str.substring(0, str.indexOf(':'));\n      obj.classifiers.push(temp);\n      if (!features.includes(temp)) features.push(temp);\n      if (degree === obj.classifiers.length) {\n        if (groupings[obj.classifiers.join(', ')])\n          groupings[obj.classifiers.join(', ')]++;\n        else groupings[obj.classifiers.join(', ')] = 1;\n      }\n      if (str.indexOf(',') !== -1) {\n        str = str.substring(str.indexOf(',') + 2);\n      } else {\n        str = '';\n      }\n    }\n  });\n\n  features = features.sort();\n\n  const groupingsArray = Object.keys(groupings)\n    .map((key) => [key, groupings[key]])\n    .sort((a, b) => b[1] - a[1]);\n\n  const topGroupings = groupingsArray.slice(0, 15);\n\n  const x = d3\n    .scaleBand()\n    .domain(features)\n    .rangeRound([margin.left, width - margin.right])\n    .padding(0.1);\n\n  const xAxis = (g) =>\n    g\n      .attr('transform', `translate(0,${height - margin.bottom - 670})`)\n      .call(d3.axisTop(x).tickSizeOuter(0))\n      .selectAll('text')\n      .style(\"font-size\", \"14px\")\n      .attr('transform', 'translate(10,-10)rotate(-45)')\n      .style('text-anchor', 'start');\n\n  const yAxis = (g) =>\n    g\n      .attr('transform', `translate(${margin.left},${30 - margin.bottom})`)\n      .call(d3.axisLeft(x).tickSizeOuter(0))\n      .selectAll('text')\n      .style(\"font-size\", \"14px\")\n      .style('text-anchor', 'end');\n\n  const xAxisGrid = (g) =>\n    g\n      .attr('transform', `translate(0,${height - margin.bottom})`)\n      .call(\n        d3\n          .axisBottom(x)\n          .tickSizeOuter(0)\n          .tickSizeInner(-height - margin.top + 2 * margin.bottom)\n      )\n      .style('opacity', 0.1)\n      .selectAll('text')\n      .style('display', 'none');\n\n  const yAxisGrid = (g) =>\n    g\n      .attr('transform', `translate(${margin.left},${30 - margin.bottom})`)\n      .call(\n        d3\n          .axisLeft(x)\n          .tickSizeOuter(0)\n          .tickSizeInner(-width - margin.right + 2 * margin.left)\n      )\n      .style('opacity', 0.1)\n      .selectAll('text')\n      .style('display', 'none');\n\n  const ref = useD3(\n    (svg) => {\n      let convexHullShowing = false;\n      d3.select('.hull').remove();\n      let div = d3\n        .select('.tooltip')\n        .style('opacity', 0)\n        .style('width', '200px')\n        .style('height', '150px')\n        .style('padding', '1rem 1rem 0 1rem')\n        .style('border-radius', '20px');\n      const xCenter = [];\n      const yCenter = [];\n      for (let i = 0; i < features.length; i++) {\n        xCenter.push(((width - 150) / features.length) * i + 100);\n        yCenter.push(((height - 175) / features.length) * i - 100);\n      }\n      const nodes = data.map((obj) => {\n        return {\n          radius: radius === 'log' ? Math.log(obj.size) * 2 : Math.sqrt(obj.size),\n          category: obj.degree,\n          xFeature: obj.classifiers[0],\n          yFeature: obj.classifiers[1] ?? obj.classifiers[0],\n          slice: obj.slice,\n          size: obj.size,\n          metric: obj.metric,\n        };\n      });\n\n      const simulation = d3\n        .forceSimulation(nodes)\n        .force('charge', d3.forceManyBody().strength(-5))\n        .force(\n          'x',\n          d3.forceX().x(function (d) {\n            return xCenter[features.indexOf(d.xFeature)] - 20;\n          })\n        )\n        .force(\n          'y',\n          d3.forceY().y(function (d) {\n            if (degree > 1) {\n              return yCenter[features.indexOf(d.yFeature)];\n            } else {\n              return height / 4;\n            }\n          })\n        )\n        .force(\n          'collision',\n          d3.forceCollide().radius(function (d) {\n            return d.radius;\n          })\n        )\n        .on('tick', ticked);\n\n      let bubbles = d3\n        .select('.g')\n        .selectAll('circle')\n        .data(nodes)\n        .join('circle')\n        .attr('class', 'node')\n        .attr('r', function (d) {\n          return d.radius;\n        })\n        .style('fill', function (d) {\n          if (overperforming)\n            return d3.interpolateBlues(Math.abs((d.metric - model) / model));\n          return d3.interpolateReds(Math.abs((d.metric - model) / model));\n        })\n        .style('opacity', function (d) {\n          return '1';\n        });\n      function ticked() {\n        bubbles\n          .attr('cx', function (d) {\n            return d.x;\n          })\n          .attr('cy', function (d) {\n            return d.y;\n          })\n          .on('mouseover', function (event, d) {\n            d3.select(this)\n              .attr('r', d.radius * 1.1)\n              .style('opacity', '0.7')\n              .style('cursor', 'pointer');\n            div\n              .transition()\n              .duration(0)\n              .style('display', 'block')\n              .style('opacity', 0.9)\n              .style('left', (event.clientX + 50) + 'px')\n              .style('top', (event.clientY) + 'px')\n            div.html(\n              '<strong>Slice Description: </strong>' +\n                '<br><div style={{margin: \"1rem\"}}> </div>' +\n                d.slice +\n                '<br>' +\n                '<strong>Size: </strong>' +\n                '<br>' +\n                d.size +\n                ' samples' +\n                '<br>' +\n                '<strong>' +\n                metric +\n                ': ' +\n                '</strong>' +\n                '<br>' +\n                d.metric.toFixed(2) +\n                ' ' +\n                `(${Math.round(\n                  ((d.metric - model) / model) * 100\n                )}% difference)`\n            );\n          })\n          .on('mouseout', function (event, d) {\n            d3.select(this).attr('r', d.radius).style('opacity', '1');\n            div\n              .transition()\n              .duration(50)\n              .style('opacity', 0)\n              .style('display', 'none')\n          })\n          .on('click', function (event, d) {\n            bubbles.style('fill', function (d) {\n              if (event.target.__data__ === d) {\n                return \"#FFD600\"\n              }\n              if (overperforming)\n                return d3.interpolateBlues(\n                  Math.abs((d.metric - model) / model)\n                );\n              return d3.interpolateReds(Math.abs((d.metric - model) / model));\n            });\n            setDetails({\n              slice: d.slice,\n              size: d.size,\n              metric: d.metric,\n              similarSlices: [],\n            });\n          });\n      }\n\n      const convexHull = (g, opacity) => {\n        const colors = ['gray', 'green', 'yellow', 'black', 'purple'];\n        let vertices = [];\n\n        for (let i = 0; i < topGroupings.length; i++) {\n          vertices = [];\n          for (let j = 0; j < nodes.length; j++) {\n            if (\n              nodes[j].xFeature === topGroupings[i][0].split(', ')[0] &&\n              (degree < 2 ||\n                nodes[j].yFeature === topGroupings[i][0].split(', ')[1])\n            ) {\n              if (degree < 2) {\n                vertices.push([nodes[j].x + 50, height / 2]);\n              } else {\n                vertices.push([nodes[j].x + 50, nodes[j].y + 200]);\n              }\n            }\n          }\n          const hull = d3.polygonHull(vertices);\n          const line = d3.line().curve(d3.curveLinearClosed);\n          if (!hull) return;\n          g.append('path')\n            .attr('class', `path${degree}`)\n            .attr('d', line(hull))\n            .attr('fill', colors[0])\n            .attr('stroke', colors[0])\n            .attr('opacity', opacity);\n        }\n      };\n\n      d3.select('.x-axis-grid').call(xAxisGrid);\n      d3.select('.y-axis-grid').call(yAxisGrid);\n      d3.select('.x-axis').call(xAxis);\n      if (degree >= 2) {\n        d3.select('.y-axis').call(yAxis).style('opacity', '1');\n      } else {\n        d3.select('.y-axis').style('opacity', '0');\n      }\n      d3.select('.switch').on('click', (event, d) => {\n        setShowConvexHull(event.target.checked);\n        convexHullShowing = event.target.checked;\n        if (convexHullShowing)\n          d3.select(`.hull`)\n            .style('opacity', '0')\n            .call(convexHull, 0.25)\n            .transition()\n            .duration(500)\n            .style('opacity', '1');\n        else {\n          d3.select(`.hull`).remove();\n          d3.selectAll(`.hull`).transition().duration(0).style('opacity', '0');\n        }\n      });\n    },\n    [data, view]\n  );\n\n  if (view !== 'force') return null;\n\n  return (\n    <div className='force'>\n      <div\n        className='tooltip'\n        style={{ position: 'absolute', background: '#e6e6e6', right: '20%', top: '100px', }}\n      ></div>\n      <svg viewBox=\"0 0 875 875\" width=\"80%\" height=\"100%\" id='force-svg' className='svg' style={{ margin: '0 auto', display: 'block', height: '1000px' }}>\n        <g transform=\"translate(50, 0)\">\n          <g id='force-g' className='g' transform='translate(50, 200)'></g>\n          <g className='x-axis' style={{ padding: '100px' }}/>\n          <g className='y-axis' />\n          <g className='x-axis-grid' />\n          <g className='y-axis-grid' />\n          {hulls.map((hull) => (\n            <g className={'hull'} key={hull} />\n          ))}\n        </g>\n      </svg>\n    </div>\n  );\n}\n\nexport default memo(ForceLayout);","import { useD3 } from '../../hooks/useD3';\nimport React, { memo } from 'react';\nimport * as d3 from 'd3';\nimport './GraphLayout.css';\nimport logLossSamples from '../../data/loglosssamples.json';\nimport reverseLogLossSamples from '../../data/reverseloglosssamples.json';\nimport commonSamples from '../../data/commonSamples.json';\nimport reverseCommonSamples from '../../data/reverseCommonSamples.json';\n\nfunction GraphLayout({\n  data,\n  degree,\n  metric,\n  model,\n  overperforming,\n  radiusType,\n  edgeFiltering,\n  edgeForce,\n  setDetails,\n  cursorMode,\n  algorithm,\n  setShowConvexHull,\n}) {\n  const margin = { top: 50, right: 30, bottom: 70, left: 85 };\n  const [value, setValue] = React.useState(0);\n  const hulls = Array.from(Array(100).keys());\n  function useForceUpdate() {\n    return () => setValue((value) => value + 1); // update the state to force render\n  }\n  const forceUpdate = useForceUpdate();\n\n  const width = 800;\n  const height = 800;\n\n  let features = [];\n  const groupings = {};\n\n  let samples;\n  let matches = {};\n\n  switch (metric) {\n    case 'Log Loss':\n      if (overperforming) {\n        samples = reverseLogLossSamples;\n        matches = reverseCommonSamples;\n      } else {\n        matches = commonSamples;\n        samples = logLossSamples;\n      }\n      break;\n    default:\n      if (overperforming) samples = reverseLogLossSamples;\n      else samples = logLossSamples;\n      break;\n  }\n\n  data.forEach((obj) => {\n    obj.classifiers = [];\n    let str = obj.slice;\n    while (str.indexOf(':') !== -1) {\n      let temp = str.substring(0, str.indexOf(':'));\n      obj.classifiers.push(temp);\n      if (!features.includes(temp)) features.push(temp);\n      if (degree === obj.classifiers.length) {\n        if (groupings[obj.classifiers.join(', ')])\n          groupings[obj.classifiers.join(', ')]++;\n        else groupings[obj.classifiers.join(', ')] = 1;\n      }\n      if (str.indexOf(',') !== -1) {\n        str = str.substring(str.indexOf(',') + 2);\n      } else {\n        str = '';\n      }\n    }\n  });\n\n  features = features.sort();\n\n  const groupingsArray = Object.keys(groupings)\n    .map((key) => [key, groupings[key]])\n    .sort((a, b) => b[1] - a[1]);\n\n  const topGroupings = groupingsArray.slice(0, 15);\n\n  const xCenter = [];\n  const yCenter = [];\n\n  const xTickDistance =\n    (width - margin.left - margin.right) / (features.length + 1);\n  const yTickDistance =\n    (height - margin.top - margin.bottom) / (features.length + 2);\n\n  for (let i = 0; i < features.length; i++) {\n    xCenter.push(margin.left + (i + 1) * xTickDistance);\n    yCenter.push(2 * margin.top + (i + 1) * yTickDistance);\n  }\n\n  const x = d3\n    .scaleBand()\n    .domain(features)\n    .rangeRound([margin.left, width - margin.right])\n    .padding(0.1);\n\n  const xAxis = (g) =>\n    g\n      .attr('transform', `translate(0,${height - margin.bottom - 670})`)\n      .call(d3.axisTop(x).tickSizeOuter(0))\n      .selectAll('text')\n      .style(\"font-size\", \"14px\")\n      .attr('transform', 'translate(10,-10)rotate(-45)')\n      .style('text-anchor', 'start');\n\n  const yAxis = (g) =>\n    g\n      .attr('transform', `translate(${margin.left},${30 - margin.bottom})`)\n      .call(d3.axisLeft(x).tickSizeOuter(0))\n      .selectAll('text')\n      .style(\"font-size\", \"14px\")\n      .style('text-anchor', 'end');\n\n  const xAxisGrid = (g) =>\n    g\n      .attr('transform', `translate(0,${height - margin.bottom})`)\n      .call(\n        d3\n          .axisBottom(x)\n          .tickSizeOuter(0)\n          .tickSizeInner(-height - margin.top + 2 * margin.bottom)\n      )\n      .style('opacity', 0.1)\n      .selectAll('text')\n      .style('display', 'none');\n  const yAxisGrid = (g) =>\n    g\n      .attr('transform', `translate(${margin.left},${30 - margin.bottom})`)\n      .call(\n        d3\n          .axisLeft(x)\n          .tickSizeOuter(0)\n          .tickSizeInner(-width - margin.right + 2 * margin.left)\n      )\n      .style('opacity', 0.1)\n      .selectAll('text')\n      .style('display', 'none');\n\n  const nodes = data.map((obj) => {\n    return {\n      radius: radiusType === 'log' ? Math.log(obj.size) * 2 : Math.sqrt(obj.size),\n      category: obj.degree,\n      xFeature: obj.classifiers[0],\n      yFeature: obj.classifiers[1] ?? obj.classifiers[0],\n      slice: obj.slice,\n      size: obj.size,\n      metric: obj.metric,\n      classifiers: obj.classifiers,\n    };\n  });\n\n  function countCommonSamples(slice1, slice2) {\n    let arr1 = samples[slice1];\n    let arr2 = samples[slice2];\n    if (!arr1 || !arr2) return 0;\n    arr1 = arr1.sort((a, b) => 0.5 - Math.random()).slice(0, 2000);\n    return arr1.filter((sample) => arr2.includes(sample)).length;\n  }\n\n  let links = [];\n  let common = {};\n\n  for (let i = 0; i < nodes.length; i++) {\n    for (let j = i + 1; j < nodes.length; j++) {\n      const count = matches[nodes[i].slice + '-' + nodes[j].slice];\n      // const count = countCommonSamples(nodes[i].slice, nodes[j].slice);\n      // common[nodes[i].slice + '-' + nodes[j].slice] = count;\n      // common[nodes[j].slice + '-' + nodes[i].slice] = count;\n      if (count > edgeFiltering) {\n        links.push({\n          source: i,\n          target: j,\n          sliceSource: nodes[i].slice,\n          sliceTarget: nodes[j].slice,\n          count: count,\n        });\n      }\n    }\n  }\n\n  // console.log(JSON.stringify(common));\n\n  // const links = [];\n  // console.log(JSON.stringify(links));\n\n  const graph = {\n    nodes: nodes,\n    links: links,\n  };\n\n  function clamp(x, lo, hi) {\n    return x < lo ? lo : x > hi ? hi : x;\n  }\n\n  const ref = useD3(\n    (svg) => {\n      let convexHullShowing = false;\n      d3.select('.hull').remove();\n      svg = d3.select('.svg')\n      let link = svg\n        .selectAll('.link')\n        .attr('class', 'link')\n        .data(graph.links)\n        .join('line')\n        .classed('link', true);\n      const node = svg\n        .selectAll('.node')\n        .data(graph.nodes)\n        .join('circle')\n        .attr('r', function (d) {\n          return d.radius;\n        })\n        .style('fill', function (d) {\n          if (overperforming)\n            return d3.interpolateBlues(Math.abs((d.metric - model) / model));\n          return d3.interpolateReds(Math.abs((d.metric - model) / model));\n        })\n        .classed('node', true)\n        .classed('fixed', (d) => d.fx !== undefined)\n        .on('mouseover', function (event, d) {\n          cursorMode === 'select'\n            ? d3\n                .select(this)\n                .attr('r', d.radius)\n                .style('opacity', '0.7')\n                .style('cursor', 'pointer')\n            : d3\n                .select(this)\n                .attr('r', d.radius)\n                .style('opacity', '0.7')\n                .style('cursor', 'grab');\n          d3.select('.tooltip')\n            .transition()\n            .duration(200)\n            .attr('max-width', '200px')\n            .style('display', 'block')\n            .style('opacity', 0.9)\n            .style('left', (event.clientX + 100) + 'px')\n            .style('top', (event.clientY) + 'px')\n            .style('padding', '1rem 1rem 1rem 1rem')\n          d3.select('.tooltip').html(\n            '<strong>Slice Description: </strong>' +\n              '<br><div style={{margin: \"1rem\"}}> </div>' +\n              d.slice +\n              '<br>' +\n              '<strong>Size: </strong>' +\n              '<br>' +\n              d.size +\n              ' samples' +\n              '<br>' +\n              '<strong>' +\n              metric +\n              ': ' +\n              '</strong>' +\n              '<br>' +\n              d.metric.toFixed(2) +\n              ' ' +\n              `(${Math.round(((d.metric - model) / model) * 100)}% difference)`\n          );\n        })\n        .on('mouseout', function (d, i) {\n          d3.select(this).attr('r', i.radius).style('opacity', '1');\n          d3.select('.tooltip')\n            .transition()\n            .style('opacity', 0)\n            .style('display', 'none')\n        })\n        .on('click', click);\n\n      const simulation = d3\n        .forceSimulation()\n        .nodes(graph.nodes)\n        .force('charge', d3.forceManyBody().strength(-5))\n        // .force('center', d3.forceCenter(width / 2, height / 2).strength(0.1))\n        .force(\n          'x',\n          d3.forceX().x(function (d) {\n            return xCenter[features.indexOf(d.xFeature)];\n          })\n        )\n        .force(\n          'y',\n          d3.forceY().y(function (d) {\n            if (degree > 1) {\n              return yCenter[features.indexOf(d.yFeature)];\n            } else {\n              return height / 2;\n            }\n          })\n        )\n        .force(\n          'link',\n          d3.forceLink(graph.links).strength((d) => {\n            return (d.count / 10000) * edgeForce;\n          })\n        )\n        .force(\n          'collision',\n          d3.forceCollide().radius(function (d) {\n            return d.radius;\n          })\n        )\n        .on('tick', tick);\n      if (cursorMode === 'drag') {\n        const drag = d3.drag().on('start', dragstart).on('drag', dragged);\n\n        node.call(drag).on('click', click);\n      }\n\n      function tick() {\n        link\n          .attr('x1', (d) =>\n            Math.max(Math.min(d.source.x, width), d.source.radius + 100) + 50\n          )\n          .attr('y1', (d) =>\n            Math.max(Math.min(d.source.y, height - 75), d.source.radius)\n          )\n          .attr('x2', (d) =>\n            Math.max(Math.min(d.target.x, width), d.target.radius + 100) + 50\n          )\n          .attr('y2', (d) =>\n            Math.max(Math.min(d.target.y, height - 75), d.target.radius)\n          )\n          .style('stroke-width', (d) =>\n            Math.min(\n              Math.pow(d.count / 2000, 2) * edgeForce,\n              Math.pow(d.count / 2000, 2) * 3\n            )\n          );\n        node\n          .attr('cx', (d) => Math.max(Math.min(d.x, width), d.radius + 100) + 50)\n          .attr('cy', (d) => Math.max(Math.min(d.y, height - 75), d.radius));\n      }\n\n      function click(event, d) {\n        if (cursorMode === 'select') {\n          node.style('fill', function (d) {\n            if (event.target.__data__ === d) {\n              return '#FFD600';\n            }\n            if (overperforming)\n              return d3.interpolateBlues(Math.abs((d.metric - model) / model));\n            return d3.interpolateReds(Math.abs((d.metric - model) / model));\n          });\n          setDetails({\n            slice: d.slice,\n            size: d.size,\n            metric: d.metric,\n            similarSlices: links\n              .sort((a, b) => b.count - a.count)\n              .map((link) => {\n                if (\n                  link.count > edgeFiltering &&\n                  link.sliceSource === d.slice\n                ) {\n                  return link.sliceTarget;\n                } else if (\n                  link.count > edgeFiltering &&\n                  link.sliceTarget === d.slice\n                ) {\n                  return link.sliceSource;\n                }\n                return undefined;\n              })\n              .filter((link) => link !== undefined)\n              .slice(0, 10),\n          });\n        } else {\n          delete d.fx;\n          delete d.fy;\n          d3.select(this).classed('fixed', false);\n          d3.select(this).style('fill', () => {\n            if (overperforming)\n              return d3.interpolateBlues(Math.abs((d.metric - model) / model));\n            return d3.interpolateReds(Math.abs((d.metric - model) / model));\n          });\n          simulation.alpha(1).restart();\n        }\n      }\n\n      function dragstart(event, d) {\n        d3.select(this).classed('fixed', true);\n        d3.select(this).style('fill', '#FFD600');\n        setDetails({\n          slice: d.slice,\n          size: d.size,\n          metric: d.metric,\n          similarSlices: links\n            .sort((a, b) => b.count - a.count)\n            .map((link) => {\n              if (link.count > edgeFiltering && link.sliceSource === d.slice) {\n                return link.sliceTarget;\n              } else if (\n                link.count > edgeFiltering &&\n                link.sliceTarget === d.slice\n              ) {\n                return link.sliceSource;\n              }\n              return undefined;\n            })\n            .filter((link) => link !== undefined)\n            .slice(0, 10),\n        });\n      }\n\n      function dragged(event, d) {\n        d.fx = clamp(event.x, 0, width);\n        d.fy = clamp(event.y, 0, height);\n        simulation.alpha(1).restart();\n      }\n\n      const convexHull = (g, opacity) => {\n        const colors = [\n          'gray',\n          'green',\n          'yellow',\n          'black',\n          'purple',\n          'pink',\n          'red',\n          'orange',\n          'brown',\n          'blue',\n          'cyan',\n          'magenta',\n          'lime',\n          'navy',\n          'olive',\n          'teal',\n          'violet',\n          'wheat',\n        ];\n        let vertices = [];\n\n        for (let i = 0; i < topGroupings.length; i++) {\n          vertices = [];\n          for (let j = 0; j < nodes.length; j++) {\n            if (\n              nodes[j].xFeature === topGroupings[i][0].split(', ')[0] &&\n              (degree < 2 ||\n                nodes[j].yFeature === topGroupings[i][0].split(', ')[1])\n            ) {\n              if (degree < 2) {\n                vertices.push([nodes[j].x, height / 2]);\n              } else {\n                vertices.push([nodes[j].x, nodes[j].y]);\n              }\n            }\n          }\n          const hull = d3.polygonHull(vertices);\n          const line = d3.line().curve(d3.curveLinearClosed);\n          if (!hull) return;\n          g.append('path')\n            .attr('class', `path${degree}`)\n            .attr('d', line(hull))\n            .attr('fill', colors[0])\n            .attr('stroke', colors[0])\n            .attr('opacity', opacity);\n        }\n      };\n\n      svg.select('.x-axis-grid').call(xAxisGrid);\n      svg.select('.y-axis-grid').call(yAxisGrid);\n      svg.select('.x-axis').call(xAxis);\n      if (degree >= 2) {\n        svg.select('.y-axis').call(yAxis).style('opacity', '1');\n      } else {\n        svg.select('.y-axis').style('opacity', '0');\n      }\n      d3.select('.switch').on('click', (event, d) => {\n        setShowConvexHull(event.target.checked);\n        convexHullShowing = event.target.checked;\n        if (convexHullShowing)\n          d3.select(`.hull`)\n            .style('opacity', '0')\n            .call(convexHull, 0.25)\n            .transition()\n            .duration(500)\n            .style('opacity', '1');\n        else {\n          d3.select('.hull').remove();\n          d3.selectAll('.hull').transition().duration(0).style('opacity', '0');\n        }\n      });\n    },\n    [data, value]\n  );\n\n  return (\n    <div className='graph' style={{ overflow: 'scroll'}}>\n      <div\n        className='tooltip'\n        style={{\n          position: 'absolute',\n          background: '#e6e6e6',\n          borderRadius: '20px',\n          padding: '1rem',\n        }}\n      ></div>\n      <svg id='graph-svg' className='svg' viewBox=\"0 0 875 875\" width=\"80%\" height=\"80%\" style={{ margin: '0 auto', display: 'block', height: '1000px' }}>\n        <g transform=\"translate(50, 0)\">\n          <g id='graph-g' className='g' transform='translate(50, 200)'></g>\n          <g className='x-axis' />\n          <g className='y-axis' />\n          <g className='x-axis-grid' />\n          <g className='y-axis-grid' />\n          {hulls.map((hull) => (\n            <g className={'hull'} key={hull} />\n          ))}\n        </g>\n      </svg>\n      <br />\n      {/* <Button\n        variant='outlined'\n        onClick={forceUpdate}\n        style={{ margin: '1rem' }}\n      >\n        Recenter\n      </Button> */}\n    </div>\n  );\n}\n\nexport default memo(GraphLayout);","import React, { memo } from 'react';\nimport SliceBarChart from './SliceBarChart';\nimport './Main.css';\nimport ForceLayout from './ForceLayout';\nimport GraphLayout from './GraphLayout';\n\nimport logloss from '../../data/logloss.json';\nimport accuracy from '../../data/accuracy.json';\nimport precision from '../../data/precision.json';\nimport recall from '../../data/recall.json';\nimport f1 from '../../data/f1.json';\nimport reverselogloss from '../../data/reverselogloss.json';\nimport reverseaccuracy from '../../data/reverseaccuracy.json';\nimport reverseprecision from '../../data/reverseprecision.json';\nimport reverserecall from '../../data/reverserecall.json';\nimport reversef1 from '../../data/reversef1.json';\nimport logloss_sliceline from '../../data/logloss_sliceline.json';\n\nconst Main = ({\n  numFeatures,\n  sampleSize,\n  metric,\n  view,\n  sortBy,\n  overperforming,\n  features,\n  radius,\n  edgeFiltering,\n  edgeForce,\n  setDetails,\n  cursorMode,\n  show,\n  algorithm,\n  setShowConvexHull,\n  nodeSize\n}) => {\n  let data;\n  let reversedata;\n  let modelMetric;\n  if (overperforming) {\n    switch (metric) {\n      case 'Log Loss':\n        data = Object.values(reverselogloss['data']).map(\n          (obj) => Object.values(obj)[0]\n        );\n        reversedata = Object.values(logloss['data']).map(\n          (obj) => Object.values(obj)[0]\n        );\n        modelMetric = reverselogloss['model'];\n        break;\n      case 'Accuracy':\n        data = Object.values(reverseaccuracy['data']).map(\n          (obj) => Object.values(obj)[0]\n        );\n        reversedata = Object.values(accuracy['data']).map(\n          (obj) => Object.values(obj)[0]\n        );\n        modelMetric = reverseaccuracy['model'];\n        break;\n      case 'Precision':\n        data = Object.values(reverseprecision['data']).map(\n          (obj) => Object.values(obj)[0]\n        );\n        reversedata = Object.values(precision['data']).map(\n          (obj) => Object.values(obj)[0]\n        );\n        modelMetric = reverseprecision['model'];\n        break;\n      case 'Recall':\n        data = Object.values(reverserecall['data']).map(\n          (obj) => Object.values(obj)[0]\n        );\n        reversedata = Object.values(recall['data']).map(\n          (obj) => Object.values(obj)[0]\n        );\n        modelMetric = reverserecall['model'];\n        break;\n      case 'F1':\n        data = Object.values(reversef1['data']).map(\n          (obj) => Object.values(obj)[0]\n        );\n        reversedata = Object.values(f1['data']).map(\n          (obj) => Object.values(obj)[0]\n        );\n        modelMetric = reversef1['model'];\n        break;\n      default:\n        data = Object.values(reverselogloss['data']).map(\n          (obj) => Object.values(obj)[0]\n        );\n        reversedata = Object.values(logloss['data']).map(\n          (obj) => Object.values(obj)[0]\n        );\n        modelMetric = reverselogloss['model'];\n    }\n  } else {\n    switch (metric) {\n      case 'Log Loss':\n        data = Object.values(\n          algorithm === 'slicefinder'\n            ? logloss['data']\n            : logloss_sliceline['data']\n        ).map((obj) => Object.values(obj)[0]);\n        reversedata = Object.values(reverselogloss['data']).map(\n          (obj) => Object.values(obj)[0]\n        );\n        modelMetric =\n          algorithm === 'slicefinder'\n            ? logloss['model']\n            : logloss_sliceline['model'];\n        break;\n      case 'Accuracy':\n        data = Object.values(accuracy['data']).map(\n          (obj) => Object.values(obj)[0]\n        );\n        reversedata = Object.values(reverseaccuracy['data']).map(\n          (obj) => Object.values(obj)[0]\n        );\n        modelMetric = accuracy['model'];\n        break;\n      case 'Precision':\n        data = Object.values(precision['data']).map(\n          (obj) => Object.values(obj)[0]\n        );\n        reversedata = Object.values(reverseprecision['data']).map(\n          (obj) => Object.values(obj)[0]\n        );\n        modelMetric = precision['model'];\n        break;\n      case 'Recall':\n        data = Object.values(recall['data']).map(\n          (obj) => Object.values(obj)[0]\n        );\n        reversedata = Object.values(reverserecall['data']).map(\n          (obj) => Object.values(obj)[0]\n        );\n        modelMetric = recall['model'];\n        break;\n      case 'F1':\n        data = Object.values(f1['data']).map((obj) => Object.values(obj)[0]);\n        reversedata = Object.values(reversef1['data']).map(\n          (obj) => Object.values(obj)[0]\n        );\n        modelMetric = f1['model'];\n        break;\n      default:\n        data = Object.values(logloss['data']).map(\n          (obj) => Object.values(obj)[0]\n        );\n        reversedata = Object.values(reverselogloss['data']).map(\n          (obj) => Object.values(obj)[0]\n        );\n        modelMetric = logloss['model'];\n    }\n  }\n  const metricArray = data.map((obj) => obj.metric);\n  const reverseMetricArray = reversedata.map((obj) => obj.metric);\n  const max = Math.max(...metricArray, ...reverseMetricArray, modelMetric);\n  let filteredData = data\n    .filter((obj) => {\n      let sliceStr = obj.slice;\n      while (sliceStr.includes(':')) {\n        if (features.includes(sliceStr.substring(0, sliceStr.indexOf(':')))) {\n          return true;\n        }\n        sliceStr = sliceStr.substring(sliceStr.indexOf(':') + 1);\n      }\n      return false;\n    })\n    .filter((obj) => obj.size >= sampleSize)\n    .filter((obj) => obj.degree <= numFeatures)\n    .sort(function (a, b) {\n      if (sortBy === 'size') return b.size - a.size;\n      if (metric === 'Log Loss') {\n        if (overperforming) return a.metric - b.metric;\n        return b.metric - a.metric;\n      } else {\n        if (overperforming) return b.metric - a.metric;\n        return a.metric - b.metric;\n      }\n    });\n  if (view === 'bar') {\n    filteredData = filteredData.slice(0, 10);\n  } else {\n    filteredData = show === 'ten' ? filteredData.slice(0, 10) : filteredData;\n  }\n  return (\n    <div className='main-container' style={{ display: 'block', margin: 'auto', width: '75%'}}>\n      {view === 'bar' ? (\n        <SliceBarChart\n          data={filteredData}\n          model={modelMetric}\n          max={max}\n          view={view}\n          overperforming={overperforming}\n          metric={metric}\n          setDetails={setDetails}\n        />\n      ) : view === 'force' ? (\n        <ForceLayout\n          data={filteredData}\n          degree={numFeatures}\n          view={view}\n          metric={metric}\n          model={modelMetric}\n          overperforming={overperforming}\n          setDetails={setDetails}\n          radius={radius}\n          setShowConvexHull={setShowConvexHull}\n        />\n      ) : (\n        <GraphLayout\n          data={filteredData}\n          degree={numFeatures}\n          metric={metric}\n          model={modelMetric}\n          overperforming={overperforming}\n          radiusType={radius}\n          edgeFiltering={edgeFiltering}\n          edgeForce={edgeForce}\n          setDetails={setDetails}\n          cursorMode={cursorMode}\n          algorithm={algorithm}\n          setShowConvexHull={setShowConvexHull}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(Main);\n","import React from 'react';\nimport Nav from './components/Nav/Nav';\nimport LeftDrawer from './components/LeftDrawer/LeftDrawer';\nimport RightDrawer from './components/RightDrawer/RightDrawer';\nimport Main from './components/Main/Main';\nimport featuresData from './data/features.json'\n\nwindow.onbeforeunload = function () {\n  window.scrollTo(0, 0);\n};\n\nfunction App() {\n  const [algorithm, setAlgorithm] = React.useState('slicefinder');\n  const [numFeatures, setNumFeatures] = React.useState(2);\n  const [sampleSize, setSampleSize] = React.useState(0);\n  const [metric, setMetric] = React.useState('Log Loss');\n  const [view, setView] = React.useState('force');\n  const [sortBy, setSortBy] = React.useState('metric');\n  const [overperforming, setOverperforming] = React.useState(false);\n  const [radius, setRadius] = React.useState('log');\n  const [edgeFiltering, setEdgeFiltering] = React.useState(500);\n  const [edgeThickness, setEdgeThickness] = React.useState(1);\n  const [edgeForce, setEdgeForce] = React.useState(1);\n  const [cursorMode, setCursorMode] = React.useState('select');\n  const [show, setShow] = React.useState('ten');\n  const [nodeSize, setNodeSize] = React.useState('size')\n  const [features, setFeatures] = React.useState(featuresData.features);\n  const [details, setDetails] = React.useState(null);\n  const setDetailsCallback = React.useCallback((details) => {\n    setDetails(details);\n  }, []);\n  const [showConvexHull, setShowConvexHull] = React.useState(false);\n\n  return (\n    <div className='App'>\n      <Nav\n        view={view}\n        setView={setView}\n        algorithm={algorithm}\n        setAlgorithm={setAlgorithm}\n      />\n      <LeftDrawer\n        numFeatures={numFeatures}\n        setNumFeatures={setNumFeatures}\n        sampleSize={sampleSize}\n        setSampleSize={setSampleSize}\n        metric={metric}\n        setMetric={setMetric}\n        sortBy={sortBy}\n        setSortBy={setSortBy}\n        overperforming={overperforming}\n        setOverperforming={setOverperforming}\n        features={features}\n        setFeatures={setFeatures}\n        view={view}\n        radius={radius}\n        setRadius={setRadius}\n        edgeFiltering={edgeFiltering}\n        setEdgeFiltering={setEdgeFiltering}\n        edgeForce={edgeForce}\n        setEdgeForce={setEdgeForce}\n        cursorMode={cursorMode}\n        setCursorMode={setCursorMode}\n        show={show}\n        setShow={setShow}\n        nodeSize={nodeSize}\n        setNodeSize={setNodeSize}\n        showConvexHull={showConvexHull}\n        setShowConvexHull={setShowConvexHull}\n      />\n      <RightDrawer\n        details={details}\n        metric={metric}\n        overperforming={overperforming}\n        view={view}\n        convexHull={showConvexHull}\n      />\n      <Main\n        numFeatures={numFeatures}\n        sampleSize={sampleSize}\n        metric={metric}\n        view={view}\n        sortBy={sortBy}\n        overperforming={overperforming}\n        features={features}\n        radius={radius}\n        edgeFiltering={edgeFiltering}\n        edgeForce={edgeForce}\n        setDetails={setDetailsCallback}\n        cursorMode={cursorMode}\n        show={show}\n        algorithm={algorithm}\n        setShowConvexHull={setShowConvexHull}\n        nodeSize={nodeSize}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}