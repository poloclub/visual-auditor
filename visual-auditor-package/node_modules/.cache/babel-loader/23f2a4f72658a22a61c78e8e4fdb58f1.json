{"ast":null,"code":"var _jsxFileName = \"/Users/davidmunechika/Documents/Code/visual-auditor/src/components/Main/GraphLayout.js\",\n    _s = $RefreshSig$();\n\nimport { useD3 } from '../../hooks/useD3';\nimport React from 'react';\nimport * as d3 from 'd3';\nimport './GraphLayout.css';\nimport Button from '@mui/material/Button';\nimport logLossSamples from '../../data/loglosssamples.json';\nimport reverseLogLossSamples from '../../data/reverseloglosssamples.json';\nimport accuracySamples from '../../data/accuracysamples.json';\nimport precisionSamples from '../../data/precisionsamples.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GraphLayout({\n  data,\n  degree,\n  metric,\n  model,\n  overperforming,\n  radiusType,\n  edgeFiltering,\n  edgeThickness,\n  edgeForce,\n  setDetails,\n  pointerMode\n}) {\n  _s();\n\n  const margin = {\n    top: 20,\n    right: 30,\n    bottom: 50,\n    left: 80\n  };\n  const [selected, setSelected] = React.useState(null);\n  const [value, setValue] = React.useState(0); // integer state\n\n  function useForceUpdate() {\n    return () => setValue(value => value + 1); // update the state to force render\n  }\n\n  const forceUpdate = useForceUpdate();\n  const width = 800;\n  const height = 600;\n  const features = [];\n  let samples;\n\n  switch (metric) {\n    case 'Log Loss':\n      if (overperforming) samples = reverseLogLossSamples;else samples = logLossSamples;\n      break;\n\n    case 'Accuracy':\n      if (overperforming) samples = accuracySamples;else samples = accuracySamples;\n      break;\n\n    case 'Precision':\n      if (overperforming) samples = precisionSamples;else samples = precisionSamples;\n      break;\n\n    default:\n      if (overperforming) samples = reverseLogLossSamples;else samples = logLossSamples;\n      break;\n  }\n\n  data.forEach(obj => {\n    obj.classifiers = [];\n    let str = obj.slice;\n\n    while (str.indexOf(':') !== -1) {\n      let temp = str.substring(0, str.indexOf(':'));\n      obj.classifiers.push(temp);\n      if (!features.includes(temp)) features.push(temp);\n\n      if (str.indexOf(',') !== -1) {\n        str = str.substring(str.indexOf(',') + 2);\n      } else {\n        str = '';\n      }\n    }\n  });\n  console.log(features);\n  const xCenter = [];\n  const yCenter = [];\n\n  for (let i = 0; i < features.length; i++) {\n    xCenter.push((width - 200) / features.length * i + 100);\n    yCenter.push((height - 200) / features.length * i + 100);\n  }\n\n  const xAxis = g => g.attr('transform', `translate(0,${height - margin.bottom})`).call(d3.axisBottom(features).tickSizeOuter(0)).selectAll('text').attr('transform', 'translate(-10,0)rotate(-45)').style('text-anchor', 'end');\n\n  const y1Axis = g => g.attr('transform', `translate(${margin.left},0)`).style('color', 'steelblue').call(d3.axisLeft(features).ticks(null, 's')).call(g => g.select('.domain').remove()).call(g => g.append('text').attr('x', -margin.left).attr('y', 10).attr('fill', 'currentColor').attr('text-anchor', 'start').text(data.y1));\n\n  const nodes = data.map(obj => {\n    var _obj$classifiers$;\n\n    return {\n      radius: radiusType === 'log' ? Math.log(obj.size) : Math.sqrt(obj.size),\n      category: obj.degree,\n      xFeature: obj.classifiers[0],\n      yFeature: (_obj$classifiers$ = obj.classifiers[1]) !== null && _obj$classifiers$ !== void 0 ? _obj$classifiers$ : obj.classifiers[0],\n      slice: obj.slice,\n      size: obj.size,\n      metric: obj.metric,\n      classifiers: obj.classifiers\n    };\n  });\n\n  function countCommonSamples(slice1, slice2) {\n    let arr1 = samples[slice1];\n    let arr2 = samples[slice2];\n    if (!arr1 || !arr2) return 0;\n    arr1 = arr1.sort().slice(0, 1000);\n    arr2 = arr2.sort().slice(0, 1000);\n    return arr1.filter(sample => arr2.includes(sample)).length;\n  }\n\n  const links = [];\n\n  for (let i = 0; i < nodes.length; i++) {\n    for (let j = i + 1; j < nodes.length; j++) {\n      const count = countCommonSamples(nodes[i].slice, nodes[j].slice);\n\n      if (count > edgeFiltering) {\n        links.push({\n          source: i,\n          target: j,\n          sliceSource: nodes[i].slice,\n          sliceTarget: nodes[j].slice,\n          count: count\n        });\n      }\n    }\n  }\n\n  const graph = {\n    nodes: nodes,\n    links: links\n  };\n\n  function clamp(x, lo, hi) {\n    return x < lo ? lo : x > hi ? hi : x;\n  }\n\n  const ref = useD3(svg => {\n    svg = d3.select('.svg').style('width', '60%').style('height', '60%');\n    const link = svg.selectAll('.link').data(graph.links).join('line').classed('link', true);\n    const node = svg.selectAll('.node').data(graph.nodes).join('circle').attr('r', function (d) {\n      return d.radius;\n    }).style('fill', function (d) {\n      if (d.slice === selected) {\n        return d3.interpolateGreys(0.5);\n      }\n\n      if (overperforming) return d3.interpolateBlues(Math.abs((d.metric - model) / model));\n      return d3.interpolateReds(Math.abs((d.metric - model) / model));\n    }).classed('node', true).classed('fixed', d => d.fx !== undefined).on('mouseover', function (event, d) {\n      d3.select(this).attr('r', d.radius).style('opacity', '0.7');\n      d3.select('.tooltip').transition().duration(200).style('opacity', 0.9).style('left', Math.min(Math.max(0, d.x), width) + 100 + 'px').style('top', Math.min(height, Math.max(0, d.y)) + 'px');\n      d3.select('.tooltip').html('<strong>Slice Description: </strong>' + '<br><div style={{margin: \"1rem\"}}> </div>' + d.slice + '<br>' + '<strong>Size: </strong>' + '<br>' + d.size + ' samples' + '<br>' + '<strong>' + metric + ': ' + '</strong>' + '<br>' + d.metric.toFixed(2) + '<br>' + `(${Math.round((d.metric - model) / model * 100)}% difference)`);\n    }).on('mouseout', function (d, i) {\n      d3.select(this).attr('r', i.radius).style('opacity', '1');\n      d3.select('.tooltip').transition().style('opacity', 0).style('left', 0 + 'px').style('top', 0 + 'px');\n    }).on('click', click);\n    const simulation = d3.forceSimulation().nodes(graph.nodes).force('charge', d3.forceManyBody().strength(-50)).force('center', d3.forceCenter(width / 2, height / 2).strength(0.1)).force('x', d3.forceX().x(function (d) {\n      return xCenter[features.indexOf(d.xFeature)];\n    })).force('y', d3.forceY().y(function (d) {\n      if (degree > 1) {\n        return yCenter[features.indexOf(d.yFeature)];\n      } else {\n        return height / 4;\n      }\n    })).force('link', d3.forceLink(graph.links).strength(d => {\n      return d.count / 10000 * edgeForce;\n    })).force('collision', d3.forceCollide().radius(function (d) {\n      return d.radius;\n    })).on('tick', tick);\n\n    if (pointerMode === 'drag') {\n      const drag = d3.drag().on('start', dragstart).on('drag', dragged);\n      node.call(drag).on('click', click);\n    }\n\n    function tick() {\n      link.attr('x1', d => d.source.x).attr('y1', d => d.source.y).attr('x2', d => d.target.x).attr('y2', d => d.target.y).style('stroke-width', d => Math.pow(d.count / 1000, 2) * edgeThickness);\n      node.attr('cx', d => Math.max(Math.min(d.x, width), d.radius)).attr('cy', d => Math.max(Math.min(d.y, height), d.radius));\n    }\n\n    function click(event, d) {\n      if (pointerMode === 'select') {\n        setSelected(d.slice);\n        setDetails({\n          slice: d.slice,\n          size: d.size,\n          metric: d.metric,\n          similarSlices: links.map(link => {\n            if (link.count > edgeFiltering && link.sliceSource === d.slice) {\n              return link.sliceTarget;\n            } else if (link.count > edgeFiltering && link.sliceTarget === d.slice) {\n              return link.sliceSource;\n            }\n\n            return undefined;\n          }).filter(link => link !== undefined)\n        });\n      } else {\n        delete d.fx;\n        delete d.fy;\n        d3.select(this).classed('fixed', false);\n        d3.select(this).style('fill', () => {\n          if (overperforming) return d3.interpolateBlues(Math.abs((d.metric - model) / model));\n          return d3.interpolateReds(Math.abs((d.metric - model) / model));\n        });\n        simulation.alpha(1).restart();\n      }\n    }\n\n    function dragstart(event, d) {\n      d3.select(this).classed('fixed', true);\n      d3.select(this).style('fill', 'lightgray');\n    }\n\n    function dragged(event, d) {\n      d.fx = clamp(event.x, 0, width);\n      d.fy = clamp(event.y, 0, height);\n      simulation.alpha(1).restart();\n    }\n\n    d3.select('svg g').remove();\n  }, [data, value]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    style: {\n      overflow: 'scroll'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tooltip\",\n      style: {\n        position: 'absolute',\n        background: '#e6e6e6',\n        borderRadius: '0.5rem',\n        padding: '0.5rem'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \"svg\",\n      width: width,\n      height: height,\n      children: /*#__PURE__*/_jsxDEV(\"g\", {\n        transform: \"translate(50, 200)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: forceUpdate,\n      style: {\n        margin: '1rem'\n      },\n      children: \"Recenter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 326,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GraphLayout, \"se0z3QtA6TKOc/kTevbgmKqdIiE=\", false, function () {\n  return [useForceUpdate, useD3];\n});\n\n_c = GraphLayout;\nexport default GraphLayout;\n\nvar _c;\n\n$RefreshReg$(_c, \"GraphLayout\");","map":{"version":3,"sources":["/Users/davidmunechika/Documents/Code/visual-auditor/src/components/Main/GraphLayout.js"],"names":["useD3","React","d3","Button","logLossSamples","reverseLogLossSamples","accuracySamples","precisionSamples","GraphLayout","data","degree","metric","model","overperforming","radiusType","edgeFiltering","edgeThickness","edgeForce","setDetails","pointerMode","margin","top","right","bottom","left","selected","setSelected","useState","value","setValue","useForceUpdate","forceUpdate","width","height","features","samples","forEach","obj","classifiers","str","slice","indexOf","temp","substring","push","includes","console","log","xCenter","yCenter","i","length","xAxis","g","attr","call","axisBottom","tickSizeOuter","selectAll","style","y1Axis","axisLeft","ticks","select","remove","append","text","y1","nodes","map","radius","Math","size","sqrt","category","xFeature","yFeature","countCommonSamples","slice1","slice2","arr1","arr2","sort","filter","sample","links","j","count","source","target","sliceSource","sliceTarget","graph","clamp","x","lo","hi","ref","svg","link","join","classed","node","d","interpolateGreys","interpolateBlues","abs","interpolateReds","fx","undefined","on","event","transition","duration","min","max","y","html","toFixed","round","click","simulation","forceSimulation","force","forceManyBody","strength","forceCenter","forceX","forceY","forceLink","forceCollide","tick","drag","dragstart","dragged","pow","similarSlices","fy","alpha","restart","overflow","position","background","borderRadius","padding"],"mappings":"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","sourcesContent":["import { useD3 } from '../../hooks/useD3';\nimport React from 'react';\nimport * as d3 from 'd3';\nimport './GraphLayout.css';\nimport Button from '@mui/material/Button';\nimport logLossSamples from '../../data/loglosssamples.json';\nimport reverseLogLossSamples from '../../data/reverseloglosssamples.json';\nimport accuracySamples from '../../data/accuracysamples.json';\nimport precisionSamples from '../../data/precisionsamples.json';\n\nfunction GraphLayout({\n  data,\n  degree,\n  metric,\n  model,\n  overperforming,\n  radiusType,\n  edgeFiltering,\n  edgeThickness,\n  edgeForce,\n  setDetails,\n  pointerMode,\n}) {\n  const margin = { top: 20, right: 30, bottom: 50, left: 80 };\n  const [selected, setSelected] = React.useState(null);\n  const [value, setValue] = React.useState(0); // integer state\n  function useForceUpdate() {\n    return () => setValue((value) => value + 1); // update the state to force render\n  }\n  const forceUpdate = useForceUpdate();\n\n  const width = 800;\n  const height = 600;\n\n  const features = [];\n\n  let samples;\n\n  switch (metric) {\n    case 'Log Loss':\n      if (overperforming) samples = reverseLogLossSamples;\n      else samples = logLossSamples;\n      break;\n    case 'Accuracy':\n      if (overperforming) samples = accuracySamples;\n      else samples = accuracySamples;\n      break;\n    case 'Precision':\n      if (overperforming) samples = precisionSamples;\n      else samples = precisionSamples;\n      break;\n    default:\n      if (overperforming) samples = reverseLogLossSamples;\n      else samples = logLossSamples;\n      break;\n  }\n\n  data.forEach((obj) => {\n    obj.classifiers = [];\n    let str = obj.slice;\n    while (str.indexOf(':') !== -1) {\n      let temp = str.substring(0, str.indexOf(':'));\n      obj.classifiers.push(temp);\n      if (!features.includes(temp)) features.push(temp);\n      if (str.indexOf(',') !== -1) {\n        str = str.substring(str.indexOf(',') + 2);\n      } else {\n        str = '';\n      }\n    }\n  });\n\n  console.log(features);\n\n  const xCenter = [];\n  const yCenter = [];\n\n  for (let i = 0; i < features.length; i++) {\n    xCenter.push(((width - 200) / features.length) * i + 100);\n    yCenter.push(((height - 200) / features.length) * i + 100);\n  }\n\n  const xAxis = (g) =>\n    g\n      .attr('transform', `translate(0,${height - margin.bottom})`)\n      .call(d3.axisBottom(features).tickSizeOuter(0))\n      .selectAll('text')\n      .attr('transform', 'translate(-10,0)rotate(-45)')\n      .style('text-anchor', 'end');\n\n  const y1Axis = (g) =>\n    g\n      .attr('transform', `translate(${margin.left},0)`)\n      .style('color', 'steelblue')\n      .call(d3.axisLeft(features).ticks(null, 's'))\n      .call((g) => g.select('.domain').remove())\n      .call((g) =>\n        g\n          .append('text')\n          .attr('x', -margin.left)\n          .attr('y', 10)\n          .attr('fill', 'currentColor')\n          .attr('text-anchor', 'start')\n          .text(data.y1)\n      );\n\n  const nodes = data.map((obj) => {\n    return {\n      radius: radiusType === 'log' ? Math.log(obj.size) : Math.sqrt(obj.size),\n      category: obj.degree,\n      xFeature: obj.classifiers[0],\n      yFeature: obj.classifiers[1] ?? obj.classifiers[0],\n      slice: obj.slice,\n      size: obj.size,\n      metric: obj.metric,\n      classifiers: obj.classifiers,\n    };\n  });\n\n  function countCommonSamples(slice1, slice2) {\n    let arr1 = samples[slice1];\n    let arr2 = samples[slice2];\n    if (!arr1 || !arr2) return 0;\n    arr1 = arr1.sort().slice(0, 1000);\n    arr2 = arr2.sort().slice(0, 1000);\n    return arr1.filter((sample) => arr2.includes(sample)).length;\n  }\n\n  const links = [];\n\n  for (let i = 0; i < nodes.length; i++) {\n    for (let j = i + 1; j < nodes.length; j++) {\n      const count = countCommonSamples(nodes[i].slice, nodes[j].slice);\n      if (count > edgeFiltering) {\n        links.push({\n          source: i,\n          target: j,\n          sliceSource: nodes[i].slice,\n          sliceTarget: nodes[j].slice,\n          count: count,\n        });\n      }\n    }\n  }\n\n  const graph = {\n    nodes: nodes,\n    links: links,\n  };\n\n  function clamp(x, lo, hi) {\n    return x < lo ? lo : x > hi ? hi : x;\n  }\n\n  const ref = useD3(\n    (svg) => {\n      svg = d3.select('.svg').style('width', '60%').style('height', '60%');\n      const link = svg\n        .selectAll('.link')\n        .data(graph.links)\n        .join('line')\n        .classed('link', true);\n      const node = svg\n        .selectAll('.node')\n        .data(graph.nodes)\n        .join('circle')\n        .attr('r', function (d) {\n          return d.radius;\n        })\n        .style('fill', function (d) {\n          if (d.slice === selected) {\n            return d3.interpolateGreys(0.5);\n          }\n          if (overperforming)\n            return d3.interpolateBlues(Math.abs((d.metric - model) / model));\n          return d3.interpolateReds(Math.abs((d.metric - model) / model));\n        })\n        .classed('node', true)\n        .classed('fixed', (d) => d.fx !== undefined)\n        .on('mouseover', function (event, d) {\n          d3.select(this).attr('r', d.radius).style('opacity', '0.7');\n          d3.select('.tooltip')\n            .transition()\n            .duration(200)\n            .style('opacity', 0.9)\n            .style('left', Math.min(Math.max(0, d.x), width) + 100 + 'px')\n            .style('top', Math.min(height, Math.max(0, d.y)) + 'px');\n          d3.select('.tooltip').html(\n            '<strong>Slice Description: </strong>' +\n              '<br><div style={{margin: \"1rem\"}}> </div>' +\n              d.slice +\n              '<br>' +\n              '<strong>Size: </strong>' +\n              '<br>' +\n              d.size +\n              ' samples' +\n              '<br>' +\n              '<strong>' +\n              metric +\n              ': ' +\n              '</strong>' +\n              '<br>' +\n              d.metric.toFixed(2) +\n              '<br>' +\n              `(${Math.round(((d.metric - model) / model) * 100)}% difference)`\n          );\n        })\n        .on('mouseout', function (d, i) {\n          d3.select(this).attr('r', i.radius).style('opacity', '1');\n          d3.select('.tooltip')\n            .transition()\n            .style('opacity', 0)\n            .style('left', 0 + 'px')\n            .style('top', 0 + 'px');\n        })\n        .on('click', click);\n\n      const simulation = d3\n        .forceSimulation()\n        .nodes(graph.nodes)\n        .force('charge', d3.forceManyBody().strength(-50))\n        .force('center', d3.forceCenter(width / 2, height / 2).strength(0.1))\n        .force(\n          'x',\n          d3.forceX().x(function (d) {\n            return xCenter[features.indexOf(d.xFeature)];\n          })\n        )\n        .force(\n          'y',\n          d3.forceY().y(function (d) {\n            if (degree > 1) {\n              return yCenter[features.indexOf(d.yFeature)];\n            } else {\n              return height / 4;\n            }\n          })\n        )\n        .force(\n          'link',\n          d3.forceLink(graph.links).strength((d) => {\n            return (d.count / 10000) * edgeForce;\n          })\n        )\n        .force(\n          'collision',\n          d3.forceCollide().radius(function (d) {\n            return d.radius;\n          })\n        )\n        .on('tick', tick);\n      if (pointerMode === 'drag') {\n        const drag = d3.drag().on('start', dragstart).on('drag', dragged);\n\n        node.call(drag).on('click', click);\n      }\n\n      function tick() {\n        link\n          .attr('x1', (d) => d.source.x)\n          .attr('y1', (d) => d.source.y)\n          .attr('x2', (d) => d.target.x)\n          .attr('y2', (d) => d.target.y)\n          .style(\n            'stroke-width',\n            (d) => Math.pow(d.count / 1000, 2) * edgeThickness\n          );\n        node\n          .attr('cx', (d) => Math.max(Math.min(d.x, width), d.radius))\n          .attr('cy', (d) => Math.max(Math.min(d.y, height), d.radius));\n      }\n      function click(event, d) {\n        if (pointerMode === 'select') {\n          setSelected(d.slice);\n          setDetails({\n            slice: d.slice,\n            size: d.size,\n            metric: d.metric,\n            similarSlices: links\n              .map((link) => {\n                if (\n                  link.count > edgeFiltering &&\n                  link.sliceSource === d.slice\n                ) {\n                  return link.sliceTarget;\n                } else if (\n                  link.count > edgeFiltering &&\n                  link.sliceTarget === d.slice\n                ) {\n                  return link.sliceSource;\n                }\n                return undefined;\n              })\n              .filter((link) => link !== undefined),\n          });\n        } else {\n          delete d.fx;\n          delete d.fy;\n          d3.select(this).classed('fixed', false);\n          d3.select(this).style('fill', () => {\n            if (overperforming)\n              return d3.interpolateBlues(Math.abs((d.metric - model) / model));\n            return d3.interpolateReds(Math.abs((d.metric - model) / model));\n          });\n          simulation.alpha(1).restart();\n        }\n      }\n\n      function dragstart(event, d) {\n        d3.select(this).classed('fixed', true);\n        d3.select(this).style('fill', 'lightgray');\n      }\n\n      function dragged(event, d) {\n        d.fx = clamp(event.x, 0, width);\n        d.fy = clamp(event.y, 0, height);\n        simulation.alpha(1).restart();\n      }\n\n      d3.select('svg g').remove();\n    },\n    [data, value]\n  );\n\n  return (\n    <div className='container' style={{ overflow: 'scroll' }}>\n      <div\n        className='tooltip'\n        style={{\n          position: 'absolute',\n          background: '#e6e6e6',\n          borderRadius: '0.5rem',\n          padding: '0.5rem',\n        }}\n      ></div>\n      <svg className='svg' width={width} height={height}>\n        <g transform='translate(50, 200)'></g>\n      </svg>\n      <br />\n      <Button\n        variant='outlined'\n        onClick={forceUpdate}\n        style={{ margin: '1rem' }}\n      >\n        Recenter\n      </Button>\n    </div>\n  );\n}\n\nexport default GraphLayout;\n"]},"metadata":{},"sourceType":"module"}