{"ast":null,"code":"import _toConsumableArray from \"/Users/davidmunechika/Documents/Code/visual-auditor/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"name\", \"slot\", \"skipVariantsResolver\", \"skipSx\", \"overridesResolver\"],\n    _excluded2 = [\"theme\"],\n    _excluded3 = [\"theme\"];\nimport styledEngineStyled from '@mui/styled-engine';\nimport { getDisplayName } from '@mui/utils';\nimport createTheme from './createTheme';\nimport styleFunctionSx from './styleFunctionSx';\nimport propsToClassKey from './propsToClassKey';\n\nfunction isEmpty(obj) {\n  return Object.keys(obj).length === 0;\n}\n\nvar getStyleOverrides = function getStyleOverrides(name, theme) {\n  if (theme.components && theme.components[name] && theme.components[name].styleOverrides) {\n    return theme.components[name].styleOverrides;\n  }\n\n  return null;\n};\n\nvar getVariantStyles = function getVariantStyles(name, theme) {\n  var variants = [];\n\n  if (theme && theme.components && theme.components[name] && theme.components[name].variants) {\n    variants = theme.components[name].variants;\n  }\n\n  var variantsStyles = {};\n  variants.forEach(function (definition) {\n    var key = propsToClassKey(definition.props);\n    variantsStyles[key] = definition.style;\n  });\n  return variantsStyles;\n};\n\nvar variantsResolver = function variantsResolver(props, styles, theme, name) {\n  var _theme$components, _theme$components$nam;\n\n  var _props$ownerState = props.ownerState,\n      ownerState = _props$ownerState === void 0 ? {} : _props$ownerState;\n  var variantsStyles = [];\n  var themeVariants = theme == null ? void 0 : (_theme$components = theme.components) == null ? void 0 : (_theme$components$nam = _theme$components[name]) == null ? void 0 : _theme$components$nam.variants;\n\n  if (themeVariants) {\n    themeVariants.forEach(function (themeVariant) {\n      var isMatch = true;\n      Object.keys(themeVariant.props).forEach(function (key) {\n        if (ownerState[key] !== themeVariant.props[key] && props[key] !== themeVariant.props[key]) {\n          isMatch = false;\n        }\n      });\n\n      if (isMatch) {\n        variantsStyles.push(styles[propsToClassKey(themeVariant.props)]);\n      }\n    });\n  }\n\n  return variantsStyles;\n};\n\nexport function shouldForwardProp(prop) {\n  return prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as';\n}\nexport var systemDefaultTheme = createTheme();\n\nvar lowercaseFirstLetter = function lowercaseFirstLetter(string) {\n  return string.charAt(0).toLowerCase() + string.slice(1);\n};\n\nexport default function createStyled() {\n  var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _input$defaultTheme = input.defaultTheme,\n      defaultTheme = _input$defaultTheme === void 0 ? systemDefaultTheme : _input$defaultTheme,\n      _input$rootShouldForw = input.rootShouldForwardProp,\n      rootShouldForwardProp = _input$rootShouldForw === void 0 ? shouldForwardProp : _input$rootShouldForw,\n      _input$slotShouldForw = input.slotShouldForwardProp,\n      slotShouldForwardProp = _input$slotShouldForw === void 0 ? shouldForwardProp : _input$slotShouldForw;\n  return function (tag) {\n    var inputOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var componentName = inputOptions.name,\n        componentSlot = inputOptions.slot,\n        inputSkipVariantsResolver = inputOptions.skipVariantsResolver,\n        inputSkipSx = inputOptions.skipSx,\n        overridesResolver = inputOptions.overridesResolver,\n        options = _objectWithoutPropertiesLoose(inputOptions, _excluded); // if skipVariantsResolver option is defined, take the value, otherwise, true for root and false for other slots.\n\n\n    var skipVariantsResolver = inputSkipVariantsResolver !== undefined ? inputSkipVariantsResolver : componentSlot && componentSlot !== 'Root' || false;\n    var skipSx = inputSkipSx || false;\n    var label;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (componentName) {\n        label = \"\".concat(componentName, \"-\").concat(lowercaseFirstLetter(componentSlot || 'Root'));\n      }\n    }\n\n    var shouldForwardPropOption = shouldForwardProp;\n\n    if (componentSlot === 'Root') {\n      shouldForwardPropOption = rootShouldForwardProp;\n    } else if (componentSlot) {\n      // any other slot specified\n      shouldForwardPropOption = slotShouldForwardProp;\n    }\n\n    var defaultStyledResolver = styledEngineStyled(tag, _extends({\n      shouldForwardProp: shouldForwardPropOption,\n      label: label\n    }, options));\n\n    var muiStyledResolver = function muiStyledResolver(styleArg) {\n      for (var _len = arguments.length, expressions = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        expressions[_key - 1] = arguments[_key];\n      }\n\n      var expressionsWithDefaultTheme = expressions ? expressions.map(function (stylesArg) {\n        return typeof stylesArg === 'function' ? function (_ref) {\n          var themeInput = _ref.theme,\n              other = _objectWithoutPropertiesLoose(_ref, _excluded2);\n\n          return stylesArg(_extends({\n            theme: isEmpty(themeInput) ? defaultTheme : themeInput\n          }, other));\n        } : stylesArg;\n      }) : [];\n      var transformedStyleArg = styleArg;\n\n      if (componentName && overridesResolver) {\n        expressionsWithDefaultTheme.push(function (props) {\n          var theme = isEmpty(props.theme) ? defaultTheme : props.theme;\n          var styleOverrides = getStyleOverrides(componentName, theme);\n\n          if (styleOverrides) {\n            return overridesResolver(props, styleOverrides);\n          }\n\n          return null;\n        });\n      }\n\n      if (componentName && !skipVariantsResolver) {\n        expressionsWithDefaultTheme.push(function (props) {\n          var theme = isEmpty(props.theme) ? defaultTheme : props.theme;\n          return variantsResolver(props, getVariantStyles(componentName, theme), theme, componentName);\n        });\n      }\n\n      if (!skipSx) {\n        expressionsWithDefaultTheme.push(function (props) {\n          var theme = isEmpty(props.theme) ? defaultTheme : props.theme;\n          return styleFunctionSx(_extends({}, props, {\n            theme: theme\n          }));\n        });\n      }\n\n      var numOfCustomFnsApplied = expressionsWithDefaultTheme.length - expressions.length;\n\n      if (Array.isArray(styleArg) && numOfCustomFnsApplied > 0) {\n        var placeholders = new Array(numOfCustomFnsApplied).fill(''); // If the type is array, than we need to add placeholders in the template for the overrides, variants and the sx styles.\n\n        transformedStyleArg = [].concat(_toConsumableArray(styleArg), _toConsumableArray(placeholders));\n        transformedStyleArg.raw = [].concat(_toConsumableArray(styleArg.raw), _toConsumableArray(placeholders));\n      } else if (typeof styleArg === 'function') {\n        // If the type is function, we need to define the default theme.\n        transformedStyleArg = function transformedStyleArg(_ref2) {\n          var themeInput = _ref2.theme,\n              other = _objectWithoutPropertiesLoose(_ref2, _excluded3);\n\n          return styleArg(_extends({\n            theme: isEmpty(themeInput) ? defaultTheme : themeInput\n          }, other));\n        };\n      }\n\n      var Component = defaultStyledResolver.apply(void 0, [transformedStyleArg].concat(_toConsumableArray(expressionsWithDefaultTheme)));\n\n      if (process.env.NODE_ENV !== 'production') {\n        var displayName;\n\n        if (componentName) {\n          displayName = \"\".concat(componentName).concat(componentSlot || '');\n        }\n\n        if (displayName === undefined) {\n          displayName = \"Styled(\".concat(getDisplayName(tag), \")\");\n        }\n\n        Component.displayName = displayName;\n      }\n\n      return Component;\n    };\n\n    return muiStyledResolver;\n  };\n}","map":{"version":3,"sources":["/Users/davidmunechika/Documents/Code/visual-auditor/node_modules/@mui/system/esm/createStyled.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","_excluded2","_excluded3","styledEngineStyled","getDisplayName","createTheme","styleFunctionSx","propsToClassKey","isEmpty","obj","Object","keys","length","getStyleOverrides","name","theme","components","styleOverrides","getVariantStyles","variants","variantsStyles","forEach","definition","key","props","style","variantsResolver","styles","_theme$components","_theme$components$nam","ownerState","themeVariants","themeVariant","isMatch","push","shouldForwardProp","prop","systemDefaultTheme","lowercaseFirstLetter","string","charAt","toLowerCase","slice","createStyled","input","defaultTheme","rootShouldForwardProp","slotShouldForwardProp","tag","inputOptions","componentName","componentSlot","slot","inputSkipVariantsResolver","skipVariantsResolver","inputSkipSx","skipSx","overridesResolver","options","undefined","label","process","env","NODE_ENV","shouldForwardPropOption","defaultStyledResolver","muiStyledResolver","styleArg","expressions","expressionsWithDefaultTheme","map","stylesArg","_ref","themeInput","other","transformedStyleArg","numOfCustomFnsApplied","Array","isArray","placeholders","fill","raw","_ref2","Component","displayName"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"name\", \"slot\", \"skipVariantsResolver\", \"skipSx\", \"overridesResolver\"],\n      _excluded2 = [\"theme\"],\n      _excluded3 = [\"theme\"];\nimport styledEngineStyled from '@mui/styled-engine';\nimport { getDisplayName } from '@mui/utils';\nimport createTheme from './createTheme';\nimport styleFunctionSx from './styleFunctionSx';\nimport propsToClassKey from './propsToClassKey';\n\nfunction isEmpty(obj) {\n  return Object.keys(obj).length === 0;\n}\n\nconst getStyleOverrides = (name, theme) => {\n  if (theme.components && theme.components[name] && theme.components[name].styleOverrides) {\n    return theme.components[name].styleOverrides;\n  }\n\n  return null;\n};\n\nconst getVariantStyles = (name, theme) => {\n  let variants = [];\n\n  if (theme && theme.components && theme.components[name] && theme.components[name].variants) {\n    variants = theme.components[name].variants;\n  }\n\n  const variantsStyles = {};\n  variants.forEach(definition => {\n    const key = propsToClassKey(definition.props);\n    variantsStyles[key] = definition.style;\n  });\n  return variantsStyles;\n};\n\nconst variantsResolver = (props, styles, theme, name) => {\n  var _theme$components, _theme$components$nam;\n\n  const {\n    ownerState = {}\n  } = props;\n  const variantsStyles = [];\n  const themeVariants = theme == null ? void 0 : (_theme$components = theme.components) == null ? void 0 : (_theme$components$nam = _theme$components[name]) == null ? void 0 : _theme$components$nam.variants;\n\n  if (themeVariants) {\n    themeVariants.forEach(themeVariant => {\n      let isMatch = true;\n      Object.keys(themeVariant.props).forEach(key => {\n        if (ownerState[key] !== themeVariant.props[key] && props[key] !== themeVariant.props[key]) {\n          isMatch = false;\n        }\n      });\n\n      if (isMatch) {\n        variantsStyles.push(styles[propsToClassKey(themeVariant.props)]);\n      }\n    });\n  }\n\n  return variantsStyles;\n};\n\nexport function shouldForwardProp(prop) {\n  return prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as';\n}\nexport const systemDefaultTheme = createTheme();\n\nconst lowercaseFirstLetter = string => {\n  return string.charAt(0).toLowerCase() + string.slice(1);\n};\n\nexport default function createStyled(input = {}) {\n  const {\n    defaultTheme = systemDefaultTheme,\n    rootShouldForwardProp = shouldForwardProp,\n    slotShouldForwardProp = shouldForwardProp\n  } = input;\n  return (tag, inputOptions = {}) => {\n    const {\n      name: componentName,\n      slot: componentSlot,\n      skipVariantsResolver: inputSkipVariantsResolver,\n      skipSx: inputSkipSx,\n      overridesResolver\n    } = inputOptions,\n          options = _objectWithoutPropertiesLoose(inputOptions, _excluded); // if skipVariantsResolver option is defined, take the value, otherwise, true for root and false for other slots.\n\n\n    const skipVariantsResolver = inputSkipVariantsResolver !== undefined ? inputSkipVariantsResolver : componentSlot && componentSlot !== 'Root' || false;\n    const skipSx = inputSkipSx || false;\n    let label;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (componentName) {\n        label = `${componentName}-${lowercaseFirstLetter(componentSlot || 'Root')}`;\n      }\n    }\n\n    let shouldForwardPropOption = shouldForwardProp;\n\n    if (componentSlot === 'Root') {\n      shouldForwardPropOption = rootShouldForwardProp;\n    } else if (componentSlot) {\n      // any other slot specified\n      shouldForwardPropOption = slotShouldForwardProp;\n    }\n\n    const defaultStyledResolver = styledEngineStyled(tag, _extends({\n      shouldForwardProp: shouldForwardPropOption,\n      label\n    }, options));\n\n    const muiStyledResolver = (styleArg, ...expressions) => {\n      const expressionsWithDefaultTheme = expressions ? expressions.map(stylesArg => {\n        return typeof stylesArg === 'function' ? _ref => {\n          let {\n            theme: themeInput\n          } = _ref,\n              other = _objectWithoutPropertiesLoose(_ref, _excluded2);\n\n          return stylesArg(_extends({\n            theme: isEmpty(themeInput) ? defaultTheme : themeInput\n          }, other));\n        } : stylesArg;\n      }) : [];\n      let transformedStyleArg = styleArg;\n\n      if (componentName && overridesResolver) {\n        expressionsWithDefaultTheme.push(props => {\n          const theme = isEmpty(props.theme) ? defaultTheme : props.theme;\n          const styleOverrides = getStyleOverrides(componentName, theme);\n\n          if (styleOverrides) {\n            return overridesResolver(props, styleOverrides);\n          }\n\n          return null;\n        });\n      }\n\n      if (componentName && !skipVariantsResolver) {\n        expressionsWithDefaultTheme.push(props => {\n          const theme = isEmpty(props.theme) ? defaultTheme : props.theme;\n          return variantsResolver(props, getVariantStyles(componentName, theme), theme, componentName);\n        });\n      }\n\n      if (!skipSx) {\n        expressionsWithDefaultTheme.push(props => {\n          const theme = isEmpty(props.theme) ? defaultTheme : props.theme;\n          return styleFunctionSx(_extends({}, props, {\n            theme\n          }));\n        });\n      }\n\n      const numOfCustomFnsApplied = expressionsWithDefaultTheme.length - expressions.length;\n\n      if (Array.isArray(styleArg) && numOfCustomFnsApplied > 0) {\n        const placeholders = new Array(numOfCustomFnsApplied).fill(''); // If the type is array, than we need to add placeholders in the template for the overrides, variants and the sx styles.\n\n        transformedStyleArg = [...styleArg, ...placeholders];\n        transformedStyleArg.raw = [...styleArg.raw, ...placeholders];\n      } else if (typeof styleArg === 'function') {\n        // If the type is function, we need to define the default theme.\n        transformedStyleArg = _ref2 => {\n          let {\n            theme: themeInput\n          } = _ref2,\n              other = _objectWithoutPropertiesLoose(_ref2, _excluded3);\n\n          return styleArg(_extends({\n            theme: isEmpty(themeInput) ? defaultTheme : themeInput\n          }, other));\n        };\n      }\n\n      const Component = defaultStyledResolver(transformedStyleArg, ...expressionsWithDefaultTheme);\n\n      if (process.env.NODE_ENV !== 'production') {\n        let displayName;\n\n        if (componentName) {\n          displayName = `${componentName}${componentSlot || ''}`;\n        }\n\n        if (displayName === undefined) {\n          displayName = `Styled(${getDisplayName(tag)})`;\n        }\n\n        Component.displayName = displayName;\n      }\n\n      return Component;\n    };\n\n    return muiStyledResolver;\n  };\n}"]},"metadata":{},"sourceType":"module"}