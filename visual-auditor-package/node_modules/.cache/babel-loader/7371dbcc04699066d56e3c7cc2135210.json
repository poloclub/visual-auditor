{"ast":null,"code":"var _jsxFileName = \"/Users/davidmunechika/Documents/Code/visual-auditor/src/components/Main/ForceLayout.js\",\n    _s2 = $RefreshSig$();\n\nimport { useD3 } from '../../hooks/useD3';\nimport React from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ForceLayout({\n  data,\n  degree,\n  view,\n  metric,\n  model,\n  overperforming,\n  setDetails\n}) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [selected, setSelected] = React.useState(null);\n\n  function useForceUpdate() {\n    _s();\n\n    const [value, setValue] = React.useState(0); // integer state\n\n    return () => setValue(value => value + 1); // update the state to force render\n  }\n\n  _s(useForceUpdate, \"qPBOvRc2Co1iWTsdTL0g7j/rpjU=\");\n\n  const forceUpdate = useForceUpdate();\n  const width = 800;\n  const height = 800;\n  const ref = useD3(svg => {\n    d3.selectAll('svg').remove();\n    let div = d3.select('.tooltip').style('opacity', 0).style('width', '200px').style('height', '150px').style('padding', '1rem 0.5rem 0 0.5rem').style('border-radius', '20px');\n    const features = [];\n    data.forEach(obj => {\n      obj.classifiers = [];\n      let str = obj.slice;\n\n      while (str.indexOf(':') !== -1) {\n        let temp = str.substring(0, str.indexOf(':'));\n        obj.classifiers.push(temp);\n        if (!features.includes(temp)) features.push(temp);\n\n        if (str.indexOf(',') !== -1) {\n          str = str.substring(str.indexOf(',') + 2);\n        } else {\n          str = '';\n        }\n      }\n    });\n    const xCenter = [];\n    const yCenter = [];\n\n    for (let i = 0; i < features.length; i++) {\n      xCenter.push((width - 200) / features.length * i + 100);\n      yCenter.push((height - 200) / features.length * i - 100);\n    }\n\n    const nodes = data.map(obj => {\n      var _obj$classifiers$;\n\n      return {\n        radius: Math.sqrt(obj.size),\n        category: obj.degree,\n        xFeature: obj.classifiers[0],\n        yFeature: (_obj$classifiers$ = obj.classifiers[1]) !== null && _obj$classifiers$ !== void 0 ? _obj$classifiers$ : obj.classifiers[0],\n        slice: obj.slice,\n        size: obj.size,\n        metric: obj.metric\n      };\n    });\n    const simulation = d3.forceSimulation(nodes).force('charge', d3.forceManyBody().strength(5)).force('x', d3.forceX().x(function (d) {\n      return xCenter[features.indexOf(d.xFeature)];\n    })).force('y', d3.forceY().y(function (d) {\n      if (degree > 1) {\n        return yCenter[features.indexOf(d.yFeature)];\n      } else {\n        return height / 4;\n      }\n    })).force('collision', d3.forceCollide().radius(function (d) {\n      return d.radius;\n    })).on('tick', ticked);\n\n    function ticked() {\n      d3.select('svg g').selectAll('circle').data(nodes).join('circle').attr('class', 'node').attr('r', function (d) {\n        return d.radius;\n      }).attr('cx', function (d) {\n        return d.x;\n      }).attr('cy', function (d) {\n        return d.y;\n      }).style('fill', function (d) {\n        if (d.slice === selected) {\n          return d3.interpolateGreys(0.5);\n        }\n\n        if (overperforming) return d3.interpolateBlues(Math.abs((d.metric - model) / model));\n        return d3.interpolateReds(Math.abs((d.metric - model) / model));\n      }).style('opacity', function (d) {\n        return '1';\n      }).on('mouseover', function (event, d) {\n        d3.select(this).attr('r', d.radius * 1.1).style('opacity', '0.7');\n        div.transition().duration(200).style('opacity', 0.9).style('left', width / 3 + d.x + 'px').style('top', height / 6 + d.y + 'px');\n        div.html('<strong>Slice Description: </strong>' + '<br><div style={{margin: \"1rem\"}}> </div>' + d.slice + '<br>' + '<strong>Size: </strong>' + '<br>' + d.size + ' samples' + '<br>' + '<strong>' + metric + ': ' + '</strong>' + '<br>' + d.metric.toFixed(2) + '<br>' + `(${Math.round((d.metric - model) / model * 100)}% difference)`);\n      }).on('mouseout', function (event, d) {\n        d3.select(this).attr('r', d.radius).style('opacity', '1');\n        div.transition().style('opacity', 0).style('left', width + 'px').style('top', 0 + 'px');\n      }).on('click', function (event, d) {\n        setSelected(d.slice);\n        setDetails({\n          slice: d.slice,\n          size: d.size,\n          metric: d.metric,\n          similarSlices: []\n        });\n      });\n    }\n  }, [data, view]);\n  if (view !== 'force') return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"force\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tooltip\",\n      style: {\n        position: 'absolute',\n        background: '#e6e6e6'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: width,\n      height: height,\n      onMouseEnter: forceUpdate,\n      onMouseLeave: forceUpdate,\n      id: \"force-svg\",\n      className: \"svg\",\n      children: /*#__PURE__*/_jsxDEV(\"g\", {\n        id: \"force-g\",\n        className: \"g\",\n        transform: \"translate(50, 200)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(ForceLayout, \"waoOb2zXLco0i+FsLCgjPhvi1ZU=\", false, function () {\n  return [useForceUpdate, useD3];\n});\n\n_c = ForceLayout;\nexport default ForceLayout;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForceLayout\");","map":{"version":3,"sources":["/Users/davidmunechika/Documents/Code/visual-auditor/src/components/Main/ForceLayout.js"],"names":["useD3","React","d3","ForceLayout","data","degree","view","metric","model","overperforming","setDetails","selected","setSelected","useState","useForceUpdate","value","setValue","forceUpdate","width","height","ref","svg","selectAll","remove","div","select","style","features","forEach","obj","classifiers","str","slice","indexOf","temp","substring","push","includes","xCenter","yCenter","i","length","nodes","map","radius","Math","sqrt","size","category","xFeature","yFeature","simulation","forceSimulation","force","forceManyBody","strength","forceX","x","d","forceY","y","forceCollide","on","ticked","join","attr","interpolateGreys","interpolateBlues","abs","interpolateReds","event","transition","duration","html","toFixed","round","similarSlices","position","background"],"mappings":"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","sourcesContent":["import { useD3 } from '../../hooks/useD3';\nimport React from 'react';\nimport * as d3 from 'd3';\n\nfunction ForceLayout({\n  data,\n  degree,\n  view,\n  metric,\n  model,\n  overperforming,\n  setDetails,\n}) {\n  const [selected, setSelected] = React.useState(null);\n  function useForceUpdate() {\n    const [value, setValue] = React.useState(0); // integer state\n    return () => setValue((value) => value + 1); // update the state to force render\n  }\n  const forceUpdate = useForceUpdate();\n\n  const width = 800;\n  const height = 800;\n  const ref = useD3(\n    (svg) => {\n      d3.selectAll('svg').remove();\n\n      let div = d3\n        .select('.tooltip')\n        .style('opacity', 0)\n        .style('width', '200px')\n        .style('height', '150px')\n        .style('padding', '1rem 0.5rem 0 0.5rem')\n        .style('border-radius', '20px');\n      const features = [];\n      data.forEach((obj) => {\n        obj.classifiers = [];\n        let str = obj.slice;\n        while (str.indexOf(':') !== -1) {\n          let temp = str.substring(0, str.indexOf(':'));\n          obj.classifiers.push(temp);\n          if (!features.includes(temp)) features.push(temp);\n          if (str.indexOf(',') !== -1) {\n            str = str.substring(str.indexOf(',') + 2);\n          } else {\n            str = '';\n          }\n        }\n      });\n      const xCenter = [];\n      const yCenter = [];\n      for (let i = 0; i < features.length; i++) {\n        xCenter.push(((width - 200) / features.length) * i + 100);\n        yCenter.push(((height - 200) / features.length) * i - 100);\n      }\n      const nodes = data.map((obj) => {\n        return {\n          radius: Math.sqrt(obj.size),\n          category: obj.degree,\n          xFeature: obj.classifiers[0],\n          yFeature: obj.classifiers[1] ?? obj.classifiers[0],\n          slice: obj.slice,\n          size: obj.size,\n          metric: obj.metric,\n        };\n      });\n\n      const simulation = d3\n        .forceSimulation(nodes)\n        .force('charge', d3.forceManyBody().strength(5))\n        .force(\n          'x',\n          d3.forceX().x(function (d) {\n            return xCenter[features.indexOf(d.xFeature)];\n          })\n        )\n        .force(\n          'y',\n          d3.forceY().y(function (d) {\n            if (degree > 1) {\n              return yCenter[features.indexOf(d.yFeature)];\n            } else {\n              return height / 4;\n            }\n          })\n        )\n        .force(\n          'collision',\n          d3.forceCollide().radius(function (d) {\n            return d.radius;\n          })\n        )\n        .on('tick', ticked);\n\n      function ticked() {\n        d3.select('svg g')\n          .selectAll('circle')\n          .data(nodes)\n          .join('circle')\n          .attr('class', 'node')\n          .attr('r', function (d) {\n            return d.radius;\n          })\n          .attr('cx', function (d) {\n            return d.x;\n          })\n          .attr('cy', function (d) {\n            return d.y;\n          })\n          .style('fill', function (d) {\n            if (d.slice === selected) {\n              return d3.interpolateGreys(0.5);\n            }\n            if (overperforming)\n              return d3.interpolateBlues(Math.abs((d.metric - model) / model));\n            return d3.interpolateReds(Math.abs((d.metric - model) / model));\n          })\n          .style('opacity', function (d) {\n            return '1';\n          })\n          .on('mouseover', function (event, d) {\n            d3.select(this)\n              .attr('r', d.radius * 1.1)\n              .style('opacity', '0.7');\n            div\n              .transition()\n              .duration(200)\n              .style('opacity', 0.9)\n              .style('left', width / 3 + d.x + 'px')\n              .style('top', height / 6 + d.y + 'px');\n            div.html(\n              '<strong>Slice Description: </strong>' +\n                '<br><div style={{margin: \"1rem\"}}> </div>' +\n                d.slice +\n                '<br>' +\n                '<strong>Size: </strong>' +\n                '<br>' +\n                d.size +\n                ' samples' +\n                '<br>' +\n                '<strong>' +\n                metric +\n                ': ' +\n                '</strong>' +\n                '<br>' +\n                d.metric.toFixed(2) +\n                '<br>' +\n                `(${Math.round(\n                  ((d.metric - model) / model) * 100\n                )}% difference)`\n            );\n          })\n          .on('mouseout', function (event, d) {\n            d3.select(this).attr('r', d.radius).style('opacity', '1');\n            div\n              .transition()\n              .style('opacity', 0)\n              .style('left', width + 'px')\n              .style('top', 0 + 'px');\n          })\n          .on('click', function (event, d) {\n            setSelected(d.slice);\n            setDetails({\n              slice: d.slice,\n              size: d.size,\n              metric: d.metric,\n              similarSlices: [],\n            });\n          });\n      }\n    },\n    [data, view]\n  );\n\n  if (view !== 'force') return null;\n\n  return (\n    <div className='force'>\n      <div\n        className='tooltip'\n        style={{ position: 'absolute', background: '#e6e6e6' }}\n      ></div>\n      <svg\n        width={width}\n        height={height}\n        onMouseEnter={forceUpdate}\n        onMouseLeave={forceUpdate}\n        id='force-svg'\n        className='svg'\n      >\n        <g id='force-g' className='g' transform='translate(50, 200)'></g>\n      </svg>\n    </div>\n  );\n}\n\nexport default ForceLayout;\n"]},"metadata":{},"sourceType":"module"}