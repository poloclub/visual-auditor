{"ast":null,"code":"import _slicedToArray from \"/Users/davidmunechika/Documents/Code/Research/visual-auditor/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var classes = ownerState.classes,\n      checked = ownerState.checked,\n      disabled = ownerState.disabled,\n      edge = ownerState.edge;\n  var slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && \"edge\".concat(capitalize(edge))],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\n\nvar SwitchBaseRoot = styled(ButtonBase, {\n  skipSx: true\n})(function (_ref) {\n  var ownerState = _ref.ownerState;\n  return _extends({\n    padding: 9,\n    borderRadius: '50%'\n  }, ownerState.edge === 'start' && {\n    marginLeft: ownerState.size === 'small' ? -3 : -12\n  }, ownerState.edge === 'end' && {\n    marginRight: ownerState.size === 'small' ? -3 : -12\n  });\n});\nvar SwitchBaseInput = styled('input', {\n  skipSx: true\n})({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n\n  var ownerState = _extends({}, props, {\n    checked: checked,\n    disabled: disabled,\n    disableFocusRipple: disableFocusRipple,\n    edge: edge\n  });\n\n  var classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor && id,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type\n    }, type === 'checkbox' && value === undefined ? {} : {\n      value: value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;","map":{"version":3,"sources":["/Users/davidmunechika/Documents/Code/Research/visual-auditor/node_modules/@mui/material/internal/SwitchBase.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","clsx","refType","unstable_composeClasses","composeClasses","capitalize","styled","useControlled","useFormControl","ButtonBase","getSwitchBaseUtilityClass","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","classes","checked","disabled","edge","slots","root","input","SwitchBaseRoot","skipSx","padding","borderRadius","marginLeft","size","marginRight","SwitchBaseInput","cursor","position","opacity","width","height","top","left","margin","zIndex","SwitchBase","forwardRef","props","ref","autoFocus","checkedProp","checkedIcon","className","defaultChecked","disabledProp","disableFocusRipple","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value","other","controlled","default","Boolean","state","setCheckedState","muiFormControl","handleFocus","event","handleBlur","handleInputChange","nativeEvent","defaultPrevented","newChecked","target","hasLabelFor","component","centerRipple","focusRipple","role","undefined","children","process","env","NODE_ENV","propTypes","bool","node","isRequired","object","string","oneOf","func","sx","oneOfType","number","any"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\n\nconst SwitchBaseRoot = styled(ButtonBase, {\n  skipSx: true\n})(({\n  ownerState\n}) => _extends({\n  padding: 9,\n  borderRadius: '50%'\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input', {\n  skipSx: true\n})({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n/**\n * @ignore - internal component.\n */\n\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n    autoFocus,\n    checked: checkedProp,\n    checkedIcon,\n    className,\n    defaultChecked,\n    disabled: disabledProp,\n    disableFocusRipple = false,\n    edge = false,\n    icon,\n    id,\n    inputProps,\n    inputRef,\n    name,\n    onBlur,\n    onChange,\n    onFocus,\n    readOnly,\n    required,\n    tabIndex,\n    type,\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  let disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor && id,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type\n    }, type === 'checkbox' && value === undefined ? {} : {\n      value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;"]},"metadata":{},"sourceType":"module"}