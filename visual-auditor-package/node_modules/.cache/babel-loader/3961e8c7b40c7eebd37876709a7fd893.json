{"ast":null,"code":"var _jsxFileName = \"/Users/davidmunechika/Documents/Code/visual-auditor/src/components/Main/BarPlot.js\",\n    _s = $RefreshSig$();\n\nimport { useD3 } from '../../hooks/useD3';\nimport React from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BarPlot() {\n  _s();\n\n  const ref = useD3(svg => {\n    // set the dimensions and margins of the graph\n    const margin = {\n      top: 30,\n      right: 30,\n      bottom: 70,\n      left: 60\n    },\n          width = 460 - margin.left - margin.right,\n          height = 400 - margin.top - margin.bottom; // append the svg object to the body of the page\n\n    svg = d3.select('#my_dataviz').append('svg').attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Parse the Data\n\n    d3.csv('https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/7_OneCatOneNum_header.csv', function (data) {\n      console.log(data); // X axis\n\n      const x = d3.scaleBand().range([0, width]).domain(data.map(function (d) {\n        return d.Country;\n      })).padding(0.2);\n      svg.append('g').attr('transform', 'translate(0,' + height + ')').call(d3.axisBottom(x)).selectAll('text').attr('transform', 'translate(-10,0)rotate(-45)').style('text-anchor', 'end'); // Add Y axis\n\n      const y = d3.scaleLinear().domain([0, 13000]).range([height, 0]);\n      svg.append('g').call(d3.axisLeft(y)); // Bars\n\n      svg.selectAll('mybar').data(data).enter().append('rect').attr('x', function (d) {\n        return x(d.Country);\n      }).attr('y', function (d) {\n        return y(d.Value);\n      }).attr('width', x.bandwidth()).attr('height', function (d) {\n        return height - y(d.Value);\n      }).attr('fill', '#69b3a2');\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: ref,\n    style: {\n      height: 500,\n      width: '50%',\n      margin: 'auto',\n      display: 'block'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"g\", {\n      className: \"plot-area\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n      className: \"x-axis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n      className: \"y-axis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BarPlot, \"r127xTdrGuIqcYXTmMbvPxoKAyo=\", false, function () {\n  return [useD3];\n});\n\n_c = BarPlot;\nexport default BarPlot;\n\nvar _c;\n\n$RefreshReg$(_c, \"BarPlot\");","map":{"version":3,"sources":["/Users/davidmunechika/Documents/Code/visual-auditor/src/components/Main/BarPlot.js"],"names":["useD3","React","d3","BarPlot","ref","svg","margin","top","right","bottom","left","width","height","select","append","attr","csv","data","console","log","x","scaleBand","range","domain","map","d","Country","padding","call","axisBottom","selectAll","style","y","scaleLinear","axisLeft","enter","Value","bandwidth","display"],"mappings":"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","sourcesContent":["import { useD3 } from '../../hooks/useD3';\nimport React from 'react';\nimport * as d3 from 'd3';\n\nfunction BarPlot() {\n  const ref = useD3((svg) => {\n    // set the dimensions and margins of the graph\n    const margin = { top: 30, right: 30, bottom: 70, left: 60 },\n      width = 460 - margin.left - margin.right,\n      height = 400 - margin.top - margin.bottom;\n\n    // append the svg object to the body of the page\n    svg = d3\n      .select('#my_dataviz')\n      .append('svg')\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.top + margin.bottom)\n      .append('g')\n      .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n    // Parse the Data\n    d3.csv(\n      'https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/7_OneCatOneNum_header.csv',\n      function (data) {\n        console.log(data);\n        // X axis\n        const x = d3\n          .scaleBand()\n          .range([0, width])\n          .domain(\n            data.map(function (d) {\n              return d.Country;\n            })\n          )\n          .padding(0.2);\n        svg\n          .append('g')\n          .attr('transform', 'translate(0,' + height + ')')\n          .call(d3.axisBottom(x))\n          .selectAll('text')\n          .attr('transform', 'translate(-10,0)rotate(-45)')\n          .style('text-anchor', 'end');\n\n        // Add Y axis\n        const y = d3.scaleLinear().domain([0, 13000]).range([height, 0]);\n        svg.append('g').call(d3.axisLeft(y));\n\n        // Bars\n        svg\n          .selectAll('mybar')\n          .data(data)\n          .enter()\n          .append('rect')\n          .attr('x', function (d) {\n            return x(d.Country);\n          })\n          .attr('y', function (d) {\n            return y(d.Value);\n          })\n          .attr('width', x.bandwidth())\n          .attr('height', function (d) {\n            return height - y(d.Value);\n          })\n          .attr('fill', '#69b3a2');\n      }\n    );\n  }, []);\n\n  return (\n    <svg\n      ref={ref}\n      style={{\n        height: 500,\n        width: '50%',\n        margin: 'auto',\n        display: 'block',\n      }}\n    >\n      <g className='plot-area' />\n      <g className='x-axis' />\n      <g className='y-axis' />\n    </svg>\n  );\n}\n\nexport default BarPlot;\n"]},"metadata":{},"sourceType":"module"}