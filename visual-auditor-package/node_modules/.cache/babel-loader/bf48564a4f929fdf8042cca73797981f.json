{"ast":null,"code":"import _toConsumableArray from\"/Users/davidmunechika/Documents/Code/visual-auditor/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React from'react';import SliceBarChart from'./SliceBarChart';import'./Main.css';import logloss from'../../data/logloss.json';import accuracy from'../../data/accuracy.json';import precision from'../../data/precision.json';import ForceLayout from'./ForceLayout';import{jsx as _jsx}from\"react/jsx-runtime\";var Main=function Main(_ref){var numFeatures=_ref.numFeatures,sampleSize=_ref.sampleSize,metric=_ref.metric,view=_ref.view;var data;var modelMetric;switch(metric){case'log loss':data=Object.values(logloss['data']).map(function(obj){return Object.values(obj)[0];});modelMetric=logloss['model'];break;case'accuracy':data=Object.values(accuracy['data']).map(function(obj){return Object.values(obj)[0];});modelMetric=accuracy['model'];break;case'precision':data=Object.values(precision['data']).map(function(obj){return Object.values(obj)[0];});modelMetric=precision['model'];break;default:data=Object.values(logloss['data']).map(function(obj){return Object.values(obj)[0];});modelMetric=logloss['model'];}var metricArray=data.map(function(obj){return obj.metric;});var sizeArray=data.map(function(obj){return obj.size;});var max=Math.max.apply(Math,_toConsumableArray(metricArray));var sizeMax=Math.max.apply(Math,_toConsumableArray(sizeArray));var filteredData=data.filter(function(obj){return obj.size>=sampleSize;}).filter(function(obj){return obj.degree<=numFeatures;}).sort(function(a,b){return b.metric-a.metric;});if(view==='bar'){filteredData=filteredData.slice(0,10);}return/*#__PURE__*/_jsx(\"div\",{className:\"main-container\",children:view==='bar'?/*#__PURE__*/_jsx(SliceBarChart,{data:filteredData,model:modelMetric,max:max}):/*#__PURE__*/_jsx(ForceLayout,{data:filteredData,model:modelMetric,max:max,sizeMax:sizeMax,degree:numFeatures,view:view})});};export default Main;","map":{"version":3,"sources":["/Users/davidmunechika/Documents/Code/visual-auditor/src/components/Main/Main.js"],"names":["React","SliceBarChart","logloss","accuracy","precision","ForceLayout","Main","numFeatures","sampleSize","metric","view","data","modelMetric","Object","values","map","obj","metricArray","sizeArray","size","max","Math","sizeMax","filteredData","filter","degree","sort","a","b","slice"],"mappings":"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","sourcesContent":["import React from 'react';\nimport SliceBarChart from './SliceBarChart';\nimport './Main.css';\nimport logloss from '../../data/logloss.json';\nimport accuracy from '../../data/accuracy.json';\nimport precision from '../../data/precision.json';\nimport ForceLayout from './ForceLayout';\n\nconst Main = ({ numFeatures, sampleSize, metric, view }) => {\n  let data;\n  let modelMetric;\n  switch (metric) {\n    case 'log loss':\n      data = Object.values(logloss['data']).map((obj) => Object.values(obj)[0]);\n      modelMetric = logloss['model'];\n      break;\n    case 'accuracy':\n      data = Object.values(accuracy['data']).map(\n        (obj) => Object.values(obj)[0]\n      );\n      modelMetric = accuracy['model'];\n      break;\n    case 'precision':\n      data = Object.values(precision['data']).map(\n        (obj) => Object.values(obj)[0]\n      );\n      modelMetric = precision['model'];\n      break;\n    default:\n      data = Object.values(logloss['data']).map((obj) => Object.values(obj)[0]);\n      modelMetric = logloss['model'];\n  }\n  const metricArray = data.map((obj) => obj.metric);\n  const sizeArray = data.map((obj) => obj.size);\n  const max = Math.max(...metricArray);\n  const sizeMax = Math.max(...sizeArray);\n  let filteredData = data\n    .filter((obj) => obj.size >= sampleSize)\n    .filter((obj) => obj.degree <= numFeatures)\n    .sort(function (a, b) {\n      return b.metric - a.metric;\n    });\n  if (view === 'bar') {\n    filteredData = filteredData.slice(0, 10);\n  }\n  return (\n    <div className='main-container'>\n      {view === 'bar' ? (\n        <SliceBarChart data={filteredData} model={modelMetric} max={max} />\n      ) : (\n        <ForceLayout\n          data={filteredData}\n          model={modelMetric}\n          max={max}\n          sizeMax={sizeMax}\n          degree={numFeatures}\n          view={view}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}