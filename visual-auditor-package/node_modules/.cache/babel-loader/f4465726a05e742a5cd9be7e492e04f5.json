{"ast":null,"code":"var _jsxFileName = \"/Users/davidmunechika/Documents/Code/visual-auditor/src/components/Main/Main.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport SliceBarChart from './SliceBarChart';\nimport './Main.css';\nimport logloss from '../../data/logloss.json';\nimport accuracy from '../../data/accuracy.json';\nimport precision from '../../data/precision.json';\nimport reverselogloss from '../../data/reverselogloss.json';\nimport ForceLayout from './ForceLayout';\nimport GraphLayout from './GraphLayout';\nimport GraphLayout2 from './GraphLayout2';\nimport Loader from 'react-loader-spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = ({\n  numFeatures,\n  sampleSize,\n  metric,\n  view,\n  sortBy,\n  overperforming\n}) => {\n  _s();\n\n  const [isLoading, setIsLoading] = React.useState(true);\n  let data;\n  let reversedata;\n  let modelMetric;\n\n  if (overperforming) {\n    switch (metric) {\n      case 'Log Loss':\n        data = Object.values(reverselogloss['data']).map(obj => Object.values(obj)[0]);\n        reversedata = Object.values(logloss['data']).map(obj => Object.values(obj)[0]);\n        data.forEach(d => d.metric = Math.abs(d.metric));\n        modelMetric = reverselogloss['model'];\n        break;\n\n      case 'Accuracy':\n        data = Object.values(accuracy['data']).map(obj => Object.values(obj)[0]);\n        reversedata = Object.values(accuracy['data']).map(obj => Object.values(obj)[0]);\n        modelMetric = accuracy['model'];\n        break;\n\n      case 'Precision':\n        data = Object.values(precision['data']).map(obj => Object.values(obj)[0]);\n        reversedata = Object.values(precision['data']).map(obj => Object.values(obj)[0]);\n        modelMetric = precision['model'];\n        break;\n\n      default:\n        data = Object.values(reverselogloss['data']).map(obj => Object.values(obj)[0]);\n        modelMetric = reverselogloss['model'];\n    }\n  } else {\n    switch (metric) {\n      case 'Log Loss':\n        data = Object.values(logloss['data']).map(obj => Object.values(obj)[0]);\n        reversedata = [];\n        modelMetric = logloss['model'];\n        break;\n\n      case 'Accuracy':\n        data = Object.values(accuracy['data']).map(obj => Object.values(obj)[0]);\n        reversedata = [];\n        modelMetric = accuracy['model'];\n        break;\n\n      case 'Precision':\n        data = Object.values(precision['data']).map(obj => Object.values(obj)[0]);\n        reversedata = [];\n        modelMetric = precision['model'];\n        break;\n\n      default:\n        data = Object.values(logloss['data']).map(obj => Object.values(obj)[0]);\n        reversedata = [];\n        modelMetric = logloss['model'];\n    }\n  }\n\n  const metricArray = data.map(obj => obj.metric);\n  const reverseMetricArray = reversedata.map(obj => obj.metric);\n  const sizeArray = data.map(obj => obj.size);\n  const max = Math.max(...metricArray, ...reverseMetricArray);\n  const sizeMax = Math.max(...sizeArray);\n  let filteredData = data.filter(obj => obj.size >= sampleSize).filter(obj => obj.degree <= numFeatures).sort(function (a, b) {\n    if (sortBy === 'size') return b.size - a.size;\n    if (overperforming) return a.metric - b.metric;\n    return b.metric - a.metric;\n  });\n\n  if (view === 'bar') {\n    filteredData = filteredData.slice(0, 10);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    style: {\n      display: 'block'\n    },\n    children: view === 'bar' ? /*#__PURE__*/_jsxDEV(SliceBarChart, {\n      data: filteredData,\n      model: modelMetric,\n      max: max,\n      view: view\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this) : view === 'force' ? /*#__PURE__*/_jsxDEV(ForceLayout, {\n      data: filteredData,\n      degree: numFeatures,\n      view: view,\n      metric: metric,\n      model: modelMetric\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this) : isLoading ? /*#__PURE__*/_jsxDEV(Loader, {\n      type: \"Audio\",\n      color: \"#545454\",\n      height: 100,\n      width: 100,\n      timeout: 3000\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Loader, {\n      type: \"Audio\",\n      color: \"#545454\",\n      height: 100,\n      width: 100,\n      timeout: 3000\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this) // <GraphLayout2\n    //   data={filteredData}\n    //   degree={numFeatures}\n    //   metric={metric}\n    //   model={modelMetric}\n    //   setIsLoading={setIsLoading}\n    // />\n\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Main, \"5S7VQ8+9ArWv2AFPIfnY+LwrHeg=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/davidmunechika/Documents/Code/visual-auditor/src/components/Main/Main.js"],"names":["React","SliceBarChart","logloss","accuracy","precision","reverselogloss","ForceLayout","GraphLayout","GraphLayout2","Loader","Main","numFeatures","sampleSize","metric","view","sortBy","overperforming","isLoading","setIsLoading","useState","data","reversedata","modelMetric","Object","values","map","obj","forEach","d","Math","abs","metricArray","reverseMetricArray","sizeArray","size","max","sizeMax","filteredData","filter","degree","sort","a","b","slice","display"],"mappings":"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","sourcesContent":["import React from 'react';\nimport SliceBarChart from './SliceBarChart';\nimport './Main.css';\nimport logloss from '../../data/logloss.json';\nimport accuracy from '../../data/accuracy.json';\nimport precision from '../../data/precision.json';\nimport reverselogloss from '../../data/reverselogloss.json';\nimport ForceLayout from './ForceLayout';\nimport GraphLayout from './GraphLayout';\nimport GraphLayout2 from './GraphLayout2';\nimport Loader from 'react-loader-spinner';\n\nconst Main = ({\n  numFeatures,\n  sampleSize,\n  metric,\n  view,\n  sortBy,\n  overperforming,\n}) => {\n  const [isLoading, setIsLoading] = React.useState(true);\n  let data;\n  let reversedata;\n  let modelMetric;\n  if (overperforming) {\n    switch (metric) {\n      case 'Log Loss':\n        data = Object.values(reverselogloss['data']).map(\n          (obj) => Object.values(obj)[0]\n        );\n        reversedata = Object.values(logloss['data']).map(\n          (obj) => Object.values(obj)[0]\n        );\n        data.forEach((d) => (d.metric = Math.abs(d.metric)));\n        modelMetric = reverselogloss['model'];\n        break;\n      case 'Accuracy':\n        data = Object.values(accuracy['data']).map(\n          (obj) => Object.values(obj)[0]\n        );\n        reversedata = Object.values(accuracy['data']).map(\n          (obj) => Object.values(obj)[0]\n        );\n        modelMetric = accuracy['model'];\n        break;\n      case 'Precision':\n        data = Object.values(precision['data']).map(\n          (obj) => Object.values(obj)[0]\n        );\n        reversedata = Object.values(precision['data']).map(\n          (obj) => Object.values(obj)[0]\n        );\n        modelMetric = precision['model'];\n        break;\n      default:\n        data = Object.values(reverselogloss['data']).map(\n          (obj) => Object.values(obj)[0]\n        );\n        modelMetric = reverselogloss['model'];\n    }\n  } else {\n    switch (metric) {\n      case 'Log Loss':\n        data = Object.values(logloss['data']).map(\n          (obj) => Object.values(obj)[0]\n        );\n        reversedata = [];\n        modelMetric = logloss['model'];\n        break;\n      case 'Accuracy':\n        data = Object.values(accuracy['data']).map(\n          (obj) => Object.values(obj)[0]\n        );\n        reversedata = [];\n        modelMetric = accuracy['model'];\n        break;\n      case 'Precision':\n        data = Object.values(precision['data']).map(\n          (obj) => Object.values(obj)[0]\n        );\n        reversedata = [];\n        modelMetric = precision['model'];\n        break;\n      default:\n        data = Object.values(logloss['data']).map(\n          (obj) => Object.values(obj)[0]\n        );\n        reversedata = [];\n        modelMetric = logloss['model'];\n    }\n  }\n  const metricArray = data.map((obj) => obj.metric);\n  const reverseMetricArray = reversedata.map((obj) => obj.metric);\n  const sizeArray = data.map((obj) => obj.size);\n  const max = Math.max(...metricArray, ...reverseMetricArray);\n  const sizeMax = Math.max(...sizeArray);\n  let filteredData = data\n    .filter((obj) => obj.size >= sampleSize)\n    .filter((obj) => obj.degree <= numFeatures)\n    .sort(function (a, b) {\n      if (sortBy === 'size') return b.size - a.size;\n      if (overperforming) return a.metric - b.metric;\n      return b.metric - a.metric;\n    });\n  if (view === 'bar') {\n    filteredData = filteredData.slice(0, 10);\n  }\n  return (\n    <div className='main-container' style={{ display: 'block' }}>\n      {view === 'bar' ? (\n        <SliceBarChart\n          data={filteredData}\n          model={modelMetric}\n          max={max}\n          view={view}\n        />\n      ) : view === 'force' ? (\n        <ForceLayout\n          data={filteredData}\n          degree={numFeatures}\n          view={view}\n          metric={metric}\n          model={modelMetric}\n        />\n      ) : isLoading ? (\n        <Loader\n          type='Audio'\n          color='#545454'\n          height={100}\n          width={100}\n          timeout={3000}\n        />\n      ) : (\n        <Loader\n          type='Audio'\n          color='#545454'\n          height={100}\n          width={100}\n          timeout={3000}\n        />\n        // <GraphLayout2\n        //   data={filteredData}\n        //   degree={numFeatures}\n        //   metric={metric}\n        //   model={modelMetric}\n        //   setIsLoading={setIsLoading}\n        // />\n      )}\n    </div>\n  );\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}