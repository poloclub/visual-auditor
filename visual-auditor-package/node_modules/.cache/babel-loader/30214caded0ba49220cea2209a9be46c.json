{"ast":null,"code":"var _jsxFileName = \"/Users/davidmunechika/Documents/Code/visual-auditor/src/components/Main/GraphLayout.js\",\n    _s = $RefreshSig$();\n\nimport { useD3 } from '../../hooks/useD3';\nimport React from 'react';\nimport * as d3 from 'd3';\nimport './GraphLayout.css';\nimport Button from '@mui/material/Button';\nimport logLossSamples from '../../data/loglosssamples.json';\nimport reverseLogLossSamples from '../../data/reverseloglosssamples.json';\nimport accuracySamples from '../../data/accuracysamples.json';\nimport precisionSamples from '../../data/precisionsamples.json';\nimport commonSamples from '../../data/commonSamples.json';\nimport commonSamplesSliceline from '../../data/commonSamplesSliceline.json';\nimport reverseCommonSamples from '../../data/reverseCommonSamples.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GraphLayout({\n  data,\n  degree,\n  metric,\n  model,\n  overperforming,\n  radiusType,\n  edgeFiltering,\n  edgeForce,\n  setDetails,\n  cursorMode,\n  algorithm,\n  showConvexHull\n}) {\n  _s();\n\n  const margin = {\n    top: 30,\n    right: 30,\n    bottom: 60,\n    left: 85\n  };\n  const [selected, setSelected] = React.useState(null);\n  const [value, setValue] = React.useState(0);\n\n  function useForceUpdate() {\n    return () => setValue(value => value + 1); // update the state to force render\n  }\n\n  const forceUpdate = useForceUpdate();\n  const width = 800;\n  const height = 800;\n  const features = [];\n  const groupings = {};\n  let samples;\n  let matches = {};\n\n  switch (metric) {\n    case 'Log Loss':\n      if (overperforming) {\n        samples = reverseLogLossSamples;\n        matches = reverseCommonSamples;\n      } else {\n        if (algorithm === 'sliceline') {\n          matches = commonSamplesSliceline;\n        } else {\n          matches = commonSamples;\n        }\n\n        samples = logLossSamples;\n      }\n\n      break;\n\n    case 'Accuracy':\n      if (overperforming) samples = accuracySamples;else samples = accuracySamples;\n      break;\n\n    case 'Precision':\n      if (overperforming) samples = precisionSamples;else samples = precisionSamples;\n      break;\n\n    default:\n      if (overperforming) samples = reverseLogLossSamples;else samples = logLossSamples;\n      break;\n  }\n\n  data.forEach(obj => {\n    obj.classifiers = [];\n    let str = obj.slice;\n\n    while (str.indexOf(':') !== -1) {\n      let temp = str.substring(0, str.indexOf(':'));\n      obj.classifiers.push(temp);\n      if (!features.includes(temp)) features.push(temp);\n\n      if (degree === obj.classifiers.length) {\n        if (groupings[obj.classifiers.join(', ')]) groupings[obj.classifiers.join(', ')]++;else groupings[obj.classifiers.join(', ')] = 1;\n      }\n\n      if (str.indexOf(',') !== -1) {\n        str = str.substring(str.indexOf(',') + 2);\n      } else {\n        str = '';\n      }\n    }\n  });\n  const xCenter = [];\n  const yCenter = [];\n  const xTickDistance = (width - margin.left - margin.right) / (features.length + 1);\n  const yTickDistance = (width - margin.top - margin.bottom) / (features.length + 1);\n\n  for (let i = 0; i < features.length; i++) {\n    xCenter.push(margin.left + (i + 1) * xTickDistance);\n    yCenter.push(margin.top + (i + 1) * yTickDistance);\n  }\n\n  const x = d3.scaleBand().domain(features).rangeRound([margin.left, width - margin.right]).padding(0.1);\n\n  const xAxis = g => g.attr('transform', `translate(0,${height - margin.bottom})`).call(d3.axisBottom(x).tickSizeOuter(0)).selectAll('text').attr('transform', 'translate(-10,0)rotate(-45)').style('text-anchor', 'end');\n\n  const yAxis = g => g.attr('transform', `translate(${margin.left},${30 - margin.bottom})`).call(d3.axisLeft(x).tickSizeOuter(0)).selectAll('text').style('text-anchor', 'end');\n\n  const xAxisGrid = g => g.attr('transform', `translate(0,${height - margin.bottom})`).call(d3.axisBottom(x).tickSizeOuter(0).tickSizeInner(-height - margin.top + 2 * margin.bottom)).style('opacity', 0.1).selectAll('text').style('display', 'none');\n\n  const yAxisGrid = g => g.attr('transform', `translate(${margin.left},${30 - margin.bottom})`).call(d3.axisLeft(x).tickSizeOuter(0).tickSizeInner(-width - margin.right + 2 * margin.left)).style('opacity', 0.1).selectAll('text').style('display', 'none');\n\n  const nodes = data.map(obj => {\n    var _obj$classifiers$;\n\n    return {\n      radius: radiusType === 'log' ? Math.log(obj.size) : Math.sqrt(obj.size),\n      category: obj.degree,\n      xFeature: obj.classifiers[0],\n      yFeature: (_obj$classifiers$ = obj.classifiers[1]) !== null && _obj$classifiers$ !== void 0 ? _obj$classifiers$ : obj.classifiers[0],\n      slice: obj.slice,\n      size: obj.size,\n      metric: obj.metric,\n      classifiers: obj.classifiers\n    };\n  });\n\n  function countCommonSamples(slice1, slice2) {\n    let arr1 = samples[slice1];\n    let arr2 = samples[slice2];\n    if (!arr1 || !arr2) return 0;\n    arr1 = arr1.sort((a, b) => 0.5 - Math.random()).slice(0, 2000);\n    return arr1.filter(sample => arr2.includes(sample)).length;\n  }\n\n  let links = [];\n  let common = {};\n\n  for (let i = 0; i < nodes.length; i++) {\n    for (let j = i + 1; j < nodes.length; j++) {\n      const count = matches[nodes[i].slice + '-' + nodes[j].slice]; // const count = countCommonSamples(nodes[i].slice, nodes[j].slice);\n      // common[nodes[i].slice + '-' + nodes[j].slice] = count;\n      // common[nodes[j].slice + '-' + nodes[i].slice] = count;\n\n      if (count > edgeFiltering) {\n        links.push({\n          source: i,\n          target: j,\n          sliceSource: nodes[i].slice,\n          sliceTarget: nodes[j].slice,\n          count: count\n        });\n      }\n    }\n  } // console.log(JSON.stringify(common));\n  // const links = [];\n  // console.log(JSON.stringify(links));\n\n\n  const graph = {\n    nodes: nodes,\n    links: links\n  };\n\n  function clamp(x, lo, hi) {\n    return x < lo ? lo : x > hi ? hi : x;\n  }\n\n  const ref = useD3(svg => {\n    svg = d3.select('.svg').style('width', '60%').style('height', '60%');\n    let link = svg.selectAll('.link').attr('class', 'link').data(graph.links).join('line').classed('link', true);\n    const node = svg.selectAll('.node').data(graph.nodes).join('circle').attr('r', function (d) {\n      return d.radius;\n    }).style('fill', function (d) {\n      if (d.slice === selected) {\n        return d3.interpolateGreys(0.5);\n      }\n\n      if (overperforming) return d3.interpolateBlues(Math.abs((d.metric - model) / model));\n      return d3.interpolateReds(Math.abs((d.metric - model) / model));\n    }).classed('node', true).classed('fixed', d => d.fx !== undefined).on('mouseover', function (event, d) {\n      cursorMode === 'select' ? d3.select(this).attr('r', d.radius).style('opacity', '0.7').style('cursor', 'pointer') : d3.select(this).attr('r', d.radius).style('opacity', '0.7').style('cursor', 'grab');\n      d3.select('.tooltip').transition().duration(200).style('opacity', 0.9).style('left', Math.min(Math.max(200, d.x), width - 200) + 100 + 'px').style('top', Math.min(height - 200, Math.max(0, d.y)) + 'px');\n      d3.select('.tooltip').html('<strong>Slice Description: </strong>' + '<br><div style={{margin: \"1rem\"}}> </div>' + d.slice + '<br>' + '<strong>Size: </strong>' + '<br>' + d.size + ' samples' + '<br>' + '<strong>' + metric + ': ' + '</strong>' + '<br>' + d.metric.toFixed(2) + '<br>' + `(${Math.round((d.metric - model) / model * 100)}% difference)`);\n    }).on('mouseout', function (d, i) {\n      d3.select(this).attr('r', i.radius).style('opacity', '1');\n      d3.select('.tooltip').transition().style('opacity', 0).style('left', width + 'px').style('top', 0 + 'px');\n    }).on('click', click);\n    const simulation = d3.forceSimulation().nodes(graph.nodes).force('charge', d3.forceManyBody().strength(-10)) // .force('center', d3.forceCenter(width / 2, height / 2).strength(0.1))\n    .force('x', d3.forceX().x(function (d) {\n      console.log(features);\n      console.log(xCenter);\n      return xCenter[features.indexOf(d.xFeature)];\n    })).force('y', d3.forceY().y(function (d) {\n      if (degree > 1) {\n        return yCenter[features.indexOf(d.yFeature)];\n      } else {\n        return height / 2;\n      }\n    })).force('link', d3.forceLink(graph.links).strength(d => {\n      return d.count / 10000 * edgeForce;\n    })).force('collision', d3.forceCollide().radius(function (d) {\n      return d.radius;\n    })).on('tick', tick);\n\n    if (cursorMode === 'drag') {\n      const drag = d3.drag().on('start', dragstart).on('drag', dragged);\n      node.call(drag).on('click', click);\n    }\n\n    function tick() {\n      link.attr('x1', d => Math.max(Math.min(d.source.x, width), d.source.radius + 100)).attr('y1', d => Math.max(Math.min(d.source.y, height - 75), d.source.radius)).attr('x2', d => Math.max(Math.min(d.target.x, width), d.target.radius + 100)).attr('y2', d => Math.max(Math.min(d.target.y, height - 75), d.target.radius)).style('stroke-width', d => Math.min(Math.pow(d.count / 2000, 2) * edgeForce, Math.pow(d.count / 2000, 2) * 3));\n      node.attr('cx', d => Math.max(Math.min(d.x, width), d.radius + 100)).attr('cy', d => Math.max(Math.min(d.y, height - 75), d.radius));\n    }\n\n    function click(event, d) {\n      if (cursorMode === 'select') {\n        setSelected(d.slice);\n        setDetails({\n          slice: d.slice,\n          size: d.size,\n          metric: d.metric,\n          similarSlices: links.map(link => {\n            if (link.count > edgeFiltering && link.sliceSource === d.slice) {\n              return link.sliceTarget;\n            } else if (link.count > edgeFiltering && link.sliceTarget === d.slice) {\n              return link.sliceSource;\n            }\n\n            return undefined;\n          }).filter(link => link !== undefined)\n        });\n        simulation.alpha(1).restart();\n      } else {\n        delete d.fx;\n        delete d.fy;\n        d3.select(this).classed('fixed', false);\n        d3.select(this).style('fill', () => {\n          if (overperforming) return d3.interpolateBlues(Math.abs((d.metric - model) / model));\n          return d3.interpolateReds(Math.abs((d.metric - model) / model));\n        });\n        simulation.alpha(1).restart();\n      }\n    }\n\n    function dragstart(event, d) {\n      d3.select(this).classed('fixed', true);\n      d3.select(this).style('fill', 'lightgray');\n    }\n\n    function dragged(event, d) {\n      d.fx = clamp(event.x, 0, width);\n      d.fy = clamp(event.y, 0, height);\n      simulation.alpha(1).restart();\n    }\n\n    const convexHull = g => {\n      const colors = ['blue', 'green', 'yellow', 'black', 'purple'];\n\n      for (let i = 0; i < topGroupings.length; i++) {\n        const groupX = xCenter[features.indexOf(topGroupings[i][0].split(', ')[0])] + 25;\n        const groupY = degree < 2 ? height / 2 : (yCenter[features.indexOf(topGroupings[i][0].split(', ')[1])] + 175) * 1.075;\n        const vertices = [[groupX - 25, groupY - 25], [groupX + 25, groupY - 25], [groupX + 25, groupY + 25], [groupX - 25, groupY + 25]];\n        const hull = d3.polygonHull(vertices);\n        const line = d3.line().curve(d3.curveCardinalClosed);\n        g.append('path').attr('class', `path${degree}`).attr('d', line(hull)).attr('fill', colors[i]).attr('stroke', colors[i]);\n      }\n    };\n\n    svg.select('.x-axis-grid').call(xAxisGrid);\n    svg.select('.y-axis-grid').call(yAxisGrid);\n    svg.select('.x-axis').call(xAxis);\n\n    if (degree >= 2) {\n      svg.select('.y-axis').call(yAxis).style('opacity', '1');\n    } else {\n      svg.select('.y-axis').style('opacity', '0');\n    }\n\n    if (showConvexHull) {\n      d3.select(`.hull${Math.min(degree, 2)}`).call(convexHull).style('opacity', '0').transition().duration(500).style('opacity', '0.5');\n    } else {\n      d3.selectAll(`.hull${Math.min(degree, 2)}`).transition().duration(200).style('opacity', '0');\n    }\n  }, [data, value]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    style: {\n      overflow: 'scroll'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tooltip\",\n      style: {\n        position: 'absolute',\n        background: '#e6e6e6',\n        borderRadius: '0.5rem',\n        padding: '0.5rem'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \"svg\",\n      width: width,\n      height: height,\n      children: [/*#__PURE__*/_jsxDEV(\"g\", {\n        transform: \"translate(50, 200)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"x-axis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"y-axis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"x-axis-grid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"y-axis-grid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: forceUpdate,\n      style: {\n        margin: '1rem'\n      },\n      children: \"Recenter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 455,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GraphLayout, \"se0z3QtA6TKOc/kTevbgmKqdIiE=\", false, function () {\n  return [useForceUpdate, useD3];\n});\n\n_c = GraphLayout;\nexport default GraphLayout;\n\nvar _c;\n\n$RefreshReg$(_c, \"GraphLayout\");","map":{"version":3,"sources":["/Users/davidmunechika/Documents/Code/visual-auditor/src/components/Main/GraphLayout.js"],"names":["useD3","React","d3","Button","logLossSamples","reverseLogLossSamples","accuracySamples","precisionSamples","commonSamples","commonSamplesSliceline","reverseCommonSamples","GraphLayout","data","degree","metric","model","overperforming","radiusType","edgeFiltering","edgeForce","setDetails","cursorMode","algorithm","showConvexHull","margin","top","right","bottom","left","selected","setSelected","useState","value","setValue","useForceUpdate","forceUpdate","width","height","features","groupings","samples","matches","forEach","obj","classifiers","str","slice","indexOf","temp","substring","push","includes","length","join","xCenter","yCenter","xTickDistance","yTickDistance","i","x","scaleBand","domain","rangeRound","padding","xAxis","g","attr","call","axisBottom","tickSizeOuter","selectAll","style","yAxis","axisLeft","xAxisGrid","tickSizeInner","yAxisGrid","nodes","map","radius","Math","log","size","sqrt","category","xFeature","yFeature","countCommonSamples","slice1","slice2","arr1","arr2","sort","a","b","random","filter","sample","links","common","j","count","source","target","sliceSource","sliceTarget","graph","clamp","lo","hi","ref","svg","select","link","classed","node","d","interpolateGreys","interpolateBlues","abs","interpolateReds","fx","undefined","on","event","transition","duration","min","max","y","html","toFixed","round","click","simulation","forceSimulation","force","forceManyBody","strength","forceX","console","forceY","forceLink","forceCollide","tick","drag","dragstart","dragged","pow","similarSlices","alpha","restart","fy","convexHull","colors","topGroupings","groupX","split","groupY","vertices","hull","polygonHull","line","curve","curveCardinalClosed","append","overflow","position","background","borderRadius"],"mappings":"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","sourcesContent":["import { useD3 } from '../../hooks/useD3';\nimport React from 'react';\nimport * as d3 from 'd3';\nimport './GraphLayout.css';\nimport Button from '@mui/material/Button';\nimport logLossSamples from '../../data/loglosssamples.json';\nimport reverseLogLossSamples from '../../data/reverseloglosssamples.json';\nimport accuracySamples from '../../data/accuracysamples.json';\nimport precisionSamples from '../../data/precisionsamples.json';\nimport commonSamples from '../../data/commonSamples.json';\nimport commonSamplesSliceline from '../../data/commonSamplesSliceline.json';\nimport reverseCommonSamples from '../../data/reverseCommonSamples.json';\n\nfunction GraphLayout({\n  data,\n  degree,\n  metric,\n  model,\n  overperforming,\n  radiusType,\n  edgeFiltering,\n  edgeForce,\n  setDetails,\n  cursorMode,\n  algorithm,\n  showConvexHull,\n}) {\n  const margin = { top: 30, right: 30, bottom: 60, left: 85 };\n  const [selected, setSelected] = React.useState(null);\n  const [value, setValue] = React.useState(0);\n  function useForceUpdate() {\n    return () => setValue((value) => value + 1); // update the state to force render\n  }\n  const forceUpdate = useForceUpdate();\n\n  const width = 800;\n  const height = 800;\n\n  const features = [];\n  const groupings = {};\n\n  let samples;\n  let matches = {};\n\n  switch (metric) {\n    case 'Log Loss':\n      if (overperforming) {\n        samples = reverseLogLossSamples;\n        matches = reverseCommonSamples;\n      } else {\n        if (algorithm === 'sliceline') {\n          matches = commonSamplesSliceline;\n        } else {\n          matches = commonSamples;\n        }\n        samples = logLossSamples;\n      }\n      break;\n    case 'Accuracy':\n      if (overperforming) samples = accuracySamples;\n      else samples = accuracySamples;\n      break;\n    case 'Precision':\n      if (overperforming) samples = precisionSamples;\n      else samples = precisionSamples;\n      break;\n    default:\n      if (overperforming) samples = reverseLogLossSamples;\n      else samples = logLossSamples;\n      break;\n  }\n\n  data.forEach((obj) => {\n    obj.classifiers = [];\n    let str = obj.slice;\n    while (str.indexOf(':') !== -1) {\n      let temp = str.substring(0, str.indexOf(':'));\n      obj.classifiers.push(temp);\n      if (!features.includes(temp)) features.push(temp);\n      if (degree === obj.classifiers.length) {\n        if (groupings[obj.classifiers.join(', ')])\n          groupings[obj.classifiers.join(', ')]++;\n        else groupings[obj.classifiers.join(', ')] = 1;\n      }\n      if (str.indexOf(',') !== -1) {\n        str = str.substring(str.indexOf(',') + 2);\n      } else {\n        str = '';\n      }\n    }\n  });\n\n  const xCenter = [];\n  const yCenter = [];\n\n  const xTickDistance =\n    (width - margin.left - margin.right) / (features.length + 1);\n  const yTickDistance =\n    (width - margin.top - margin.bottom) / (features.length + 1);\n\n  for (let i = 0; i < features.length; i++) {\n    xCenter.push(margin.left + (i + 1) * xTickDistance);\n    yCenter.push(margin.top + (i + 1) * yTickDistance);\n  }\n\n  const x = d3\n    .scaleBand()\n    .domain(features)\n    .rangeRound([margin.left, width - margin.right])\n    .padding(0.1);\n\n  const xAxis = (g) =>\n    g\n      .attr('transform', `translate(0,${height - margin.bottom})`)\n      .call(d3.axisBottom(x).tickSizeOuter(0))\n      .selectAll('text')\n      .attr('transform', 'translate(-10,0)rotate(-45)')\n      .style('text-anchor', 'end');\n\n  const yAxis = (g) =>\n    g\n      .attr('transform', `translate(${margin.left},${30 - margin.bottom})`)\n      .call(d3.axisLeft(x).tickSizeOuter(0))\n      .selectAll('text')\n      .style('text-anchor', 'end');\n\n  const xAxisGrid = (g) =>\n    g\n      .attr('transform', `translate(0,${height - margin.bottom})`)\n      .call(\n        d3\n          .axisBottom(x)\n          .tickSizeOuter(0)\n          .tickSizeInner(-height - margin.top + 2 * margin.bottom)\n      )\n      .style('opacity', 0.1)\n      .selectAll('text')\n      .style('display', 'none');\n  const yAxisGrid = (g) =>\n    g\n      .attr('transform', `translate(${margin.left},${30 - margin.bottom})`)\n      .call(\n        d3\n          .axisLeft(x)\n          .tickSizeOuter(0)\n          .tickSizeInner(-width - margin.right + 2 * margin.left)\n      )\n      .style('opacity', 0.1)\n      .selectAll('text')\n      .style('display', 'none');\n\n  const nodes = data.map((obj) => {\n    return {\n      radius: radiusType === 'log' ? Math.log(obj.size) : Math.sqrt(obj.size),\n      category: obj.degree,\n      xFeature: obj.classifiers[0],\n      yFeature: obj.classifiers[1] ?? obj.classifiers[0],\n      slice: obj.slice,\n      size: obj.size,\n      metric: obj.metric,\n      classifiers: obj.classifiers,\n    };\n  });\n\n  function countCommonSamples(slice1, slice2) {\n    let arr1 = samples[slice1];\n    let arr2 = samples[slice2];\n    if (!arr1 || !arr2) return 0;\n    arr1 = arr1.sort((a, b) => 0.5 - Math.random()).slice(0, 2000);\n    return arr1.filter((sample) => arr2.includes(sample)).length;\n  }\n\n  let links = [];\n  let common = {};\n\n  for (let i = 0; i < nodes.length; i++) {\n    for (let j = i + 1; j < nodes.length; j++) {\n      const count = matches[nodes[i].slice + '-' + nodes[j].slice];\n      // const count = countCommonSamples(nodes[i].slice, nodes[j].slice);\n      // common[nodes[i].slice + '-' + nodes[j].slice] = count;\n      // common[nodes[j].slice + '-' + nodes[i].slice] = count;\n      if (count > edgeFiltering) {\n        links.push({\n          source: i,\n          target: j,\n          sliceSource: nodes[i].slice,\n          sliceTarget: nodes[j].slice,\n          count: count,\n        });\n      }\n    }\n  }\n\n  // console.log(JSON.stringify(common));\n\n  // const links = [];\n  // console.log(JSON.stringify(links));\n\n  const graph = {\n    nodes: nodes,\n    links: links,\n  };\n\n  function clamp(x, lo, hi) {\n    return x < lo ? lo : x > hi ? hi : x;\n  }\n\n  const ref = useD3(\n    (svg) => {\n      svg = d3.select('.svg').style('width', '60%').style('height', '60%');\n      let link = svg\n        .selectAll('.link')\n        .attr('class', 'link')\n        .data(graph.links)\n        .join('line')\n        .classed('link', true);\n      const node = svg\n        .selectAll('.node')\n        .data(graph.nodes)\n        .join('circle')\n        .attr('r', function (d) {\n          return d.radius;\n        })\n        .style('fill', function (d) {\n          if (d.slice === selected) {\n            return d3.interpolateGreys(0.5);\n          }\n          if (overperforming)\n            return d3.interpolateBlues(Math.abs((d.metric - model) / model));\n          return d3.interpolateReds(Math.abs((d.metric - model) / model));\n        })\n        .classed('node', true)\n        .classed('fixed', (d) => d.fx !== undefined)\n        .on('mouseover', function (event, d) {\n          cursorMode === 'select'\n            ? d3\n                .select(this)\n                .attr('r', d.radius)\n                .style('opacity', '0.7')\n                .style('cursor', 'pointer')\n            : d3\n                .select(this)\n                .attr('r', d.radius)\n                .style('opacity', '0.7')\n                .style('cursor', 'grab');\n          d3.select('.tooltip')\n            .transition()\n            .duration(200)\n            .style('opacity', 0.9)\n            .style(\n              'left',\n              Math.min(Math.max(200, d.x), width - 200) + 100 + 'px'\n            )\n            .style('top', Math.min(height - 200, Math.max(0, d.y)) + 'px');\n          d3.select('.tooltip').html(\n            '<strong>Slice Description: </strong>' +\n              '<br><div style={{margin: \"1rem\"}}> </div>' +\n              d.slice +\n              '<br>' +\n              '<strong>Size: </strong>' +\n              '<br>' +\n              d.size +\n              ' samples' +\n              '<br>' +\n              '<strong>' +\n              metric +\n              ': ' +\n              '</strong>' +\n              '<br>' +\n              d.metric.toFixed(2) +\n              '<br>' +\n              `(${Math.round(((d.metric - model) / model) * 100)}% difference)`\n          );\n        })\n        .on('mouseout', function (d, i) {\n          d3.select(this).attr('r', i.radius).style('opacity', '1');\n          d3.select('.tooltip')\n            .transition()\n            .style('opacity', 0)\n            .style('left', width + 'px')\n            .style('top', 0 + 'px');\n        })\n        .on('click', click);\n\n      const simulation = d3\n        .forceSimulation()\n        .nodes(graph.nodes)\n        .force('charge', d3.forceManyBody().strength(-10))\n        // .force('center', d3.forceCenter(width / 2, height / 2).strength(0.1))\n        .force(\n          'x',\n          d3.forceX().x(function (d) {\n            console.log(features);\n            console.log(xCenter);\n            return xCenter[features.indexOf(d.xFeature)];\n          })\n        )\n        .force(\n          'y',\n          d3.forceY().y(function (d) {\n            if (degree > 1) {\n              return yCenter[features.indexOf(d.yFeature)];\n            } else {\n              return height / 2;\n            }\n          })\n        )\n        .force(\n          'link',\n          d3.forceLink(graph.links).strength((d) => {\n            return (d.count / 10000) * edgeForce;\n          })\n        )\n        .force(\n          'collision',\n          d3.forceCollide().radius(function (d) {\n            return d.radius;\n          })\n        )\n        .on('tick', tick);\n      if (cursorMode === 'drag') {\n        const drag = d3.drag().on('start', dragstart).on('drag', dragged);\n\n        node.call(drag).on('click', click);\n      }\n\n      function tick() {\n        link\n          .attr('x1', (d) =>\n            Math.max(Math.min(d.source.x, width), d.source.radius + 100)\n          )\n          .attr('y1', (d) =>\n            Math.max(Math.min(d.source.y, height - 75), d.source.radius)\n          )\n          .attr('x2', (d) =>\n            Math.max(Math.min(d.target.x, width), d.target.radius + 100)\n          )\n          .attr('y2', (d) =>\n            Math.max(Math.min(d.target.y, height - 75), d.target.radius)\n          )\n          .style('stroke-width', (d) =>\n            Math.min(\n              Math.pow(d.count / 2000, 2) * edgeForce,\n              Math.pow(d.count / 2000, 2) * 3\n            )\n          );\n        node\n          .attr('cx', (d) => Math.max(Math.min(d.x, width), d.radius + 100))\n          .attr('cy', (d) => Math.max(Math.min(d.y, height - 75), d.radius));\n      }\n\n      function click(event, d) {\n        if (cursorMode === 'select') {\n          setSelected(d.slice);\n          setDetails({\n            slice: d.slice,\n            size: d.size,\n            metric: d.metric,\n            similarSlices: links\n              .map((link) => {\n                if (\n                  link.count > edgeFiltering &&\n                  link.sliceSource === d.slice\n                ) {\n                  return link.sliceTarget;\n                } else if (\n                  link.count > edgeFiltering &&\n                  link.sliceTarget === d.slice\n                ) {\n                  return link.sliceSource;\n                }\n                return undefined;\n              })\n              .filter((link) => link !== undefined),\n          });\n          simulation.alpha(1).restart();\n        } else {\n          delete d.fx;\n          delete d.fy;\n          d3.select(this).classed('fixed', false);\n          d3.select(this).style('fill', () => {\n            if (overperforming)\n              return d3.interpolateBlues(Math.abs((d.metric - model) / model));\n            return d3.interpolateReds(Math.abs((d.metric - model) / model));\n          });\n          simulation.alpha(1).restart();\n        }\n      }\n\n      function dragstart(event, d) {\n        d3.select(this).classed('fixed', true);\n        d3.select(this).style('fill', 'lightgray');\n      }\n\n      function dragged(event, d) {\n        d.fx = clamp(event.x, 0, width);\n        d.fy = clamp(event.y, 0, height);\n        simulation.alpha(1).restart();\n      }\n\n      const convexHull = (g) => {\n        const colors = ['blue', 'green', 'yellow', 'black', 'purple'];\n\n        for (let i = 0; i < topGroupings.length; i++) {\n          const groupX =\n            xCenter[features.indexOf(topGroupings[i][0].split(', ')[0])] + 25;\n          const groupY =\n            degree < 2\n              ? height / 2\n              : (yCenter[features.indexOf(topGroupings[i][0].split(', ')[1])] +\n                  175) *\n                1.075;\n          const vertices = [\n            [groupX - 25, groupY - 25],\n            [groupX + 25, groupY - 25],\n            [groupX + 25, groupY + 25],\n            [groupX - 25, groupY + 25],\n          ];\n          const hull = d3.polygonHull(vertices);\n          const line = d3.line().curve(d3.curveCardinalClosed);\n          g.append('path')\n            .attr('class', `path${degree}`)\n            .attr('d', line(hull))\n            .attr('fill', colors[i])\n            .attr('stroke', colors[i]);\n        }\n      };\n\n      svg.select('.x-axis-grid').call(xAxisGrid);\n      svg.select('.y-axis-grid').call(yAxisGrid);\n      svg.select('.x-axis').call(xAxis);\n      if (degree >= 2) {\n        svg.select('.y-axis').call(yAxis).style('opacity', '1');\n      } else {\n        svg.select('.y-axis').style('opacity', '0');\n      }\n      if (showConvexHull) {\n        d3.select(`.hull${Math.min(degree, 2)}`)\n          .call(convexHull)\n          .style('opacity', '0')\n          .transition()\n          .duration(500)\n          .style('opacity', '0.5');\n      } else {\n        d3.selectAll(`.hull${Math.min(degree, 2)}`)\n          .transition()\n          .duration(200)\n          .style('opacity', '0');\n      }\n    },\n    [data, value]\n  );\n\n  return (\n    <div className='container' style={{ overflow: 'scroll' }}>\n      <div\n        className='tooltip'\n        style={{\n          position: 'absolute',\n          background: '#e6e6e6',\n          borderRadius: '0.5rem',\n          padding: '0.5rem',\n        }}\n      ></div>\n      <svg className='svg' width={width} height={height}>\n        <g transform='translate(50, 200)'></g>\n        <g className='x-axis' />\n        <g className='y-axis' />\n        <g className='x-axis-grid' />\n        <g className='y-axis-grid' />\n      </svg>\n      <br />\n      <Button\n        variant='outlined'\n        onClick={forceUpdate}\n        style={{ margin: '1rem' }}\n      >\n        Recenter\n      </Button>\n    </div>\n  );\n}\n\nexport default GraphLayout;\n"]},"metadata":{},"sourceType":"module"}