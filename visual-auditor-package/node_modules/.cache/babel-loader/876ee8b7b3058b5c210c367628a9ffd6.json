{"ast":null,"code":"import _slicedToArray from \"/Users/davidmunechika/Documents/Code/Research/visual-auditor/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { range as sequence } from \"d3-array\";\nimport { initRange } from \"./init.js\";\nimport ordinal from \"./ordinal.js\";\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      r0 = 0,\n      r1 = 1,\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = r1 < r0,\n        start = reverse ? r1 : r0,\n        stop = reverse ? r0 : r1;\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function (i) {\n      return start + step * i;\n    });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function (_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function (_) {\n    var _ref, _ref2;\n\n    return arguments.length ? ((_ref = _, _ref2 = _slicedToArray(_ref, 2), r0 = _ref2[0], r1 = _ref2[1], _ref), r0 = +r0, r1 = +r1, rescale()) : [r0, r1];\n  };\n\n  scale.rangeRound = function (_) {\n    var _ref3, _ref4;\n\n    return (_ref3 = _, _ref4 = _slicedToArray(_ref3, 2), r0 = _ref4[0], r1 = _ref4[1], _ref3), r0 = +r0, r1 = +r1, round = true, rescale();\n  };\n\n  scale.bandwidth = function () {\n    return bandwidth;\n  };\n\n  scale.step = function () {\n    return step;\n  };\n\n  scale.round = function (_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function (_) {\n    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function (_) {\n    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function (_) {\n    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;\n  };\n\n  scale.align = function (_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function () {\n    return band(domain(), [r0, r1]).round(round).paddingInner(paddingInner).paddingOuter(paddingOuter).align(align);\n  };\n\n  return initRange.apply(rescale(), arguments);\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function () {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band.apply(null, arguments).paddingInner(1));\n}","map":{"version":3,"sources":["/Users/davidmunechika/Documents/Code/Research/visual-auditor/node_modules/d3-scale/src/band.js"],"names":["range","sequence","initRange","ordinal","band","scale","unknown","undefined","domain","ordinalRange","r0","r1","step","bandwidth","round","paddingInner","paddingOuter","align","rescale","n","length","reverse","start","stop","Math","max","floor","values","map","i","_","arguments","rangeRound","padding","min","copy","apply","pointish","point"],"mappings":"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","sourcesContent":["import {range as sequence} from \"d3-array\";\nimport {initRange} from \"./init.js\";\nimport ordinal from \"./ordinal.js\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      r0 = 0,\n      r1 = 1,\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = r1 < r0,\n        start = reverse ? r1 : r0,\n        stop = reverse ? r0 : r1;\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? ([r0, r1] = _, r0 = +r0, r1 = +r1, rescale()) : [r0, r1];\n  };\n\n  scale.rangeRound = function(_) {\n    return [r0, r1] = _, r0 = +r0, r1 = +r1, round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band(domain(), [r0, r1])\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return initRange.apply(rescale(), arguments);\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band.apply(null, arguments).paddingInner(1));\n}\n"]},"metadata":{},"sourceType":"module"}