{"ast":null,"code":"import { path } from \"d3-path\";\nimport array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport { x as pointX, y as pointY } from \"./point.js\";\nexport default function (x, y) {\n  var defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n  x = typeof x === \"function\" ? x : x === undefined ? pointX : constant(x);\n  y = typeof y === \"function\" ? y : y === undefined ? pointY : constant(y);\n\n  function line(data) {\n    var i,\n        n = (data = array(data)).length,\n        d,\n        defined0 = false,\n        buffer;\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();else output.lineEnd();\n      }\n\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function (_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function (_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function (_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function (_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function (_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}","map":{"version":3,"sources":["/Users/davidmunechika/Documents/Code/Research/visual-auditor/visual-auditor-package/node_modules/d3-shape/src/line.js"],"names":["path","array","constant","curveLinear","x","pointX","y","pointY","defined","context","curve","output","undefined","line","data","i","n","length","d","defined0","buffer","lineStart","lineEnd","point","_","arguments"],"mappings":"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","sourcesContent":["import {path} from \"d3-path\";\nimport array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function(x, y) {\n  var defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  x = typeof x === \"function\" ? x : (x === undefined) ? pointX : constant(x);\n  y = typeof y === \"function\" ? y : (y === undefined) ? pointY : constant(y);\n\n  function line(data) {\n    var i,\n        n = (data = array(data)).length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n"]},"metadata":{},"sourceType":"module"}