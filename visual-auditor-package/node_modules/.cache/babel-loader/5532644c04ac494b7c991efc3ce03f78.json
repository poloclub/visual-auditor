{"ast":null,"code":"import _regeneratorRuntime from \"/Users/davidmunechika/Documents/Code/visual-auditor/node_modules/@babel/runtime/regenerator\";\nimport _createForOfIteratorHelper from \"/Users/davidmunechika/Documents/Code/visual-auditor/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(numbers);\n\nexport default function number(x) {\n  return x === null ? NaN : +x;\n}\nexport function numbers(values, valueof) {\n  var _iterator, _step, value, index, _iterator2, _step2, _value;\n\n  return _regeneratorRuntime.wrap(function numbers$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!(valueof === undefined)) {\n            _context.next = 21;\n            break;\n          }\n\n          _iterator = _createForOfIteratorHelper(values);\n          _context.prev = 2;\n\n          _iterator.s();\n\n        case 4:\n          if ((_step = _iterator.n()).done) {\n            _context.next = 11;\n            break;\n          }\n\n          value = _step.value;\n\n          if (!(value != null && (value = +value) >= value)) {\n            _context.next = 9;\n            break;\n          }\n\n          _context.next = 9;\n          return value;\n\n        case 9:\n          _context.next = 4;\n          break;\n\n        case 11:\n          _context.next = 16;\n          break;\n\n        case 13:\n          _context.prev = 13;\n          _context.t0 = _context[\"catch\"](2);\n\n          _iterator.e(_context.t0);\n\n        case 16:\n          _context.prev = 16;\n\n          _iterator.f();\n\n          return _context.finish(16);\n\n        case 19:\n          _context.next = 40;\n          break;\n\n        case 21:\n          index = -1;\n          _iterator2 = _createForOfIteratorHelper(values);\n          _context.prev = 23;\n\n          _iterator2.s();\n\n        case 25:\n          if ((_step2 = _iterator2.n()).done) {\n            _context.next = 32;\n            break;\n          }\n\n          _value = _step2.value;\n\n          if (!((_value = valueof(_value, ++index, values)) != null && (_value = +_value) >= _value)) {\n            _context.next = 30;\n            break;\n          }\n\n          _context.next = 30;\n          return _value;\n\n        case 30:\n          _context.next = 25;\n          break;\n\n        case 32:\n          _context.next = 37;\n          break;\n\n        case 34:\n          _context.prev = 34;\n          _context.t1 = _context[\"catch\"](23);\n\n          _iterator2.e(_context.t1);\n\n        case 37:\n          _context.prev = 37;\n\n          _iterator2.f();\n\n          return _context.finish(37);\n\n        case 40:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[2, 13, 16, 19], [23, 34, 37, 40]]);\n}","map":{"version":3,"sources":["/Users/davidmunechika/Documents/Code/visual-auditor/node_modules/d3-array/src/number.js"],"names":["numbers","number","x","NaN","values","valueof","undefined","value","index"],"mappings":";;;oDAIiBA,O;;AAJjB,eAAe,SAASC,MAAT,CAAgBC,CAAhB,EAAmB;AAChC,SAAOA,CAAC,KAAK,IAAN,GAAaC,GAAb,GAAmB,CAACD,CAA3B;AACD;AAED,OAAO,SAAUF,OAAV,CAAkBI,MAAlB,EAA0BC,OAA1B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,gBACDA,OAAO,KAAKC,SADX;AAAA;AAAA;AAAA;;AAAA,iDAEeF,MAFf;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEMG,UAAAA,KAFN;;AAAA,gBAGGA,KAAK,IAAI,IAAT,IAAiB,CAACA,KAAK,GAAG,CAACA,KAAV,KAAoBA,KAHxC;AAAA;AAAA;AAAA;;AAAA;AAIC,iBAAMA,KAAN;;AAJD;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAQCC,UAAAA,KARD,GAQS,CAAC,CARV;AAAA,kDASeJ,MATf;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AASMG,UAAAA,MATN;;AAAA,gBAUG,CAACA,MAAK,GAAGF,OAAO,CAACE,MAAD,EAAQ,EAAEC,KAAV,EAAiBJ,MAAjB,CAAhB,KAA6C,IAA7C,IAAqD,CAACG,MAAK,GAAG,CAACA,MAAV,KAAoBA,MAV5E;AAAA;AAAA;AAAA;;AAAA;AAWC,iBAAMA,MAAN;;AAXD;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["export default function number(x) {\n  return x === null ? NaN : +x;\n}\n\nexport function* numbers(values, valueof) {\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}