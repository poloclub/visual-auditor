{"ast":null,"code":"var _jsxFileName = \"/Users/davidmunechika/Documents/Code/visual-auditor/src/components/Main/Main.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport SliceBarChart from './SliceBarChart';\nimport './Main.css';\nimport logloss from '../../data/logloss.json';\nimport accuracy from '../../data/accuracy.json';\nimport precision from '../../data/precision.json';\nimport recall from '../../data/recall.json';\nimport f1 from '../../data/f1.json';\nimport reverselogloss from '../../data/reverselogloss.json';\nimport reverseaccuracy from '../../data/reverseaccuracy.json';\nimport reverseprecision from '../../data/reverseprecision.json';\nimport reverserecall from '../../data/reverserecall.json';\nimport reversef1 from '../../data/reversef1.json';\nimport ForceLayout from './ForceLayout';\nimport GraphLayout from './GraphLayout';\nimport GraphLayout2 from './GraphLayout2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = ({\n  numFeatures,\n  sampleSize,\n  metric,\n  view,\n  sortBy,\n  overperforming,\n  features\n}) => {\n  _s();\n\n  let data;\n  let reversedata;\n  let modelMetric;\n  let filteredData;\n  let max;\n  React.useEffect(() => {\n    if (overperforming) {\n      switch (metric) {\n        case 'Log Loss':\n          data = Object.values(reverselogloss['data']).map(obj => Object.values(obj)[0]);\n          reversedata = Object.values(logloss['data']).map(obj => Object.values(obj)[0]);\n          modelMetric = reverselogloss['model'];\n          break;\n\n        case 'Accuracy':\n          data = Object.values(reverseaccuracy['data']).map(obj => Object.values(obj)[0]);\n          reversedata = Object.values(accuracy['data']).map(obj => Object.values(obj)[0]);\n          modelMetric = reverseaccuracy['model'];\n          break;\n\n        case 'Precision':\n          data = Object.values(reverseprecision['data']).map(obj => Object.values(obj)[0]);\n          reversedata = Object.values(precision['data']).map(obj => Object.values(obj)[0]);\n          modelMetric = reverseprecision['model'];\n          break;\n\n        case 'Recall':\n          data = Object.values(reverserecall['data']).map(obj => Object.values(obj)[0]);\n          reversedata = Object.values(recall['data']).map(obj => Object.values(obj)[0]);\n          modelMetric = reverserecall['model'];\n          break;\n\n        case 'F1':\n          data = Object.values(reversef1['data']).map(obj => Object.values(obj)[0]);\n          reversedata = Object.values(f1['data']).map(obj => Object.values(obj)[0]);\n          modelMetric = reversef1['model'];\n          break;\n\n        default:\n          data = Object.values(reverselogloss['data']).map(obj => Object.values(obj)[0]);\n          reversedata = Object.values(logloss['data']).map(obj => Object.values(obj)[0]);\n          modelMetric = reverselogloss['model'];\n      }\n    } else {\n      switch (metric) {\n        case 'Log Loss':\n          data = Object.values(logloss['data']).map(obj => Object.values(obj)[0]);\n          reversedata = Object.values(reverselogloss['data']).map(obj => Object.values(obj)[0]);\n          modelMetric = logloss['model'];\n          break;\n\n        case 'Accuracy':\n          data = Object.values(accuracy['data']).map(obj => Object.values(obj)[0]);\n          reversedata = Object.values(reverseaccuracy['data']).map(obj => Object.values(obj)[0]);\n          modelMetric = accuracy['model'];\n          break;\n\n        case 'Precision':\n          data = Object.values(precision['data']).map(obj => Object.values(obj)[0]);\n          reversedata = Object.values(reverseprecision['data']).map(obj => Object.values(obj)[0]);\n          modelMetric = precision['model'];\n          break;\n\n        case 'Recall':\n          data = Object.values(recall['data']).map(obj => Object.values(obj)[0]);\n          reversedata = Object.values(reverserecall['data']).map(obj => Object.values(obj)[0]);\n          modelMetric = recall['model'];\n          break;\n\n        case 'F1':\n          data = Object.values(f1['data']).map(obj => Object.values(obj)[0]);\n          reversedata = Object.values(reversef1['data']).map(obj => Object.values(obj)[0]);\n          modelMetric = f1['model'];\n          break;\n\n        default:\n          data = Object.values(logloss['data']).map(obj => Object.values(obj)[0]);\n          reversedata = Object.values(reverselogloss['data']).map(obj => Object.values(obj)[0]);\n          modelMetric = logloss['model'];\n      }\n    }\n\n    const metricArray = data.map(obj => obj.metric);\n    const reverseMetricArray = reversedata.map(obj => obj.metric);\n    const sizeArray = data.map(obj => obj.size);\n    const max = Math.max(...metricArray, ...reverseMetricArray, modelMetric);\n    const sizeMax = Math.max(...sizeArray);\n    let filteredData = data.filter(obj => {\n      console.log(features);\n      let sliceStr = obj.slice;\n\n      while (sliceStr.includes(':')) {\n        if (features.includes(sliceStr.substring(0, sliceStr.indexOf(':')))) {\n          return true;\n        }\n\n        sliceStr = sliceStr.substring(sliceStr.indexOf(':') + 1);\n      }\n\n      return false;\n    }).filter(obj => obj.size >= sampleSize).filter(obj => obj.degree <= numFeatures).sort(function (a, b) {\n      if (sortBy === 'size') return b.size - a.size;\n\n      if (metric == 'Log Loss') {\n        if (overperforming) return a.metric - b.metric;\n        return b.metric - a.metric;\n      } else {\n        if (overperforming) return b.metric - a.metric;\n        return a.metric - b.metric;\n      }\n    });\n\n    if (view === 'bar') {\n      filteredData = filteredData.slice(0, 10);\n    } else {\n      filteredData = filteredData.slice(0, 100);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    style: {\n      display: 'block'\n    },\n    children: view === 'bar' ? /*#__PURE__*/_jsxDEV(SliceBarChart, {\n      data: filteredData,\n      model: modelMetric,\n      max: max,\n      view: view,\n      overperforming: overperforming,\n      metric: metric\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }, this) : view === 'force' ? /*#__PURE__*/_jsxDEV(ForceLayout, {\n      data: filteredData,\n      degree: numFeatures,\n      view: view,\n      metric: metric,\n      model: modelMetric,\n      overperforming: overperforming\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(GraphLayout2, {\n      data: filteredData,\n      degree: numFeatures,\n      metric: metric,\n      model: modelMetric,\n      overperforming: overperforming\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Main, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/davidmunechika/Documents/Code/visual-auditor/src/components/Main/Main.js"],"names":["React","SliceBarChart","logloss","accuracy","precision","recall","f1","reverselogloss","reverseaccuracy","reverseprecision","reverserecall","reversef1","ForceLayout","GraphLayout","GraphLayout2","Main","numFeatures","sampleSize","metric","view","sortBy","overperforming","features","data","reversedata","modelMetric","filteredData","max","useEffect","Object","values","map","obj","metricArray","reverseMetricArray","sizeArray","size","Math","sizeMax","filter","console","log","sliceStr","slice","includes","substring","indexOf","degree","sort","a","b","display"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAO,YAAP;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,EAAP,MAAe,oBAAf;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AACZC,EAAAA,WADY;AAEZC,EAAAA,UAFY;AAGZC,EAAAA,MAHY;AAIZC,EAAAA,IAJY;AAKZC,EAAAA,MALY;AAMZC,EAAAA,cANY;AAOZC,EAAAA;AAPY,CAAD,KAQP;AAAA;;AACJ,MAAIC,IAAJ;AACA,MAAIC,WAAJ;AACA,MAAIC,WAAJ;AACA,MAAIC,YAAJ;AACA,MAAIC,GAAJ;AACA3B,EAAAA,KAAK,CAAC4B,SAAN,CAAgB,MAAM;AACpB,QAAIP,cAAJ,EAAoB;AAClB,cAAQH,MAAR;AACE,aAAK,UAAL;AACEK,UAAAA,IAAI,GAAGM,MAAM,CAACC,MAAP,CAAcvB,cAAc,CAAC,MAAD,CAA5B,EAAsCwB,GAAtC,CACJC,GAAD,IAASH,MAAM,CAACC,MAAP,CAAcE,GAAd,EAAmB,CAAnB,CADJ,CAAP;AAGAR,UAAAA,WAAW,GAAGK,MAAM,CAACC,MAAP,CAAc5B,OAAO,CAAC,MAAD,CAArB,EAA+B6B,GAA/B,CACXC,GAAD,IAASH,MAAM,CAACC,MAAP,CAAcE,GAAd,EAAmB,CAAnB,CADG,CAAd;AAGAP,UAAAA,WAAW,GAAGlB,cAAc,CAAC,OAAD,CAA5B;AACA;;AACF,aAAK,UAAL;AACEgB,UAAAA,IAAI,GAAGM,MAAM,CAACC,MAAP,CAActB,eAAe,CAAC,MAAD,CAA7B,EAAuCuB,GAAvC,CACJC,GAAD,IAASH,MAAM,CAACC,MAAP,CAAcE,GAAd,EAAmB,CAAnB,CADJ,CAAP;AAGAR,UAAAA,WAAW,GAAGK,MAAM,CAACC,MAAP,CAAc3B,QAAQ,CAAC,MAAD,CAAtB,EAAgC4B,GAAhC,CACXC,GAAD,IAASH,MAAM,CAACC,MAAP,CAAcE,GAAd,EAAmB,CAAnB,CADG,CAAd;AAGAP,UAAAA,WAAW,GAAGjB,eAAe,CAAC,OAAD,CAA7B;AACA;;AACF,aAAK,WAAL;AACEe,UAAAA,IAAI,GAAGM,MAAM,CAACC,MAAP,CAAcrB,gBAAgB,CAAC,MAAD,CAA9B,EAAwCsB,GAAxC,CACJC,GAAD,IAASH,MAAM,CAACC,MAAP,CAAcE,GAAd,EAAmB,CAAnB,CADJ,CAAP;AAGAR,UAAAA,WAAW,GAAGK,MAAM,CAACC,MAAP,CAAc1B,SAAS,CAAC,MAAD,CAAvB,EAAiC2B,GAAjC,CACXC,GAAD,IAASH,MAAM,CAACC,MAAP,CAAcE,GAAd,EAAmB,CAAnB,CADG,CAAd;AAGAP,UAAAA,WAAW,GAAGhB,gBAAgB,CAAC,OAAD,CAA9B;AACA;;AACF,aAAK,QAAL;AACEc,UAAAA,IAAI,GAAGM,MAAM,CAACC,MAAP,CAAcpB,aAAa,CAAC,MAAD,CAA3B,EAAqCqB,GAArC,CACJC,GAAD,IAASH,MAAM,CAACC,MAAP,CAAcE,GAAd,EAAmB,CAAnB,CADJ,CAAP;AAGAR,UAAAA,WAAW,GAAGK,MAAM,CAACC,MAAP,CAAczB,MAAM,CAAC,MAAD,CAApB,EAA8B0B,GAA9B,CACXC,GAAD,IAASH,MAAM,CAACC,MAAP,CAAcE,GAAd,EAAmB,CAAnB,CADG,CAAd;AAGAP,UAAAA,WAAW,GAAGf,aAAa,CAAC,OAAD,CAA3B;AACA;;AACF,aAAK,IAAL;AACEa,UAAAA,IAAI,GAAGM,MAAM,CAACC,MAAP,CAAcnB,SAAS,CAAC,MAAD,CAAvB,EAAiCoB,GAAjC,CACJC,GAAD,IAASH,MAAM,CAACC,MAAP,CAAcE,GAAd,EAAmB,CAAnB,CADJ,CAAP;AAGAR,UAAAA,WAAW,GAAGK,MAAM,CAACC,MAAP,CAAcxB,EAAE,CAAC,MAAD,CAAhB,EAA0ByB,GAA1B,CACXC,GAAD,IAASH,MAAM,CAACC,MAAP,CAAcE,GAAd,EAAmB,CAAnB,CADG,CAAd;AAGAP,UAAAA,WAAW,GAAGd,SAAS,CAAC,OAAD,CAAvB;AACA;;AACF;AACEY,UAAAA,IAAI,GAAGM,MAAM,CAACC,MAAP,CAAcvB,cAAc,CAAC,MAAD,CAA5B,EAAsCwB,GAAtC,CACJC,GAAD,IAASH,MAAM,CAACC,MAAP,CAAcE,GAAd,EAAmB,CAAnB,CADJ,CAAP;AAGAR,UAAAA,WAAW,GAAGK,MAAM,CAACC,MAAP,CAAc5B,OAAO,CAAC,MAAD,CAArB,EAA+B6B,GAA/B,CACXC,GAAD,IAASH,MAAM,CAACC,MAAP,CAAcE,GAAd,EAAmB,CAAnB,CADG,CAAd;AAGAP,UAAAA,WAAW,GAAGlB,cAAc,CAAC,OAAD,CAA5B;AArDJ;AAuDD,KAxDD,MAwDO;AACL,cAAQW,MAAR;AACE,aAAK,UAAL;AACEK,UAAAA,IAAI,GAAGM,MAAM,CAACC,MAAP,CAAc5B,OAAO,CAAC,MAAD,CAArB,EAA+B6B,GAA/B,CACJC,GAAD,IAASH,MAAM,CAACC,MAAP,CAAcE,GAAd,EAAmB,CAAnB,CADJ,CAAP;AAGAR,UAAAA,WAAW,GAAGK,MAAM,CAACC,MAAP,CAAcvB,cAAc,CAAC,MAAD,CAA5B,EAAsCwB,GAAtC,CACXC,GAAD,IAASH,MAAM,CAACC,MAAP,CAAcE,GAAd,EAAmB,CAAnB,CADG,CAAd;AAGAP,UAAAA,WAAW,GAAGvB,OAAO,CAAC,OAAD,CAArB;AACA;;AACF,aAAK,UAAL;AACEqB,UAAAA,IAAI,GAAGM,MAAM,CAACC,MAAP,CAAc3B,QAAQ,CAAC,MAAD,CAAtB,EAAgC4B,GAAhC,CACJC,GAAD,IAASH,MAAM,CAACC,MAAP,CAAcE,GAAd,EAAmB,CAAnB,CADJ,CAAP;AAGAR,UAAAA,WAAW,GAAGK,MAAM,CAACC,MAAP,CAActB,eAAe,CAAC,MAAD,CAA7B,EAAuCuB,GAAvC,CACXC,GAAD,IAASH,MAAM,CAACC,MAAP,CAAcE,GAAd,EAAmB,CAAnB,CADG,CAAd;AAGAP,UAAAA,WAAW,GAAGtB,QAAQ,CAAC,OAAD,CAAtB;AACA;;AACF,aAAK,WAAL;AACEoB,UAAAA,IAAI,GAAGM,MAAM,CAACC,MAAP,CAAc1B,SAAS,CAAC,MAAD,CAAvB,EAAiC2B,GAAjC,CACJC,GAAD,IAASH,MAAM,CAACC,MAAP,CAAcE,GAAd,EAAmB,CAAnB,CADJ,CAAP;AAGAR,UAAAA,WAAW,GAAGK,MAAM,CAACC,MAAP,CAAcrB,gBAAgB,CAAC,MAAD,CAA9B,EAAwCsB,GAAxC,CACXC,GAAD,IAASH,MAAM,CAACC,MAAP,CAAcE,GAAd,EAAmB,CAAnB,CADG,CAAd;AAGAP,UAAAA,WAAW,GAAGrB,SAAS,CAAC,OAAD,CAAvB;AACA;;AACF,aAAK,QAAL;AACEmB,UAAAA,IAAI,GAAGM,MAAM,CAACC,MAAP,CAAczB,MAAM,CAAC,MAAD,CAApB,EAA8B0B,GAA9B,CACJC,GAAD,IAASH,MAAM,CAACC,MAAP,CAAcE,GAAd,EAAmB,CAAnB,CADJ,CAAP;AAGAR,UAAAA,WAAW,GAAGK,MAAM,CAACC,MAAP,CAAcpB,aAAa,CAAC,MAAD,CAA3B,EAAqCqB,GAArC,CACXC,GAAD,IAASH,MAAM,CAACC,MAAP,CAAcE,GAAd,EAAmB,CAAnB,CADG,CAAd;AAGAP,UAAAA,WAAW,GAAGpB,MAAM,CAAC,OAAD,CAApB;AACA;;AACF,aAAK,IAAL;AACEkB,UAAAA,IAAI,GAAGM,MAAM,CAACC,MAAP,CAAcxB,EAAE,CAAC,MAAD,CAAhB,EAA0ByB,GAA1B,CAA+BC,GAAD,IAASH,MAAM,CAACC,MAAP,CAAcE,GAAd,EAAmB,CAAnB,CAAvC,CAAP;AACAR,UAAAA,WAAW,GAAGK,MAAM,CAACC,MAAP,CAAcnB,SAAS,CAAC,MAAD,CAAvB,EAAiCoB,GAAjC,CACXC,GAAD,IAASH,MAAM,CAACC,MAAP,CAAcE,GAAd,EAAmB,CAAnB,CADG,CAAd;AAGAP,UAAAA,WAAW,GAAGnB,EAAE,CAAC,OAAD,CAAhB;AACA;;AACF;AACEiB,UAAAA,IAAI,GAAGM,MAAM,CAACC,MAAP,CAAc5B,OAAO,CAAC,MAAD,CAArB,EAA+B6B,GAA/B,CACJC,GAAD,IAASH,MAAM,CAACC,MAAP,CAAcE,GAAd,EAAmB,CAAnB,CADJ,CAAP;AAGAR,UAAAA,WAAW,GAAGK,MAAM,CAACC,MAAP,CAAcvB,cAAc,CAAC,MAAD,CAA5B,EAAsCwB,GAAtC,CACXC,GAAD,IAASH,MAAM,CAACC,MAAP,CAAcE,GAAd,EAAmB,CAAnB,CADG,CAAd;AAGAP,UAAAA,WAAW,GAAGvB,OAAO,CAAC,OAAD,CAArB;AAnDJ;AAqDD;;AACD,UAAM+B,WAAW,GAAGV,IAAI,CAACQ,GAAL,CAAUC,GAAD,IAASA,GAAG,CAACd,MAAtB,CAApB;AACA,UAAMgB,kBAAkB,GAAGV,WAAW,CAACO,GAAZ,CAAiBC,GAAD,IAASA,GAAG,CAACd,MAA7B,CAA3B;AACA,UAAMiB,SAAS,GAAGZ,IAAI,CAACQ,GAAL,CAAUC,GAAD,IAASA,GAAG,CAACI,IAAtB,CAAlB;AACA,UAAMT,GAAG,GAAGU,IAAI,CAACV,GAAL,CAAS,GAAGM,WAAZ,EAAyB,GAAGC,kBAA5B,EAAgDT,WAAhD,CAAZ;AACA,UAAMa,OAAO,GAAGD,IAAI,CAACV,GAAL,CAAS,GAAGQ,SAAZ,CAAhB;AACA,QAAIT,YAAY,GAAGH,IAAI,CACpBgB,MADgB,CACRP,GAAD,IAAS;AACfQ,MAAAA,OAAO,CAACC,GAAR,CAAYnB,QAAZ;AACA,UAAIoB,QAAQ,GAAGV,GAAG,CAACW,KAAnB;;AACA,aAAOD,QAAQ,CAACE,QAAT,CAAkB,GAAlB,CAAP,EAA+B;AAC7B,YAAItB,QAAQ,CAACsB,QAAT,CAAkBF,QAAQ,CAACG,SAAT,CAAmB,CAAnB,EAAsBH,QAAQ,CAACI,OAAT,CAAiB,GAAjB,CAAtB,CAAlB,CAAJ,EAAqE;AACnE,iBAAO,IAAP;AACD;;AACDJ,QAAAA,QAAQ,GAAGA,QAAQ,CAACG,SAAT,CAAmBH,QAAQ,CAACI,OAAT,CAAiB,GAAjB,IAAwB,CAA3C,CAAX;AACD;;AACD,aAAO,KAAP;AACD,KAXgB,EAYhBP,MAZgB,CAYRP,GAAD,IAASA,GAAG,CAACI,IAAJ,IAAYnB,UAZZ,EAahBsB,MAbgB,CAaRP,GAAD,IAASA,GAAG,CAACe,MAAJ,IAAc/B,WAbd,EAchBgC,IAdgB,CAcX,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AACpB,UAAI9B,MAAM,KAAK,MAAf,EAAuB,OAAO8B,CAAC,CAACd,IAAF,GAASa,CAAC,CAACb,IAAlB;;AACvB,UAAIlB,MAAM,IAAI,UAAd,EAA0B;AACxB,YAAIG,cAAJ,EAAoB,OAAO4B,CAAC,CAAC/B,MAAF,GAAWgC,CAAC,CAAChC,MAApB;AACpB,eAAOgC,CAAC,CAAChC,MAAF,GAAW+B,CAAC,CAAC/B,MAApB;AACD,OAHD,MAGO;AACL,YAAIG,cAAJ,EAAoB,OAAO6B,CAAC,CAAChC,MAAF,GAAW+B,CAAC,CAAC/B,MAApB;AACpB,eAAO+B,CAAC,CAAC/B,MAAF,GAAWgC,CAAC,CAAChC,MAApB;AACD;AACF,KAvBgB,CAAnB;;AAwBA,QAAIC,IAAI,KAAK,KAAb,EAAoB;AAClBO,MAAAA,YAAY,GAAGA,YAAY,CAACiB,KAAb,CAAmB,CAAnB,EAAsB,EAAtB,CAAf;AACD,KAFD,MAEO;AACLjB,MAAAA,YAAY,GAAGA,YAAY,CAACiB,KAAb,CAAmB,CAAnB,EAAsB,GAAtB,CAAf;AACD;AACF,GAlJD;AAoJA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAgC,IAAA,KAAK,EAAE;AAAEQ,MAAAA,OAAO,EAAE;AAAX,KAAvC;AAAA,cACGhC,IAAI,KAAK,KAAT,gBACC,QAAC,aAAD;AACE,MAAA,IAAI,EAAEO,YADR;AAEE,MAAA,KAAK,EAAED,WAFT;AAGE,MAAA,GAAG,EAAEE,GAHP;AAIE,MAAA,IAAI,EAAER,IAJR;AAKE,MAAA,cAAc,EAAEE,cALlB;AAME,MAAA,MAAM,EAAEH;AANV;AAAA;AAAA;AAAA;AAAA,YADD,GASGC,IAAI,KAAK,OAAT,gBACF,QAAC,WAAD;AACE,MAAA,IAAI,EAAEO,YADR;AAEE,MAAA,MAAM,EAAEV,WAFV;AAGE,MAAA,IAAI,EAAEG,IAHR;AAIE,MAAA,MAAM,EAAED,MAJV;AAKE,MAAA,KAAK,EAAEO,WALT;AAME,MAAA,cAAc,EAAEJ;AANlB;AAAA;AAAA;AAAA;AAAA,YADE,gBAUF,QAAC,YAAD;AACE,MAAA,IAAI,EAAEK,YADR;AAEE,MAAA,MAAM,EAAEV,WAFV;AAGE,MAAA,MAAM,EAAEE,MAHV;AAIE,MAAA,KAAK,EAAEO,WAJT;AAKE,MAAA,cAAc,EAAEJ;AALlB;AAAA;AAAA;AAAA;AAAA;AApBJ;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CAjMD;;GAAMN,I;;KAAAA,I;AAmMN,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport SliceBarChart from './SliceBarChart';\nimport './Main.css';\nimport logloss from '../../data/logloss.json';\nimport accuracy from '../../data/accuracy.json';\nimport precision from '../../data/precision.json';\nimport recall from '../../data/recall.json';\nimport f1 from '../../data/f1.json';\nimport reverselogloss from '../../data/reverselogloss.json';\nimport reverseaccuracy from '../../data/reverseaccuracy.json';\nimport reverseprecision from '../../data/reverseprecision.json';\nimport reverserecall from '../../data/reverserecall.json';\nimport reversef1 from '../../data/reversef1.json';\nimport ForceLayout from './ForceLayout';\nimport GraphLayout from './GraphLayout';\nimport GraphLayout2 from './GraphLayout2';\n\nconst Main = ({\n  numFeatures,\n  sampleSize,\n  metric,\n  view,\n  sortBy,\n  overperforming,\n  features,\n}) => {\n  let data;\n  let reversedata;\n  let modelMetric;\n  let filteredData;\n  let max;\n  React.useEffect(() => {\n    if (overperforming) {\n      switch (metric) {\n        case 'Log Loss':\n          data = Object.values(reverselogloss['data']).map(\n            (obj) => Object.values(obj)[0]\n          );\n          reversedata = Object.values(logloss['data']).map(\n            (obj) => Object.values(obj)[0]\n          );\n          modelMetric = reverselogloss['model'];\n          break;\n        case 'Accuracy':\n          data = Object.values(reverseaccuracy['data']).map(\n            (obj) => Object.values(obj)[0]\n          );\n          reversedata = Object.values(accuracy['data']).map(\n            (obj) => Object.values(obj)[0]\n          );\n          modelMetric = reverseaccuracy['model'];\n          break;\n        case 'Precision':\n          data = Object.values(reverseprecision['data']).map(\n            (obj) => Object.values(obj)[0]\n          );\n          reversedata = Object.values(precision['data']).map(\n            (obj) => Object.values(obj)[0]\n          );\n          modelMetric = reverseprecision['model'];\n          break;\n        case 'Recall':\n          data = Object.values(reverserecall['data']).map(\n            (obj) => Object.values(obj)[0]\n          );\n          reversedata = Object.values(recall['data']).map(\n            (obj) => Object.values(obj)[0]\n          );\n          modelMetric = reverserecall['model'];\n          break;\n        case 'F1':\n          data = Object.values(reversef1['data']).map(\n            (obj) => Object.values(obj)[0]\n          );\n          reversedata = Object.values(f1['data']).map(\n            (obj) => Object.values(obj)[0]\n          );\n          modelMetric = reversef1['model'];\n          break;\n        default:\n          data = Object.values(reverselogloss['data']).map(\n            (obj) => Object.values(obj)[0]\n          );\n          reversedata = Object.values(logloss['data']).map(\n            (obj) => Object.values(obj)[0]\n          );\n          modelMetric = reverselogloss['model'];\n      }\n    } else {\n      switch (metric) {\n        case 'Log Loss':\n          data = Object.values(logloss['data']).map(\n            (obj) => Object.values(obj)[0]\n          );\n          reversedata = Object.values(reverselogloss['data']).map(\n            (obj) => Object.values(obj)[0]\n          );\n          modelMetric = logloss['model'];\n          break;\n        case 'Accuracy':\n          data = Object.values(accuracy['data']).map(\n            (obj) => Object.values(obj)[0]\n          );\n          reversedata = Object.values(reverseaccuracy['data']).map(\n            (obj) => Object.values(obj)[0]\n          );\n          modelMetric = accuracy['model'];\n          break;\n        case 'Precision':\n          data = Object.values(precision['data']).map(\n            (obj) => Object.values(obj)[0]\n          );\n          reversedata = Object.values(reverseprecision['data']).map(\n            (obj) => Object.values(obj)[0]\n          );\n          modelMetric = precision['model'];\n          break;\n        case 'Recall':\n          data = Object.values(recall['data']).map(\n            (obj) => Object.values(obj)[0]\n          );\n          reversedata = Object.values(reverserecall['data']).map(\n            (obj) => Object.values(obj)[0]\n          );\n          modelMetric = recall['model'];\n          break;\n        case 'F1':\n          data = Object.values(f1['data']).map((obj) => Object.values(obj)[0]);\n          reversedata = Object.values(reversef1['data']).map(\n            (obj) => Object.values(obj)[0]\n          );\n          modelMetric = f1['model'];\n          break;\n        default:\n          data = Object.values(logloss['data']).map(\n            (obj) => Object.values(obj)[0]\n          );\n          reversedata = Object.values(reverselogloss['data']).map(\n            (obj) => Object.values(obj)[0]\n          );\n          modelMetric = logloss['model'];\n      }\n    }\n    const metricArray = data.map((obj) => obj.metric);\n    const reverseMetricArray = reversedata.map((obj) => obj.metric);\n    const sizeArray = data.map((obj) => obj.size);\n    const max = Math.max(...metricArray, ...reverseMetricArray, modelMetric);\n    const sizeMax = Math.max(...sizeArray);\n    let filteredData = data\n      .filter((obj) => {\n        console.log(features);\n        let sliceStr = obj.slice;\n        while (sliceStr.includes(':')) {\n          if (features.includes(sliceStr.substring(0, sliceStr.indexOf(':')))) {\n            return true;\n          }\n          sliceStr = sliceStr.substring(sliceStr.indexOf(':') + 1);\n        }\n        return false;\n      })\n      .filter((obj) => obj.size >= sampleSize)\n      .filter((obj) => obj.degree <= numFeatures)\n      .sort(function (a, b) {\n        if (sortBy === 'size') return b.size - a.size;\n        if (metric == 'Log Loss') {\n          if (overperforming) return a.metric - b.metric;\n          return b.metric - a.metric;\n        } else {\n          if (overperforming) return b.metric - a.metric;\n          return a.metric - b.metric;\n        }\n      });\n    if (view === 'bar') {\n      filteredData = filteredData.slice(0, 10);\n    } else {\n      filteredData = filteredData.slice(0, 100);\n    }\n  });\n\n  return (\n    <div className='main-container' style={{ display: 'block' }}>\n      {view === 'bar' ? (\n        <SliceBarChart\n          data={filteredData}\n          model={modelMetric}\n          max={max}\n          view={view}\n          overperforming={overperforming}\n          metric={metric}\n        />\n      ) : view === 'force' ? (\n        <ForceLayout\n          data={filteredData}\n          degree={numFeatures}\n          view={view}\n          metric={metric}\n          model={modelMetric}\n          overperforming={overperforming}\n        />\n      ) : (\n        <GraphLayout2\n          data={filteredData}\n          degree={numFeatures}\n          metric={metric}\n          model={modelMetric}\n          overperforming={overperforming}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}