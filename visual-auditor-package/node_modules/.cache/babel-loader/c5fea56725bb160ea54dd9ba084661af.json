{"ast":null,"code":"import _toConsumableArray from\"/Users/davidmunechika/Documents/Code/visual-auditor/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React from'react';import SliceBarChart from'./SliceBarChart';import'./Main.css';import logloss from'../../data/logloss.json';import accuracy from'../../data/accuracy.json';import precision from'../../data/precision.json';import ForceLayout from'./ForceLayout';import StickyForceLayout from'./StickyForceLayout';import{jsx as _jsx}from\"react/jsx-runtime\";var Main=function Main(_ref){var numFeatures=_ref.numFeatures,sampleSize=_ref.sampleSize,metric=_ref.metric,view=_ref.view,sortBy=_ref.sortBy;var data;var modelMetric;switch(metric){case'Log Loss':data=Object.values(logloss['data']).map(function(obj){return Object.values(obj)[0];});modelMetric=logloss['model'];break;case'Accuracy':data=Object.values(accuracy['data']).map(function(obj){return Object.values(obj)[0];});modelMetric=accuracy['model'];break;case'Precision':data=Object.values(precision['data']).map(function(obj){return Object.values(obj)[0];});modelMetric=precision['model'];break;default:data=Object.values(logloss['data']).map(function(obj){return Object.values(obj)[0];});modelMetric=logloss['model'];}var metricArray=data.map(function(obj){return obj.metric;});var sizeArray=data.map(function(obj){return obj.size;});var max=Math.max.apply(Math,_toConsumableArray(metricArray));var sizeMax=Math.max.apply(Math,_toConsumableArray(sizeArray));var filteredData=data.filter(function(obj){return obj.size>=sampleSize;}).filter(function(obj){return obj.degree<=numFeatures;}).sort(function(a,b){if(sortBy==='size')return b.size-a.size;return b.metric-a.metric;});if(view==='bar'){filteredData=filteredData.slice(0,10);}return/*#__PURE__*/_jsx(\"div\",{className:\"main-container\",style:{display:'block'},children:view==='bar'?/*#__PURE__*/_jsx(SliceBarChart,{data:filteredData,model:modelMetric,max:max,view:view}):view==='force'?/*#__PURE__*/_jsx(ForceLayout,{data:filteredData,sizeMax:sizeMax,degree:numFeatures,view:view,metric:metric}):/*#__PURE__*/_jsx(StickyForceLayout,{data:filteredData,sizeMax:sizeMax,degree:numFeatures,view:view,metric:metric})});};export default Main;","map":{"version":3,"sources":["/Users/davidmunechika/Documents/Code/visual-auditor/src/components/Main/Main.js"],"names":["React","SliceBarChart","logloss","accuracy","precision","ForceLayout","StickyForceLayout","Main","numFeatures","sampleSize","metric","view","sortBy","data","modelMetric","Object","values","map","obj","metricArray","sizeArray","size","max","Math","sizeMax","filteredData","filter","degree","sort","a","b","slice","display"],"mappings":"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","sourcesContent":["import React from 'react';\nimport SliceBarChart from './SliceBarChart';\nimport './Main.css';\nimport logloss from '../../data/logloss.json';\nimport accuracy from '../../data/accuracy.json';\nimport precision from '../../data/precision.json';\nimport ForceLayout from './ForceLayout';\nimport StickyForceLayout from './StickyForceLayout';\n\nconst Main = ({ numFeatures, sampleSize, metric, view, sortBy }) => {\n  let data;\n  let modelMetric;\n  switch (metric) {\n    case 'Log Loss':\n      data = Object.values(logloss['data']).map((obj) => Object.values(obj)[0]);\n      modelMetric = logloss['model'];\n      break;\n    case 'Accuracy':\n      data = Object.values(accuracy['data']).map(\n        (obj) => Object.values(obj)[0]\n      );\n      modelMetric = accuracy['model'];\n      break;\n    case 'Precision':\n      data = Object.values(precision['data']).map(\n        (obj) => Object.values(obj)[0]\n      );\n      modelMetric = precision['model'];\n      break;\n    default:\n      data = Object.values(logloss['data']).map((obj) => Object.values(obj)[0]);\n      modelMetric = logloss['model'];\n  }\n  const metricArray = data.map((obj) => obj.metric);\n  const sizeArray = data.map((obj) => obj.size);\n  const max = Math.max(...metricArray);\n  const sizeMax = Math.max(...sizeArray);\n  let filteredData = data\n    .filter((obj) => obj.size >= sampleSize)\n    .filter((obj) => obj.degree <= numFeatures)\n    .sort(function (a, b) {\n      if (sortBy === 'size') return b.size - a.size;\n      return b.metric - a.metric;\n    });\n  if (view === 'bar') {\n    filteredData = filteredData.slice(0, 10);\n  }\n  return (\n    <div className='main-container' style={{ display: 'block' }}>\n      {view === 'bar' ? (\n        <SliceBarChart\n          data={filteredData}\n          model={modelMetric}\n          max={max}\n          view={view}\n        />\n      ) : view === 'force' ? (\n        <ForceLayout\n          data={filteredData}\n          sizeMax={sizeMax}\n          degree={numFeatures}\n          view={view}\n          metric={metric}\n        />\n      ) : (\n        <StickyForceLayout\n          data={filteredData}\n          sizeMax={sizeMax}\n          degree={numFeatures}\n          view={view}\n          metric={metric}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}