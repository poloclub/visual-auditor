{"ast":null,"code":"var _jsxFileName = \"/Users/davidmunechika/Documents/Code/visual-auditor/src/components/Main/GraphLayout.js\",\n    _s = $RefreshSig$();\n\nimport { useD3 } from '../../hooks/useD3';\nimport React, { memo } from 'react';\nimport * as d3 from 'd3';\nimport Switch from '@mui/material/Switch';\nimport './GraphLayout.css';\nimport Button from '@mui/material/Button';\nimport logLossSamples from '../../data/loglosssamples.json';\nimport reverseLogLossSamples from '../../data/reverseloglosssamples.json';\nimport accuracySamples from '../../data/accuracysamples.json';\nimport precisionSamples from '../../data/precisionsamples.json';\nimport commonSamples from '../../data/commonSamples.json';\nimport commonSamplesSliceline from '../../data/commonSamplesSliceline.json';\nimport reverseCommonSamples from '../../data/reverseCommonSamples.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GraphLayout({\n  data,\n  degree,\n  metric,\n  model,\n  overperforming,\n  radiusType,\n  edgeFiltering,\n  edgeForce,\n  setDetails,\n  cursorMode,\n  algorithm\n}) {\n  _s();\n\n  const margin = {\n    top: 30,\n    right: 30,\n    bottom: 60,\n    left: 85\n  };\n  const [value, setValue] = React.useState(0);\n  const [showConvexHull, setShowConvexHull] = React.useState(false);\n  const hulls = Array.from(Array(100).keys());\n\n  function useForceUpdate() {\n    return () => setValue(value => value + 1); // update the state to force render\n  }\n\n  const forceUpdate = useForceUpdate();\n  const width = 800;\n  const height = 800;\n  const features = [];\n  const groupings = {};\n  let samples;\n  let matches = {};\n\n  switch (metric) {\n    case 'Log Loss':\n      if (overperforming) {\n        samples = reverseLogLossSamples;\n        matches = reverseCommonSamples;\n      } else {\n        if (algorithm === 'sliceline') {\n          matches = commonSamplesSliceline;\n        } else {\n          matches = commonSamples;\n        }\n\n        samples = logLossSamples;\n      }\n\n      break;\n\n    case 'Accuracy':\n      if (overperforming) samples = accuracySamples;else samples = accuracySamples;\n      break;\n\n    case 'Precision':\n      if (overperforming) samples = precisionSamples;else samples = precisionSamples;\n      break;\n\n    default:\n      if (overperforming) samples = reverseLogLossSamples;else samples = logLossSamples;\n      break;\n  }\n\n  data.forEach(obj => {\n    obj.classifiers = [];\n    let str = obj.slice;\n\n    while (str.indexOf(':') !== -1) {\n      let temp = str.substring(0, str.indexOf(':'));\n      obj.classifiers.push(temp);\n      if (!features.includes(temp)) features.push(temp);\n\n      if (degree === obj.classifiers.length) {\n        if (groupings[obj.classifiers.join(', ')]) groupings[obj.classifiers.join(', ')]++;else groupings[obj.classifiers.join(', ')] = 1;\n      }\n\n      if (str.indexOf(',') !== -1) {\n        str = str.substring(str.indexOf(',') + 2);\n      } else {\n        str = '';\n      }\n    }\n  });\n  const groupingsArray = Object.keys(groupings).map(key => [key, groupings[key]]).sort((a, b) => b[1] - a[1]);\n  const topGroupings = groupingsArray.slice(0, 15);\n  const xCenter = [];\n  const yCenter = [];\n  const xTickDistance = (width - margin.left - margin.right) / (features.length + 1);\n  const yTickDistance = (height - margin.top - margin.bottom) / (features.length + 2);\n\n  for (let i = 0; i < features.length; i++) {\n    xCenter.push(margin.left + (i + 1) * xTickDistance);\n    yCenter.push(2 * margin.top + (i + 1) * yTickDistance);\n  }\n\n  const x = d3.scaleBand().domain(features).rangeRound([margin.left, width - margin.right]).padding(0.1);\n\n  const xAxis = g => g.attr('transform', `translate(0,${height - margin.bottom})`).call(d3.axisBottom(x).tickSizeOuter(0)).selectAll('text').attr('transform', 'translate(-10,0)rotate(-45)').style('text-anchor', 'end');\n\n  const yAxis = g => g.attr('transform', `translate(${margin.left},${30 - margin.bottom})`).call(d3.axisLeft(x).tickSizeOuter(0)).selectAll('text').style('text-anchor', 'end');\n\n  const xAxisGrid = g => g.attr('transform', `translate(0,${height - margin.bottom})`).call(d3.axisBottom(x).tickSizeOuter(0).tickSizeInner(-height - margin.top + 2 * margin.bottom)).style('opacity', 0.1).selectAll('text').style('display', 'none');\n\n  const yAxisGrid = g => g.attr('transform', `translate(${margin.left},${30 - margin.bottom})`).call(d3.axisLeft(x).tickSizeOuter(0).tickSizeInner(-width - margin.right + 2 * margin.left)).style('opacity', 0.1).selectAll('text').style('display', 'none');\n\n  const nodes = data.map(obj => {\n    var _obj$classifiers$;\n\n    return {\n      radius: radiusType === 'log' ? Math.log(obj.size) : Math.sqrt(obj.size),\n      category: obj.degree,\n      xFeature: obj.classifiers[0],\n      yFeature: (_obj$classifiers$ = obj.classifiers[1]) !== null && _obj$classifiers$ !== void 0 ? _obj$classifiers$ : obj.classifiers[0],\n      slice: obj.slice,\n      size: obj.size,\n      metric: obj.metric,\n      classifiers: obj.classifiers\n    };\n  });\n\n  function countCommonSamples(slice1, slice2) {\n    let arr1 = samples[slice1];\n    let arr2 = samples[slice2];\n    if (!arr1 || !arr2) return 0;\n    arr1 = arr1.sort((a, b) => 0.5 - Math.random()).slice(0, 2000);\n    return arr1.filter(sample => arr2.includes(sample)).length;\n  }\n\n  let links = [];\n  let common = {};\n\n  for (let i = 0; i < nodes.length; i++) {\n    for (let j = i + 1; j < nodes.length; j++) {\n      const count = matches[nodes[i].slice + '-' + nodes[j].slice]; // const count = countCommonSamples(nodes[i].slice, nodes[j].slice);\n      // common[nodes[i].slice + '-' + nodes[j].slice] = count;\n      // common[nodes[j].slice + '-' + nodes[i].slice] = count;\n\n      if (count > edgeFiltering) {\n        links.push({\n          source: i,\n          target: j,\n          sliceSource: nodes[i].slice,\n          sliceTarget: nodes[j].slice,\n          count: count\n        });\n      }\n    }\n  } // console.log(JSON.stringify(common));\n  // const links = [];\n  // console.log(JSON.stringify(links));\n\n\n  const graph = {\n    nodes: nodes,\n    links: links\n  };\n\n  function clamp(x, lo, hi) {\n    return x < lo ? lo : x > hi ? hi : x;\n  }\n\n  const ref = useD3(svg => {\n    svg = d3.select('.svg').style('width', '60%').style('height', '60%');\n    let link = svg.selectAll('.link').attr('class', 'link').data(graph.links).join('line').classed('link', true);\n    const node = svg.selectAll('.node').data(graph.nodes).join('circle').attr('r', function (d) {\n      return d.radius;\n    }).style('fill', function (d) {\n      if (overperforming) return d3.interpolateBlues(Math.abs((d.metric - model) / model));\n      return d3.interpolateReds(Math.abs((d.metric - model) / model));\n    }).classed('node', true).classed('fixed', d => d.fx !== undefined).on('mouseover', function (event, d) {\n      cursorMode === 'select' ? d3.select(this).attr('r', d.radius).style('opacity', '0.7').style('cursor', 'pointer') : d3.select(this).attr('r', d.radius).style('opacity', '0.7').style('cursor', 'grab');\n      d3.select('.tooltip').transition().duration(200).style('opacity', 0.9).style('left', Math.min(Math.max(200, d.x), width - 200) + 100 + 'px').style('top', Math.min(height - 200, Math.max(0, d.y)) + 'px');\n      d3.select('.tooltip').html('<strong>Slice Description: </strong>' + '<br><div style={{margin: \"1rem\"}}> </div>' + d.slice + '<br>' + '<strong>Size: </strong>' + '<br>' + d.size + ' samples' + '<br>' + '<strong>' + metric + ': ' + '</strong>' + '<br>' + d.metric.toFixed(2) + '<br>' + `(${Math.round((d.metric - model) / model * 100)}% difference)`);\n    }).on('mouseout', function (d, i) {\n      d3.select(this).attr('r', i.radius).style('opacity', '1');\n      d3.select('.tooltip').transition().style('opacity', 0).style('left', width + 'px').style('top', 0 + 'px');\n    }).on('click', click);\n    const simulation = d3.forceSimulation().nodes(graph.nodes).force('charge', d3.forceManyBody().strength(-5)) // .force('center', d3.forceCenter(width / 2, height / 2).strength(0.1))\n    .force('x', d3.forceX().x(function (d) {\n      return xCenter[features.indexOf(d.xFeature)];\n    })).force('y', d3.forceY().y(function (d) {\n      if (degree > 1) {\n        return yCenter[features.indexOf(d.yFeature)];\n      } else {\n        return height / 2;\n      }\n    })).force('link', d3.forceLink(graph.links).strength(d => {\n      return d.count / 10000 * edgeForce;\n    })).force('collision', d3.forceCollide().radius(function (d) {\n      return d.radius;\n    })).on('tick', tick);\n\n    if (cursorMode === 'drag') {\n      const drag = d3.drag().on('start', dragstart).on('drag', dragged);\n      node.call(drag).on('click', click);\n    }\n\n    function tick() {\n      link.attr('x1', d => Math.max(Math.min(d.source.x, width), d.source.radius + 100)).attr('y1', d => Math.max(Math.min(d.source.y, height - 75), d.source.radius)).attr('x2', d => Math.max(Math.min(d.target.x, width), d.target.radius + 100)).attr('y2', d => Math.max(Math.min(d.target.y, height - 75), d.target.radius)).style('stroke-width', d => Math.min(Math.pow(d.count / 2000, 2) * edgeForce, Math.pow(d.count / 2000, 2) * 3));\n      node.attr('cx', d => Math.max(Math.min(d.x, width), d.radius + 100)).attr('cy', d => Math.max(Math.min(d.y, height - 75), d.radius));\n    }\n\n    function click(event, d) {\n      if (cursorMode === 'select') {\n        node.style('fill', function (d) {\n          if (event.target.__data__ === d) {\n            return d3.interpolateGreys(0.5);\n          }\n\n          if (overperforming) return d3.interpolateBlues(Math.abs((d.metric - model) / model));\n          return d3.interpolateReds(Math.abs((d.metric - model) / model));\n        });\n        setDetails({\n          slice: d.slice,\n          size: d.size,\n          metric: d.metric,\n          similarSlices: links.sort((a, b) => b.count - a.count).map(link => {\n            if (link.count > edgeFiltering && link.sliceSource === d.slice) {\n              return link.sliceTarget;\n            } else if (link.count > edgeFiltering && link.sliceTarget === d.slice) {\n              return link.sliceSource;\n            }\n\n            return undefined;\n          }).filter(link => link !== undefined).slice(0, 10)\n        });\n      } else {\n        delete d.fx;\n        delete d.fy;\n        d3.select(this).classed('fixed', false);\n        d3.select(this).style('fill', () => {\n          if (overperforming) return d3.interpolateBlues(Math.abs((d.metric - model) / model));\n          return d3.interpolateReds(Math.abs((d.metric - model) / model));\n        });\n        simulation.alpha(1).restart();\n      }\n    }\n\n    function dragstart(event, d) {\n      d3.select(this).classed('fixed', true);\n      d3.select(this).style('fill', 'lightgray');\n      setDetails({\n        slice: d.slice,\n        size: d.size,\n        metric: d.metric,\n        similarSlices: links.sort((a, b) => b.count - a.count).map(link => {\n          if (link.count > edgeFiltering && link.sliceSource === d.slice) {\n            return link.sliceTarget;\n          } else if (link.count > edgeFiltering && link.sliceTarget === d.slice) {\n            return link.sliceSource;\n          }\n\n          return undefined;\n        }).filter(link => link !== undefined).slice(0, 10)\n      });\n    }\n\n    function dragged(event, d) {\n      d.fx = clamp(event.x, 0, width);\n      d.fy = clamp(event.y, 0, height);\n      simulation.alpha(1).restart();\n    }\n\n    const convexHull = (g, opacity) => {\n      const colors = ['gray', 'green', 'yellow', 'black', 'purple', 'pink', 'red', 'orange', 'brown', 'blue', 'cyan', 'magenta', 'lime', 'navy', 'olive', 'teal', 'violet', 'wheat'];\n      let vertices = [];\n\n      for (let i = 0; i < topGroupings.length; i++) {\n        vertices = [];\n\n        for (let j = 0; j < nodes.length; j++) {\n          if (nodes[j].xFeature === topGroupings[i][0].split(', ')[0] && (degree < 2 || nodes[j].yFeature === topGroupings[i][0].split(', ')[1])) {\n            if (degree < 2) {\n              vertices.push([nodes[j].x, height / 2]);\n            } else {\n              vertices.push([nodes[j].x, nodes[j].y]);\n            }\n          }\n        }\n\n        const hull = d3.polygonHull(vertices);\n        const line = d3.line().curve(d3.curveLinearClosed);\n        if (!hull) return;\n        g.append('path').attr('class', `path${degree}`).attr('d', line(hull)).attr('fill', colors[0]).attr('stroke', colors[0]).attr('opacity', opacity);\n      }\n    };\n\n    svg.select('.x-axis-grid').call(xAxisGrid);\n    svg.select('.y-axis-grid').call(yAxisGrid);\n    svg.select('.x-axis').call(xAxis);\n\n    if (degree >= 2) {\n      svg.select('.y-axis').call(yAxis).style('opacity', '1');\n    } else {\n      svg.select('.y-axis').style('opacity', '0');\n    }\n\n    const convexHullSwitch = d3.select('.switch').on('change', () => {\n      if (showConvexHull) d3.select('.hull').style('opacity', '1'); // if (showConvexHull) {\n      //   d3.select(`.hull`).style('opacity', '1');\n      // } else {\n      //   d3.select(`.hull`).remove();\n      //   d3.selectAll(`.hull`).transition().duration(0).style('opacity', '0');\n      // }\n    });\n    setTimeout(() => {\n      d3.select(`.hull`).style('opacity', '0').call(convexHull, 0.25).transition().duration(500).style('opacity', '0');\n    }, 4000);\n  }, [data, value]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    style: {\n      overflow: 'scroll'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"button\",\n      children: \"Click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Show Convex Hull:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      checked: showConvexHull,\n      onChange: () => {\n        setShowConvexHull(!showConvexHull);\n      },\n      label: \"Show Convex Hull\",\n      className: \"switch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tooltip\",\n      style: {\n        position: 'absolute',\n        background: '#e6e6e6',\n        borderRadius: '0.5rem',\n        padding: '0.5rem'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \"svg\",\n      width: width,\n      height: height,\n      children: [/*#__PURE__*/_jsxDEV(\"g\", {\n        transform: \"translate(50, 200)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"x-axis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"y-axis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"x-axis-grid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"y-axis-grid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 9\n      }, this), hulls.map(hull => /*#__PURE__*/_jsxDEV(\"g\", {\n        className: 'hull'\n      }, hull, false, {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: forceUpdate,\n      style: {\n        margin: '1rem'\n      },\n      children: \"Recenter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 511,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GraphLayout, \"iLf7kQLI2NABaxsvhBNeQHn5zeA=\", false, function () {\n  return [useForceUpdate, useD3];\n});\n\n_c = GraphLayout;\nexport default _c2 = /*#__PURE__*/memo(GraphLayout);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GraphLayout\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/davidmunechika/Documents/Code/visual-auditor/src/components/Main/GraphLayout.js"],"names":["useD3","React","memo","d3","Switch","Button","logLossSamples","reverseLogLossSamples","accuracySamples","precisionSamples","commonSamples","commonSamplesSliceline","reverseCommonSamples","GraphLayout","data","degree","metric","model","overperforming","radiusType","edgeFiltering","edgeForce","setDetails","cursorMode","algorithm","margin","top","right","bottom","left","value","setValue","useState","showConvexHull","setShowConvexHull","hulls","Array","from","keys","useForceUpdate","forceUpdate","width","height","features","groupings","samples","matches","forEach","obj","classifiers","str","slice","indexOf","temp","substring","push","includes","length","join","groupingsArray","Object","map","key","sort","a","b","topGroupings","xCenter","yCenter","xTickDistance","yTickDistance","i","x","scaleBand","domain","rangeRound","padding","xAxis","g","attr","call","axisBottom","tickSizeOuter","selectAll","style","yAxis","axisLeft","xAxisGrid","tickSizeInner","yAxisGrid","nodes","radius","Math","log","size","sqrt","category","xFeature","yFeature","countCommonSamples","slice1","slice2","arr1","arr2","random","filter","sample","links","common","j","count","source","target","sliceSource","sliceTarget","graph","clamp","lo","hi","ref","svg","select","link","classed","node","d","interpolateBlues","abs","interpolateReds","fx","undefined","on","event","transition","duration","min","max","y","html","toFixed","round","click","simulation","forceSimulation","force","forceManyBody","strength","forceX","forceY","forceLink","forceCollide","tick","drag","dragstart","dragged","pow","__data__","interpolateGreys","similarSlices","fy","alpha","restart","convexHull","opacity","colors","vertices","split","hull","polygonHull","line","curve","curveLinearClosed","append","convexHullSwitch","setTimeout","overflow","position","background","borderRadius"],"mappings":"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","sourcesContent":["import { useD3 } from '../../hooks/useD3';\nimport React, { memo } from 'react';\nimport * as d3 from 'd3';\nimport Switch from '@mui/material/Switch';\nimport './GraphLayout.css';\nimport Button from '@mui/material/Button';\nimport logLossSamples from '../../data/loglosssamples.json';\nimport reverseLogLossSamples from '../../data/reverseloglosssamples.json';\nimport accuracySamples from '../../data/accuracysamples.json';\nimport precisionSamples from '../../data/precisionsamples.json';\nimport commonSamples from '../../data/commonSamples.json';\nimport commonSamplesSliceline from '../../data/commonSamplesSliceline.json';\nimport reverseCommonSamples from '../../data/reverseCommonSamples.json';\n\nfunction GraphLayout({\n  data,\n  degree,\n  metric,\n  model,\n  overperforming,\n  radiusType,\n  edgeFiltering,\n  edgeForce,\n  setDetails,\n  cursorMode,\n  algorithm,\n}) {\n  const margin = { top: 30, right: 30, bottom: 60, left: 85 };\n  const [value, setValue] = React.useState(0);\n  const [showConvexHull, setShowConvexHull] = React.useState(false);\n  const hulls = Array.from(Array(100).keys());\n  function useForceUpdate() {\n    return () => setValue((value) => value + 1); // update the state to force render\n  }\n  const forceUpdate = useForceUpdate();\n\n  const width = 800;\n  const height = 800;\n\n  const features = [];\n  const groupings = {};\n\n  let samples;\n  let matches = {};\n\n  switch (metric) {\n    case 'Log Loss':\n      if (overperforming) {\n        samples = reverseLogLossSamples;\n        matches = reverseCommonSamples;\n      } else {\n        if (algorithm === 'sliceline') {\n          matches = commonSamplesSliceline;\n        } else {\n          matches = commonSamples;\n        }\n        samples = logLossSamples;\n      }\n      break;\n    case 'Accuracy':\n      if (overperforming) samples = accuracySamples;\n      else samples = accuracySamples;\n      break;\n    case 'Precision':\n      if (overperforming) samples = precisionSamples;\n      else samples = precisionSamples;\n      break;\n    default:\n      if (overperforming) samples = reverseLogLossSamples;\n      else samples = logLossSamples;\n      break;\n  }\n\n  data.forEach((obj) => {\n    obj.classifiers = [];\n    let str = obj.slice;\n    while (str.indexOf(':') !== -1) {\n      let temp = str.substring(0, str.indexOf(':'));\n      obj.classifiers.push(temp);\n      if (!features.includes(temp)) features.push(temp);\n      if (degree === obj.classifiers.length) {\n        if (groupings[obj.classifiers.join(', ')])\n          groupings[obj.classifiers.join(', ')]++;\n        else groupings[obj.classifiers.join(', ')] = 1;\n      }\n      if (str.indexOf(',') !== -1) {\n        str = str.substring(str.indexOf(',') + 2);\n      } else {\n        str = '';\n      }\n    }\n  });\n\n  const groupingsArray = Object.keys(groupings)\n    .map((key) => [key, groupings[key]])\n    .sort((a, b) => b[1] - a[1]);\n\n  const topGroupings = groupingsArray.slice(0, 15);\n\n  const xCenter = [];\n  const yCenter = [];\n\n  const xTickDistance =\n    (width - margin.left - margin.right) / (features.length + 1);\n  const yTickDistance =\n    (height - margin.top - margin.bottom) / (features.length + 2);\n\n  for (let i = 0; i < features.length; i++) {\n    xCenter.push(margin.left + (i + 1) * xTickDistance);\n    yCenter.push(2 * margin.top + (i + 1) * yTickDistance);\n  }\n\n  const x = d3\n    .scaleBand()\n    .domain(features)\n    .rangeRound([margin.left, width - margin.right])\n    .padding(0.1);\n\n  const xAxis = (g) =>\n    g\n      .attr('transform', `translate(0,${height - margin.bottom})`)\n      .call(d3.axisBottom(x).tickSizeOuter(0))\n      .selectAll('text')\n      .attr('transform', 'translate(-10,0)rotate(-45)')\n      .style('text-anchor', 'end');\n\n  const yAxis = (g) =>\n    g\n      .attr('transform', `translate(${margin.left},${30 - margin.bottom})`)\n      .call(d3.axisLeft(x).tickSizeOuter(0))\n      .selectAll('text')\n      .style('text-anchor', 'end');\n\n  const xAxisGrid = (g) =>\n    g\n      .attr('transform', `translate(0,${height - margin.bottom})`)\n      .call(\n        d3\n          .axisBottom(x)\n          .tickSizeOuter(0)\n          .tickSizeInner(-height - margin.top + 2 * margin.bottom)\n      )\n      .style('opacity', 0.1)\n      .selectAll('text')\n      .style('display', 'none');\n  const yAxisGrid = (g) =>\n    g\n      .attr('transform', `translate(${margin.left},${30 - margin.bottom})`)\n      .call(\n        d3\n          .axisLeft(x)\n          .tickSizeOuter(0)\n          .tickSizeInner(-width - margin.right + 2 * margin.left)\n      )\n      .style('opacity', 0.1)\n      .selectAll('text')\n      .style('display', 'none');\n\n  const nodes = data.map((obj) => {\n    return {\n      radius: radiusType === 'log' ? Math.log(obj.size) : Math.sqrt(obj.size),\n      category: obj.degree,\n      xFeature: obj.classifiers[0],\n      yFeature: obj.classifiers[1] ?? obj.classifiers[0],\n      slice: obj.slice,\n      size: obj.size,\n      metric: obj.metric,\n      classifiers: obj.classifiers,\n    };\n  });\n\n  function countCommonSamples(slice1, slice2) {\n    let arr1 = samples[slice1];\n    let arr2 = samples[slice2];\n    if (!arr1 || !arr2) return 0;\n    arr1 = arr1.sort((a, b) => 0.5 - Math.random()).slice(0, 2000);\n    return arr1.filter((sample) => arr2.includes(sample)).length;\n  }\n\n  let links = [];\n  let common = {};\n\n  for (let i = 0; i < nodes.length; i++) {\n    for (let j = i + 1; j < nodes.length; j++) {\n      const count = matches[nodes[i].slice + '-' + nodes[j].slice];\n      // const count = countCommonSamples(nodes[i].slice, nodes[j].slice);\n      // common[nodes[i].slice + '-' + nodes[j].slice] = count;\n      // common[nodes[j].slice + '-' + nodes[i].slice] = count;\n      if (count > edgeFiltering) {\n        links.push({\n          source: i,\n          target: j,\n          sliceSource: nodes[i].slice,\n          sliceTarget: nodes[j].slice,\n          count: count,\n        });\n      }\n    }\n  }\n\n  // console.log(JSON.stringify(common));\n\n  // const links = [];\n  // console.log(JSON.stringify(links));\n\n  const graph = {\n    nodes: nodes,\n    links: links,\n  };\n\n  function clamp(x, lo, hi) {\n    return x < lo ? lo : x > hi ? hi : x;\n  }\n\n  const ref = useD3(\n    (svg) => {\n      svg = d3.select('.svg').style('width', '60%').style('height', '60%');\n      let link = svg\n        .selectAll('.link')\n        .attr('class', 'link')\n        .data(graph.links)\n        .join('line')\n        .classed('link', true);\n      const node = svg\n        .selectAll('.node')\n        .data(graph.nodes)\n        .join('circle')\n        .attr('r', function (d) {\n          return d.radius;\n        })\n        .style('fill', function (d) {\n          if (overperforming)\n            return d3.interpolateBlues(Math.abs((d.metric - model) / model));\n          return d3.interpolateReds(Math.abs((d.metric - model) / model));\n        })\n        .classed('node', true)\n        .classed('fixed', (d) => d.fx !== undefined)\n        .on('mouseover', function (event, d) {\n          cursorMode === 'select'\n            ? d3\n                .select(this)\n                .attr('r', d.radius)\n                .style('opacity', '0.7')\n                .style('cursor', 'pointer')\n            : d3\n                .select(this)\n                .attr('r', d.radius)\n                .style('opacity', '0.7')\n                .style('cursor', 'grab');\n          d3.select('.tooltip')\n            .transition()\n            .duration(200)\n            .style('opacity', 0.9)\n            .style(\n              'left',\n              Math.min(Math.max(200, d.x), width - 200) + 100 + 'px'\n            )\n            .style('top', Math.min(height - 200, Math.max(0, d.y)) + 'px');\n          d3.select('.tooltip').html(\n            '<strong>Slice Description: </strong>' +\n              '<br><div style={{margin: \"1rem\"}}> </div>' +\n              d.slice +\n              '<br>' +\n              '<strong>Size: </strong>' +\n              '<br>' +\n              d.size +\n              ' samples' +\n              '<br>' +\n              '<strong>' +\n              metric +\n              ': ' +\n              '</strong>' +\n              '<br>' +\n              d.metric.toFixed(2) +\n              '<br>' +\n              `(${Math.round(((d.metric - model) / model) * 100)}% difference)`\n          );\n        })\n        .on('mouseout', function (d, i) {\n          d3.select(this).attr('r', i.radius).style('opacity', '1');\n          d3.select('.tooltip')\n            .transition()\n            .style('opacity', 0)\n            .style('left', width + 'px')\n            .style('top', 0 + 'px');\n        })\n        .on('click', click);\n\n      const simulation = d3\n        .forceSimulation()\n        .nodes(graph.nodes)\n        .force('charge', d3.forceManyBody().strength(-5))\n        // .force('center', d3.forceCenter(width / 2, height / 2).strength(0.1))\n        .force(\n          'x',\n          d3.forceX().x(function (d) {\n            return xCenter[features.indexOf(d.xFeature)];\n          })\n        )\n        .force(\n          'y',\n          d3.forceY().y(function (d) {\n            if (degree > 1) {\n              return yCenter[features.indexOf(d.yFeature)];\n            } else {\n              return height / 2;\n            }\n          })\n        )\n        .force(\n          'link',\n          d3.forceLink(graph.links).strength((d) => {\n            return (d.count / 10000) * edgeForce;\n          })\n        )\n        .force(\n          'collision',\n          d3.forceCollide().radius(function (d) {\n            return d.radius;\n          })\n        )\n        .on('tick', tick);\n      if (cursorMode === 'drag') {\n        const drag = d3.drag().on('start', dragstart).on('drag', dragged);\n\n        node.call(drag).on('click', click);\n      }\n\n      function tick() {\n        link\n          .attr('x1', (d) =>\n            Math.max(Math.min(d.source.x, width), d.source.radius + 100)\n          )\n          .attr('y1', (d) =>\n            Math.max(Math.min(d.source.y, height - 75), d.source.radius)\n          )\n          .attr('x2', (d) =>\n            Math.max(Math.min(d.target.x, width), d.target.radius + 100)\n          )\n          .attr('y2', (d) =>\n            Math.max(Math.min(d.target.y, height - 75), d.target.radius)\n          )\n          .style('stroke-width', (d) =>\n            Math.min(\n              Math.pow(d.count / 2000, 2) * edgeForce,\n              Math.pow(d.count / 2000, 2) * 3\n            )\n          );\n        node\n          .attr('cx', (d) => Math.max(Math.min(d.x, width), d.radius + 100))\n          .attr('cy', (d) => Math.max(Math.min(d.y, height - 75), d.radius));\n      }\n\n      function click(event, d) {\n        if (cursorMode === 'select') {\n          node.style('fill', function (d) {\n            if (event.target.__data__ === d) {\n              return d3.interpolateGreys(0.5);\n            }\n            if (overperforming)\n              return d3.interpolateBlues(Math.abs((d.metric - model) / model));\n            return d3.interpolateReds(Math.abs((d.metric - model) / model));\n          });\n          setDetails({\n            slice: d.slice,\n            size: d.size,\n            metric: d.metric,\n            similarSlices: links\n              .sort((a, b) => b.count - a.count)\n              .map((link) => {\n                if (\n                  link.count > edgeFiltering &&\n                  link.sliceSource === d.slice\n                ) {\n                  return link.sliceTarget;\n                } else if (\n                  link.count > edgeFiltering &&\n                  link.sliceTarget === d.slice\n                ) {\n                  return link.sliceSource;\n                }\n                return undefined;\n              })\n              .filter((link) => link !== undefined)\n              .slice(0, 10),\n          });\n        } else {\n          delete d.fx;\n          delete d.fy;\n          d3.select(this).classed('fixed', false);\n          d3.select(this).style('fill', () => {\n            if (overperforming)\n              return d3.interpolateBlues(Math.abs((d.metric - model) / model));\n            return d3.interpolateReds(Math.abs((d.metric - model) / model));\n          });\n          simulation.alpha(1).restart();\n        }\n      }\n\n      function dragstart(event, d) {\n        d3.select(this).classed('fixed', true);\n        d3.select(this).style('fill', 'lightgray');\n        setDetails({\n          slice: d.slice,\n          size: d.size,\n          metric: d.metric,\n          similarSlices: links\n            .sort((a, b) => b.count - a.count)\n            .map((link) => {\n              if (link.count > edgeFiltering && link.sliceSource === d.slice) {\n                return link.sliceTarget;\n              } else if (\n                link.count > edgeFiltering &&\n                link.sliceTarget === d.slice\n              ) {\n                return link.sliceSource;\n              }\n              return undefined;\n            })\n            .filter((link) => link !== undefined)\n            .slice(0, 10),\n        });\n      }\n\n      function dragged(event, d) {\n        d.fx = clamp(event.x, 0, width);\n        d.fy = clamp(event.y, 0, height);\n        simulation.alpha(1).restart();\n      }\n\n      const convexHull = (g, opacity) => {\n        const colors = [\n          'gray',\n          'green',\n          'yellow',\n          'black',\n          'purple',\n          'pink',\n          'red',\n          'orange',\n          'brown',\n          'blue',\n          'cyan',\n          'magenta',\n          'lime',\n          'navy',\n          'olive',\n          'teal',\n          'violet',\n          'wheat',\n        ];\n        let vertices = [];\n\n        for (let i = 0; i < topGroupings.length; i++) {\n          vertices = [];\n          for (let j = 0; j < nodes.length; j++) {\n            if (\n              nodes[j].xFeature === topGroupings[i][0].split(', ')[0] &&\n              (degree < 2 ||\n                nodes[j].yFeature === topGroupings[i][0].split(', ')[1])\n            ) {\n              if (degree < 2) {\n                vertices.push([nodes[j].x, height / 2]);\n              } else {\n                vertices.push([nodes[j].x, nodes[j].y]);\n              }\n            }\n          }\n          const hull = d3.polygonHull(vertices);\n          const line = d3.line().curve(d3.curveLinearClosed);\n          if (!hull) return;\n          g.append('path')\n            .attr('class', `path${degree}`)\n            .attr('d', line(hull))\n            .attr('fill', colors[0])\n            .attr('stroke', colors[0])\n            .attr('opacity', opacity);\n        }\n      };\n\n      svg.select('.x-axis-grid').call(xAxisGrid);\n      svg.select('.y-axis-grid').call(yAxisGrid);\n      svg.select('.x-axis').call(xAxis);\n      if (degree >= 2) {\n        svg.select('.y-axis').call(yAxis).style('opacity', '1');\n      } else {\n        svg.select('.y-axis').style('opacity', '0');\n      }\n      const convexHullSwitch = d3.select('.switch').on('change', () => {\n        if (showConvexHull) d3.select('.hull').style('opacity', '1');\n        // if (showConvexHull) {\n        //   d3.select(`.hull`).style('opacity', '1');\n        // } else {\n        //   d3.select(`.hull`).remove();\n        //   d3.selectAll(`.hull`).transition().duration(0).style('opacity', '0');\n        // }\n      });\n      setTimeout(() => {\n        d3.select(`.hull`)\n          .style('opacity', '0')\n          .call(convexHull, 0.25)\n          .transition()\n          .duration(500)\n          .style('opacity', '0');\n      }, 4000);\n    },\n    [data, value]\n  );\n\n  return (\n    <div className='container' style={{ overflow: 'scroll' }}>\n      <button type='button' className='button'>\n        Click me\n      </button>\n      <h2>Show Convex Hull:</h2>\n      <Switch\n        checked={showConvexHull}\n        onChange={() => {\n          setShowConvexHull(!showConvexHull);\n        }}\n        label='Show Convex Hull'\n        className='switch'\n      />\n      <div\n        className='tooltip'\n        style={{\n          position: 'absolute',\n          background: '#e6e6e6',\n          borderRadius: '0.5rem',\n          padding: '0.5rem',\n        }}\n      ></div>\n      <svg className='svg' width={width} height={height}>\n        <g transform='translate(50, 200)'></g>\n        <g className='x-axis' />\n        <g className='y-axis' />\n        <g className='x-axis-grid' />\n        <g className='y-axis-grid' />\n        {hulls.map((hull) => (\n          <g className={'hull'} key={hull} />\n        ))}\n      </svg>\n      <br />\n      <Button\n        variant='outlined'\n        onClick={forceUpdate}\n        style={{ margin: '1rem' }}\n      >\n        Recenter\n      </Button>\n    </div>\n  );\n}\n\nexport default memo(GraphLayout);\n"]},"metadata":{},"sourceType":"module"}