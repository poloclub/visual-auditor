{"ast":null,"code":"var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\nexport default function ticks(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    let r0 = Math.round(start / step),\n        r1 = Math.round(stop / step);\n    if (r0 * step < start) ++r0;\n    if (r1 * step > stop) --r1;\n    ticks = new Array(n = r1 - r0 + 1);\n\n    while (++i < n) ticks[i] = (r0 + i) * step;\n  } else {\n    step = -step;\n    let r0 = Math.round(start * step),\n        r1 = Math.round(stop * step);\n    if (r0 / step < start) ++r0;\n    if (r1 / step > stop) --r1;\n    ticks = new Array(n = r1 - r0 + 1);\n\n    while (++i < n) ticks[i] = (r0 + i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n  return ticks;\n}\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0 ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;else if (error >= e5) step1 *= 5;else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}","map":{"version":3,"sources":["/Users/davidmunechika/Documents/Code/Research/visual-auditor/visual-auditor-package/node_modules/d3-array/src/ticks.js"],"names":["e10","Math","sqrt","e5","e2","ticks","start","stop","count","reverse","i","n","step","tickIncrement","isFinite","r0","round","r1","Array","max","power","floor","log","LN10","error","pow","tickStep","step0","abs","step1"],"mappings":"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","sourcesContent":["var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function ticks(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    let r0 = Math.round(start / step), r1 = Math.round(stop / step);\n    if (r0 * step < start) ++r0;\n    if (r1 * step > stop) --r1;\n    ticks = new Array(n = r1 - r0 + 1);\n    while (++i < n) ticks[i] = (r0 + i) * step;\n  } else {\n    step = -step;\n    let r0 = Math.round(start * step), r1 = Math.round(stop * step);\n    if (r0 / step < start) ++r0;\n    if (r1 / step > stop) --r1;\n    ticks = new Array(n = r1 - r0 + 1);\n    while (++i < n) ticks[i] = (r0 + i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n"]},"metadata":{},"sourceType":"module"}