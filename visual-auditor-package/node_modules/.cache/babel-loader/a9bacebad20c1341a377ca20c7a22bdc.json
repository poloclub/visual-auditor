{"ast":null,"code":"var _jsxFileName = \"/Users/davidmunechika/Documents/Code/visual-auditor/src/components/Main/GraphLayout2.js\",\n    _s = $RefreshSig$();\n\nimport { useD3 } from '../../hooks/useD3';\nimport React from 'react';\nimport * as d3 from 'd3';\nimport './GraphLayout.css';\nimport Button from '@mui/material/Button';\nimport logLossSamples from '../../data/loglosssamples.json';\nimport reverseLogLossSamples from '../../data/reverseloglosssamples.json';\nimport accuracySamples from '../../data/accuracysamples.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GraphLayout2({\n  data,\n  degree,\n  metric,\n  model,\n  overperforming,\n  radiusType,\n  edgeFiltering,\n  edgeThickness,\n  edgeForce\n}) {\n  _s();\n\n  const [value, setValue] = React.useState(0); // integer state\n\n  function useForceUpdate() {\n    return () => setValue(value => value + 1); // update the state to force render\n  }\n\n  const forceUpdate = useForceUpdate();\n  const width = 800;\n  const height = 600;\n  const features = [];\n  let samples;\n\n  switch (metric) {\n    case 'log loss':\n      if (overperforming) samples = reverseLogLossSamples;else samples = logLossSamples;\n      break;\n\n    case 'accuracy':\n      if (overperforming) samples = accuracySamples;else samples = accuracySamples;\n      break;\n\n    default:\n      if (overperforming) samples = reverseLogLossSamples;else samples = logLossSamples;\n      break;\n  }\n\n  data.forEach(obj => {\n    obj.classifiers = [];\n    let str = obj.slice;\n\n    while (str.indexOf(':') !== -1) {\n      let temp = str.substring(0, str.indexOf(':'));\n      obj.classifiers.push(temp);\n      if (!features.includes(temp)) features.push(temp);\n\n      if (str.indexOf(',') !== -1) {\n        str = str.substring(str.indexOf(',') + 2);\n      } else {\n        str = '';\n      }\n    }\n  });\n  const xCenter = [];\n  const yCenter = [];\n\n  for (let i = 0; i < features.length; i++) {\n    xCenter.push((width - 200) / features.length * i + 100);\n    yCenter.push((height - 200) / features.length * i + 100);\n  }\n\n  const nodes = data.map(obj => {\n    var _obj$classifiers$;\n\n    return {\n      radius: radiusType === 'log' ? Math.log(obj.size) : Math.sqrt(obj.size),\n      category: obj.degree,\n      xFeature: obj.classifiers[0],\n      yFeature: (_obj$classifiers$ = obj.classifiers[1]) !== null && _obj$classifiers$ !== void 0 ? _obj$classifiers$ : obj.classifiers[0],\n      slice: obj.slice,\n      size: obj.size,\n      metric: obj.metric,\n      classifiers: obj.classifiers\n    };\n  });\n\n  function countCommonSamples(slice1, slice2) {\n    let arr1 = samples[slice1];\n    let arr2 = samples[slice2];\n    if (!arr1 || !arr2) return 0;\n    console.log(arr1.length);\n    arr1 = arr1.sort().slice(0, 1000);\n    arr2 = arr2.sort().slice(0, 1000);\n    return arr1.filter(sample => arr2.includes(sample)).length;\n  }\n\n  const links = [];\n\n  for (let i = 0; i < nodes.length; i++) {\n    for (let j = i + 1; j < nodes.length; j++) {\n      const count = countCommonSamples(nodes[i].slice, nodes[j].slice);\n\n      if (count > edgeFiltering) {\n        links.push({\n          source: i,\n          target: j,\n          count: count\n        });\n      }\n    }\n  }\n\n  const graph = {\n    nodes: nodes,\n    links: links\n  };\n\n  function clamp(x, lo, hi) {\n    return x < lo ? lo : x > hi ? hi : x;\n  }\n\n  const ref = useD3(svg => {\n    svg = d3.select('.svg').attr('viewBox', '0,0,100vh,100vh').style('width', '60%').style('height', '60%');\n    const link = svg.selectAll('.link').data(graph.links).join('line').classed('link', true);\n    const node = svg.selectAll('.node').data(graph.nodes).join('circle').attr('r', function (d) {\n      return d.radius;\n    }).style('fill', function (d) {\n      if (overperforming) return d3.interpolateBlues(Math.abs((d.metric - model) / model));\n      return d3.interpolateReds(Math.abs((d.metric - model) / model));\n    }).classed('node', true).classed('fixed', d => d.fx !== undefined).on('mouseover', function (event, d) {\n      d3.select(this).attr('r', d.radius).style('opacity', '0.7');\n      d3.select('.tooltip').transition().duration(200).style('opacity', 0.9).style('left', Math.min(Math.max(0, d.x), width) + 'px').style('top', Math.min(height, Math.max(0, d.y)) + 'px');\n      d3.select('.tooltip').html('<strong>Slice Description: </strong>' + '<br><div style={{margin: \"1rem\"}}> </div>' + d.slice + '<br>' + '<strong>Size: </strong>' + '<br>' + d.size + ' samples' + '<br>' + '<strong>' + metric + ': ' + '</strong>' + '<br>' + d.metric.toFixed(2) + '<br>' + `(${Math.round((d.metric - model) / model * 100)}% difference)`);\n    }).on('mouseout', function (d, i) {\n      d3.select(this).attr('r', i.radius).style('opacity', '1');\n      d3.select('.tooltip').transition().style('opacity', 0).style('left', 0 + 'px').style('top', 0 + 'px');\n    });\n    const simulation = d3.forceSimulation().nodes(graph.nodes).force('charge', d3.forceManyBody().strength(-50)).force('center', d3.forceCenter(width / 2, height / 2).strength(0.1)) // .force(\n    //   'x',\n    //   d3.forceX().x(function (d) {\n    //     return xCenter[features.indexOf(d.xFeature)];\n    //   })\n    // )\n    // .force(\n    //   'y',\n    //   d3.forceY().y(function (d) {\n    //     if (degree > 1) {\n    //       return yCenter[features.indexOf(d.yFeature)];\n    //     } else {\n    //       return height / 4;\n    //     }\n    //   })\n    // )\n    .force('link', d3.forceLink(graph.links).strength(d => {\n      // console.log(d.count);\n      // Math.log(d.count / 1000);\n      return d.count / 10000 * edgeForce;\n    })).force('collision', d3.forceCollide().radius(function (d) {\n      return d.radius;\n    })).on('tick', tick);\n    const drag = d3.drag().on('start', dragstart).on('drag', dragged);\n    node.call(drag).on('click', click);\n\n    function tick() {\n      link.attr('x1', d => d.source.x).attr('y1', d => d.source.y).attr('x2', d => d.target.x).attr('y2', d => d.target.y).style('stroke-width', d => Math.pow(d.count / 1000, 2) * edgeThickness);\n      node.attr('cx', d => Math.max(Math.min(d.x, width), d.radius)).attr('cy', d => Math.max(Math.min(d.y, height), d.radius));\n    }\n\n    function click(event, d) {\n      delete d.fx;\n      delete d.fy;\n      d3.select(this).classed('fixed', false);\n      d3.select(this).style('fill', () => {\n        if (overperforming) return d3.interpolateBlues(Math.abs((d.metric - model) / model));\n        return d3.interpolateReds(Math.abs((d.metric - model) / model));\n      });\n      simulation.alpha(1).restart();\n    }\n\n    function dragstart() {\n      d3.select(this).classed('fixed', true);\n      d3.select(this).style('fill', 'lightgray');\n    }\n\n    function dragged(event, d) {\n      d.fx = clamp(event.x, 0, width);\n      d.fy = clamp(event.y, 0, height);\n      simulation.alpha(1).restart();\n    }\n\n    d3.select('svg g').remove();\n  }, [data, value]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    style: {\n      overflow: 'scroll'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tooltip\",\n      style: {\n        position: 'absolute',\n        background: '#e6e6e6',\n        borderRadius: '0.5rem',\n        padding: '0.5rem'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \"svg\",\n      width: width,\n      height: height,\n      children: /*#__PURE__*/_jsxDEV(\"g\", {\n        transform: \"translate(50, 200)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: forceUpdate,\n      style: {\n        margin: '1rem'\n      },\n      children: \"Recenter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 263,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GraphLayout2, \"TYjgd9V9bUzWi+LiMKDxLZUTTok=\", false, function () {\n  return [useForceUpdate, useD3];\n});\n\n_c = GraphLayout2;\nexport default GraphLayout2;\n\nvar _c;\n\n$RefreshReg$(_c, \"GraphLayout2\");","map":{"version":3,"sources":["/Users/davidmunechika/Documents/Code/visual-auditor/src/components/Main/GraphLayout2.js"],"names":["useD3","React","d3","Button","logLossSamples","reverseLogLossSamples","accuracySamples","GraphLayout2","data","degree","metric","model","overperforming","radiusType","edgeFiltering","edgeThickness","edgeForce","value","setValue","useState","useForceUpdate","forceUpdate","width","height","features","samples","forEach","obj","classifiers","str","slice","indexOf","temp","substring","push","includes","xCenter","yCenter","i","length","nodes","map","radius","Math","log","size","sqrt","category","xFeature","yFeature","countCommonSamples","slice1","slice2","arr1","arr2","console","sort","filter","sample","links","j","count","source","target","graph","clamp","x","lo","hi","ref","svg","select","attr","style","link","selectAll","join","classed","node","d","interpolateBlues","abs","interpolateReds","fx","undefined","on","event","transition","duration","min","max","y","html","toFixed","round","simulation","forceSimulation","force","forceManyBody","strength","forceCenter","forceLink","forceCollide","tick","drag","dragstart","dragged","call","click","pow","fy","alpha","restart","remove","overflow","position","background","borderRadius","padding","margin"],"mappings":"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","sourcesContent":["import { useD3 } from '../../hooks/useD3';\nimport React from 'react';\nimport * as d3 from 'd3';\nimport './GraphLayout.css';\nimport Button from '@mui/material/Button';\nimport logLossSamples from '../../data/loglosssamples.json';\nimport reverseLogLossSamples from '../../data/reverseloglosssamples.json';\nimport accuracySamples from '../../data/accuracysamples.json';\n\nfunction GraphLayout2({\n  data,\n  degree,\n  metric,\n  model,\n  overperforming,\n  radiusType,\n  edgeFiltering,\n  edgeThickness,\n  edgeForce,\n}) {\n  const [value, setValue] = React.useState(0); // integer state\n  function useForceUpdate() {\n    return () => setValue((value) => value + 1); // update the state to force render\n  }\n  const forceUpdate = useForceUpdate();\n\n  const width = 800;\n  const height = 600;\n\n  const features = [];\n\n  let samples;\n\n  switch (metric) {\n    case 'log loss':\n      if (overperforming) samples = reverseLogLossSamples;\n      else samples = logLossSamples;\n      break;\n    case 'accuracy':\n      if (overperforming) samples = accuracySamples;\n      else samples = accuracySamples;\n      break;\n    default:\n      if (overperforming) samples = reverseLogLossSamples;\n      else samples = logLossSamples;\n      break;\n  }\n\n  data.forEach((obj) => {\n    obj.classifiers = [];\n    let str = obj.slice;\n    while (str.indexOf(':') !== -1) {\n      let temp = str.substring(0, str.indexOf(':'));\n      obj.classifiers.push(temp);\n      if (!features.includes(temp)) features.push(temp);\n      if (str.indexOf(',') !== -1) {\n        str = str.substring(str.indexOf(',') + 2);\n      } else {\n        str = '';\n      }\n    }\n  });\n\n  const xCenter = [];\n  const yCenter = [];\n\n  for (let i = 0; i < features.length; i++) {\n    xCenter.push(((width - 200) / features.length) * i + 100);\n    yCenter.push(((height - 200) / features.length) * i + 100);\n  }\n\n  const nodes = data.map((obj) => {\n    return {\n      radius: radiusType === 'log' ? Math.log(obj.size) : Math.sqrt(obj.size),\n      category: obj.degree,\n      xFeature: obj.classifiers[0],\n      yFeature: obj.classifiers[1] ?? obj.classifiers[0],\n      slice: obj.slice,\n      size: obj.size,\n      metric: obj.metric,\n      classifiers: obj.classifiers,\n    };\n  });\n\n  function countCommonSamples(slice1, slice2) {\n    let arr1 = samples[slice1];\n    let arr2 = samples[slice2];\n    if (!arr1 || !arr2) return 0;\n    console.log(arr1.length);\n    arr1 = arr1.sort().slice(0, 1000);\n    arr2 = arr2.sort().slice(0, 1000);\n    return arr1.filter((sample) => arr2.includes(sample)).length;\n  }\n\n  const links = [];\n\n  for (let i = 0; i < nodes.length; i++) {\n    for (let j = i + 1; j < nodes.length; j++) {\n      const count = countCommonSamples(nodes[i].slice, nodes[j].slice);\n      if (count > edgeFiltering) {\n        links.push({ source: i, target: j, count: count });\n      }\n    }\n  }\n\n  const graph = {\n    nodes: nodes,\n    links: links,\n  };\n\n  function clamp(x, lo, hi) {\n    return x < lo ? lo : x > hi ? hi : x;\n  }\n\n  const ref = useD3(\n    (svg) => {\n      svg = d3\n        .select('.svg')\n        .attr('viewBox', '0,0,100vh,100vh')\n        .style('width', '60%')\n        .style('height', '60%');\n      const link = svg\n        .selectAll('.link')\n        .data(graph.links)\n        .join('line')\n        .classed('link', true);\n      const node = svg\n        .selectAll('.node')\n        .data(graph.nodes)\n        .join('circle')\n        .attr('r', function (d) {\n          return d.radius;\n        })\n        .style('fill', function (d) {\n          if (overperforming)\n            return d3.interpolateBlues(Math.abs((d.metric - model) / model));\n          return d3.interpolateReds(Math.abs((d.metric - model) / model));\n        })\n        .classed('node', true)\n        .classed('fixed', (d) => d.fx !== undefined)\n        .on('mouseover', function (event, d) {\n          d3.select(this).attr('r', d.radius).style('opacity', '0.7');\n          d3.select('.tooltip')\n            .transition()\n            .duration(200)\n            .style('opacity', 0.9)\n            .style('left', Math.min(Math.max(0, d.x), width) + 'px')\n            .style('top', Math.min(height, Math.max(0, d.y)) + 'px');\n          d3.select('.tooltip').html(\n            '<strong>Slice Description: </strong>' +\n              '<br><div style={{margin: \"1rem\"}}> </div>' +\n              d.slice +\n              '<br>' +\n              '<strong>Size: </strong>' +\n              '<br>' +\n              d.size +\n              ' samples' +\n              '<br>' +\n              '<strong>' +\n              metric +\n              ': ' +\n              '</strong>' +\n              '<br>' +\n              d.metric.toFixed(2) +\n              '<br>' +\n              `(${Math.round(((d.metric - model) / model) * 100)}% difference)`\n          );\n        })\n        .on('mouseout', function (d, i) {\n          d3.select(this).attr('r', i.radius).style('opacity', '1');\n          d3.select('.tooltip')\n            .transition()\n            .style('opacity', 0)\n            .style('left', 0 + 'px')\n            .style('top', 0 + 'px');\n        });\n\n      const simulation = d3\n        .forceSimulation()\n        .nodes(graph.nodes)\n        .force('charge', d3.forceManyBody().strength(-50))\n        .force('center', d3.forceCenter(width / 2, height / 2).strength(0.1))\n        // .force(\n        //   'x',\n        //   d3.forceX().x(function (d) {\n        //     return xCenter[features.indexOf(d.xFeature)];\n        //   })\n        // )\n        // .force(\n        //   'y',\n        //   d3.forceY().y(function (d) {\n        //     if (degree > 1) {\n        //       return yCenter[features.indexOf(d.yFeature)];\n        //     } else {\n        //       return height / 4;\n        //     }\n        //   })\n        // )\n        .force(\n          'link',\n          d3.forceLink(graph.links).strength((d) => {\n            // console.log(d.count);\n            // Math.log(d.count / 1000);\n            return (d.count / 10000) * edgeForce;\n          })\n        )\n        .force(\n          'collision',\n          d3.forceCollide().radius(function (d) {\n            return d.radius;\n          })\n        )\n        .on('tick', tick);\n\n      const drag = d3.drag().on('start', dragstart).on('drag', dragged);\n\n      node.call(drag).on('click', click);\n\n      function tick() {\n        link\n          .attr('x1', (d) => d.source.x)\n          .attr('y1', (d) => d.source.y)\n          .attr('x2', (d) => d.target.x)\n          .attr('y2', (d) => d.target.y)\n          .style(\n            'stroke-width',\n            (d) => Math.pow(d.count / 1000, 2) * edgeThickness\n          );\n        node\n          .attr('cx', (d) => Math.max(Math.min(d.x, width), d.radius))\n          .attr('cy', (d) => Math.max(Math.min(d.y, height), d.radius));\n      }\n\n      function click(event, d) {\n        delete d.fx;\n        delete d.fy;\n        d3.select(this).classed('fixed', false);\n        d3.select(this).style('fill', () => {\n          if (overperforming)\n            return d3.interpolateBlues(Math.abs((d.metric - model) / model));\n          return d3.interpolateReds(Math.abs((d.metric - model) / model));\n        });\n        simulation.alpha(1).restart();\n      }\n\n      function dragstart() {\n        d3.select(this).classed('fixed', true);\n        d3.select(this).style('fill', 'lightgray');\n      }\n\n      function dragged(event, d) {\n        d.fx = clamp(event.x, 0, width);\n        d.fy = clamp(event.y, 0, height);\n        simulation.alpha(1).restart();\n      }\n\n      d3.select('svg g').remove();\n    },\n    [data, value]\n  );\n\n  return (\n    <div className='container' style={{ overflow: 'scroll' }}>\n      <div\n        className='tooltip'\n        style={{\n          position: 'absolute',\n          background: '#e6e6e6',\n          borderRadius: '0.5rem',\n          padding: '0.5rem',\n        }}\n      ></div>\n      <svg className='svg' width={width} height={height}>\n        <g transform='translate(50, 200)'></g>\n      </svg>\n      <br />\n      <Button\n        variant='outlined'\n        onClick={forceUpdate}\n        style={{ margin: '1rem' }}\n      >\n        Recenter\n      </Button>\n    </div>\n  );\n}\n\nexport default GraphLayout2;\n"]},"metadata":{},"sourceType":"module"}