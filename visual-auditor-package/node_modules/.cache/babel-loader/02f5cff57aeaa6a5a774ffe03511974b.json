{"ast":null,"code":"import { Transition, newId } from \"../transition/index.js\";\nimport schedule from \"../transition/schedule.js\";\nimport { easeCubicInOut } from \"d3-ease\";\nimport { now } from \"d3-timer\";\nvar defaultTiming = {\n  time: null,\n  // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      throw new Error(\"transition \".concat(id, \" not found\"));\n    }\n  }\n\n  return timing;\n}\n\nexport default function (name) {\n  var id, timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}","map":{"version":3,"sources":["/Users/davidmunechika/Documents/Code/Research/visual-auditor/visual-auditor-package/node_modules/d3-transition/src/selection/transition.js"],"names":["Transition","newId","schedule","easeCubicInOut","now","defaultTiming","time","delay","duration","ease","inherit","node","id","timing","__transition","parentNode","Error","name","_id","_name","groups","_groups","m","length","j","group","n","i","_parents"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,KAApB,QAAgC,wBAAhC;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAAQC,cAAR,QAA6B,SAA7B;AACA,SAAQC,GAAR,QAAkB,UAAlB;AAEA,IAAIC,aAAa,GAAG;AAClBC,EAAAA,IAAI,EAAE,IADY;AACN;AACZC,EAAAA,KAAK,EAAE,CAFW;AAGlBC,EAAAA,QAAQ,EAAE,GAHQ;AAIlBC,EAAAA,IAAI,EAAEN;AAJY,CAApB;;AAOA,SAASO,OAAT,CAAiBC,IAAjB,EAAuBC,EAAvB,EAA2B;AACzB,MAAIC,MAAJ;;AACA,SAAO,EAAEA,MAAM,GAAGF,IAAI,CAACG,YAAhB,KAAiC,EAAED,MAAM,GAAGA,MAAM,CAACD,EAAD,CAAjB,CAAxC,EAAgE;AAC9D,QAAI,EAAED,IAAI,GAAGA,IAAI,CAACI,UAAd,CAAJ,EAA+B;AAC7B,YAAM,IAAIC,KAAJ,sBAAwBJ,EAAxB,gBAAN;AACD;AACF;;AACD,SAAOC,MAAP;AACD;;AAED,eAAe,UAASI,IAAT,EAAe;AAC5B,MAAIL,EAAJ,EACIC,MADJ;;AAGA,MAAII,IAAI,YAAYjB,UAApB,EAAgC;AAC9BY,IAAAA,EAAE,GAAGK,IAAI,CAACC,GAAV,EAAeD,IAAI,GAAGA,IAAI,CAACE,KAA3B;AACD,GAFD,MAEO;AACLP,IAAAA,EAAE,GAAGX,KAAK,EAAV,EAAc,CAACY,MAAM,GAAGR,aAAV,EAAyBC,IAAzB,GAAgCF,GAAG,EAAjD,EAAqDa,IAAI,GAAGA,IAAI,IAAI,IAAR,GAAe,IAAf,GAAsBA,IAAI,GAAG,EAAzF;AACD;;AAED,OAAK,IAAIG,MAAM,GAAG,KAAKC,OAAlB,EAA2BC,CAAC,GAAGF,MAAM,CAACG,MAAtC,EAA8CC,CAAC,GAAG,CAAvD,EAA0DA,CAAC,GAAGF,CAA9D,EAAiE,EAAEE,CAAnE,EAAsE;AACpE,SAAK,IAAIC,KAAK,GAAGL,MAAM,CAACI,CAAD,CAAlB,EAAuBE,CAAC,GAAGD,KAAK,CAACF,MAAjC,EAAyCZ,IAAzC,EAA+CgB,CAAC,GAAG,CAAxD,EAA2DA,CAAC,GAAGD,CAA/D,EAAkE,EAAEC,CAApE,EAAuE;AACrE,UAAIhB,IAAI,GAAGc,KAAK,CAACE,CAAD,CAAhB,EAAqB;AACnBzB,QAAAA,QAAQ,CAACS,IAAD,EAAOM,IAAP,EAAaL,EAAb,EAAiBe,CAAjB,EAAoBF,KAApB,EAA2BZ,MAAM,IAAIH,OAAO,CAACC,IAAD,EAAOC,EAAP,CAA5C,CAAR;AACD;AACF;AACF;;AAED,SAAO,IAAIZ,UAAJ,CAAeoB,MAAf,EAAuB,KAAKQ,QAA5B,EAAsCX,IAAtC,EAA4CL,EAA5C,CAAP;AACD","sourcesContent":["import {Transition, newId} from \"../transition/index.js\";\nimport schedule from \"../transition/schedule.js\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      throw new Error(`transition ${id} not found`);\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n"]},"metadata":{},"sourceType":"module"}