{"ast":null,"code":"export default function variance(values, valueof) {\n  let count = 0;\n  let delta;\n  let mean = 0;\n  let sum = 0;\n\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        delta = value - mean;\n        mean += delta / ++count;\n        sum += delta * (value - mean);\n      }\n    }\n  } else {\n    let index = -1;\n\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        delta = value - mean;\n        mean += delta / ++count;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (count > 1) return sum / (count - 1);\n}","map":{"version":3,"sources":["/Users/davidmunechika/Documents/Code/visual-auditor/node_modules/d3-array/src/variance.js"],"names":["variance","values","valueof","count","delta","mean","sum","undefined","value","index"],"mappings":"AAAA,eAAe,SAASA,QAAT,CAAkBC,MAAlB,EAA0BC,OAA1B,EAAmC;AAChD,MAAIC,KAAK,GAAG,CAAZ;AACA,MAAIC,KAAJ;AACA,MAAIC,IAAI,GAAG,CAAX;AACA,MAAIC,GAAG,GAAG,CAAV;;AACA,MAAIJ,OAAO,KAAKK,SAAhB,EAA2B;AACzB,SAAK,IAAIC,KAAT,IAAkBP,MAAlB,EAA0B;AACxB,UAAIO,KAAK,IAAI,IAAT,IAAiB,CAACA,KAAK,GAAG,CAACA,KAAV,KAAoBA,KAAzC,EAAgD;AAC9CJ,QAAAA,KAAK,GAAGI,KAAK,GAAGH,IAAhB;AACAA,QAAAA,IAAI,IAAID,KAAK,GAAG,EAAED,KAAlB;AACAG,QAAAA,GAAG,IAAIF,KAAK,IAAII,KAAK,GAAGH,IAAZ,CAAZ;AACD;AACF;AACF,GARD,MAQO;AACL,QAAII,KAAK,GAAG,CAAC,CAAb;;AACA,SAAK,IAAID,KAAT,IAAkBP,MAAlB,EAA0B;AACxB,UAAI,CAACO,KAAK,GAAGN,OAAO,CAACM,KAAD,EAAQ,EAAEC,KAAV,EAAiBR,MAAjB,CAAhB,KAA6C,IAA7C,IAAqD,CAACO,KAAK,GAAG,CAACA,KAAV,KAAoBA,KAA7E,EAAoF;AAClFJ,QAAAA,KAAK,GAAGI,KAAK,GAAGH,IAAhB;AACAA,QAAAA,IAAI,IAAID,KAAK,GAAG,EAAED,KAAlB;AACAG,QAAAA,GAAG,IAAIF,KAAK,IAAII,KAAK,GAAGH,IAAZ,CAAZ;AACD;AACF;AACF;;AACD,MAAIF,KAAK,GAAG,CAAZ,EAAe,OAAOG,GAAG,IAAIH,KAAK,GAAG,CAAZ,CAAV;AAChB","sourcesContent":["export default function variance(values, valueof) {\n  let count = 0;\n  let delta;\n  let mean = 0;\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        delta = value - mean;\n        mean += delta / ++count;\n        sum += delta * (value - mean);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        delta = value - mean;\n        mean += delta / ++count;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n  if (count > 1) return sum / (count - 1);\n}\n"]},"metadata":{},"sourceType":"module"}