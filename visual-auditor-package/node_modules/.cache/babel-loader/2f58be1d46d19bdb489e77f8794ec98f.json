{"ast":null,"code":"var _jsxFileName = \"/Users/davidmunechika/Documents/Code/visual-auditor/src/components/Main/StickyForceLayout.js\",\n    _s2 = $RefreshSig$();\n\nimport { useD3 } from '../../hooks/useD3';\nimport React from 'react';\nimport * as d3 from 'd3';\nimport './StickyForceLayout.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction StickyForceLayout({\n  data,\n  sizeMax,\n  degree,\n  view,\n  metric\n}) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const width = 800;\n  const height = 600;\n  const features = [];\n  data.forEach(obj => {\n    obj.classifiers = [];\n    let str = obj.slice;\n\n    while (str.indexOf(':') !== -1) {\n      let temp = str.substring(0, str.indexOf(':'));\n      obj.classifiers.push(temp);\n      if (!features.includes(temp)) features.push(temp);\n\n      if (str.indexOf(',') !== -1) {\n        str = str.substring(str.indexOf(',') + 2);\n        console.log(str);\n      } else {\n        str = '';\n      }\n    }\n  });\n  const xCenter = [];\n  const yCenter = [];\n\n  for (let i = 0; i < features.length; i++) {\n    xCenter.push((width - 200) / features.length * i + 100);\n    yCenter.push((height - 200) / features.length * i - 100);\n  }\n\n  const nodes = data.map(obj => {\n    var _obj$classifiers$;\n\n    return {\n      radius: Math.max(obj.size / sizeMax * 80, 10),\n      category: obj.degree,\n      xFeature: obj.classifiers[0],\n      yFeature: (_obj$classifiers$ = obj.classifiers[1]) !== null && _obj$classifiers$ !== void 0 ? _obj$classifiers$ : obj.classifiers[0],\n      slice: obj.slice,\n      size: obj.size,\n      metric: obj.metric\n    };\n  });\n  const graph = {\n    nodes: nodes,\n    links: [{\n      source: 0,\n      target: 1\n    }, {\n      source: 1,\n      target: 2\n    }, {\n      source: 2,\n      target: 0\n    }, {\n      source: 1,\n      target: 3\n    }, {\n      source: 3,\n      target: 2\n    }, {\n      source: 3,\n      target: 4\n    }, {\n      source: 4,\n      target: 5\n    }, {\n      source: 5,\n      target: 6\n    }, {\n      source: 5,\n      target: 7\n    }, {\n      source: 6,\n      target: 7\n    }, {\n      source: 6,\n      target: 8\n    }, {\n      source: 7,\n      target: 8\n    }, {\n      source: 9,\n      target: 4\n    }, {\n      source: 9,\n      target: 11\n    }, {\n      source: 9,\n      target: 10\n    }, {\n      source: 10,\n      target: 11\n    }, {\n      source: 11,\n      target: 12\n    }, {\n      source: 12,\n      target: 10\n    }]\n  };\n\n  function useForceUpdate() {\n    _s();\n\n    const [value, setValue] = React.useState(0); // integer state\n\n    return () => setValue(value => value + 1); // update the state to force render\n  }\n\n  _s(useForceUpdate, \"qPBOvRc2Co1iWTsdTL0g7j/rpjU=\");\n\n  const forceUpdate = useForceUpdate();\n\n  function clamp(x, lo, hi) {\n    return x < lo ? lo : x > hi ? hi : x;\n  }\n\n  const ref = useD3(svg => {\n    svg = d3.select('.svg').style('width', '60%').style('height', '100%');\n    const link = svg.selectAll('.link').data(graph.links).join('line').classed('link', true);\n    const node = svg.selectAll('.node').data(graph.nodes).join('circle').attr('r', 12).style('fill', 'lightgray').classed('node', true).classed('fixed', d => d.fx !== undefined);\n    const simulation = d3.forceSimulation().nodes(graph.nodes).force('charge', d3.forceManyBody()).force('center', d3.forceCenter(width / 2, height / 2)).force('link', d3.forceLink(graph.links)).on('tick', tick);\n    const drag = d3.drag().on('start', dragstart).on('drag', dragged);\n    node.call(drag).on('click', click);\n\n    function tick() {\n      link.attr('x1', d => d.source.x).attr('y1', d => d.source.y).attr('x2', d => d.target.x).attr('y2', d => d.target.y);\n      node.attr('cx', d => d.x).attr('cy', d => d.y);\n    }\n\n    function click(event, d) {\n      delete d.fx;\n      delete d.fy;\n      d3.select(this).classed('fixed', false);\n      d3.select(this).style('fill', 'lightgray');\n      simulation.alpha(1).restart();\n    }\n\n    function dragstart() {\n      d3.select(this).classed('fixed', true);\n      d3.select(this).style('fill', 'blue');\n    }\n\n    function dragged(event, d) {\n      d.fx = clamp(event.x, 0, width);\n      d.fy = clamp(event.y, 0, height);\n      simulation.alpha(1).restart();\n    }\n  }, [data]);\n  if (view === 'bar') return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"content\",\n    style: {\n      overflow: 'scroll'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tooltip\",\n      style: {\n        position: 'absolute',\n        background: 'lightgray'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \"svg\",\n      width: width,\n      height: height,\n      onMouseEnter: forceUpdate,\n      onMouseLeave: forceUpdate,\n      style: {\n        overflow: 'scroll'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"g\", {\n        transform: \"translate(50, 200)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(StickyForceLayout, \"P4nBBCy+9t409b+Cs/IxSWJG88I=\", false, function () {\n  return [useForceUpdate, useD3];\n});\n\n_c = StickyForceLayout;\nexport default StickyForceLayout;\n\nvar _c;\n\n$RefreshReg$(_c, \"StickyForceLayout\");","map":{"version":3,"sources":["/Users/davidmunechika/Documents/Code/visual-auditor/src/components/Main/StickyForceLayout.js"],"names":["useD3","React","d3","StickyForceLayout","data","sizeMax","degree","view","metric","width","height","features","forEach","obj","classifiers","str","slice","indexOf","temp","substring","push","includes","console","log","xCenter","yCenter","i","length","nodes","map","radius","Math","max","size","category","xFeature","yFeature","graph","links","source","target","useForceUpdate","value","setValue","useState","forceUpdate","clamp","x","lo","hi","ref","svg","select","style","link","selectAll","join","classed","node","attr","d","fx","undefined","simulation","forceSimulation","force","forceManyBody","forceCenter","forceLink","on","tick","drag","dragstart","dragged","call","click","y","event","fy","alpha","restart","overflow","position","background"],"mappings":"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","sourcesContent":["import { useD3 } from '../../hooks/useD3';\nimport React from 'react';\nimport * as d3 from 'd3';\nimport './StickyForceLayout.css';\n\nfunction StickyForceLayout({ data, sizeMax, degree, view, metric }) {\n  const width = 800;\n  const height = 600;\n  const features = [];\n  data.forEach((obj) => {\n    obj.classifiers = [];\n    let str = obj.slice;\n    while (str.indexOf(':') !== -1) {\n      let temp = str.substring(0, str.indexOf(':'));\n      obj.classifiers.push(temp);\n      if (!features.includes(temp)) features.push(temp);\n      if (str.indexOf(',') !== -1) {\n        str = str.substring(str.indexOf(',') + 2);\n        console.log(str);\n      } else {\n        str = '';\n      }\n    }\n  });\n  const xCenter = [];\n  const yCenter = [];\n  for (let i = 0; i < features.length; i++) {\n    xCenter.push(((width - 200) / features.length) * i + 100);\n    yCenter.push(((height - 200) / features.length) * i - 100);\n  }\n  const nodes = data.map((obj) => {\n    return {\n      radius: Math.max((obj.size / sizeMax) * 80, 10),\n      category: obj.degree,\n      xFeature: obj.classifiers[0],\n      yFeature: obj.classifiers[1] ?? obj.classifiers[0],\n      slice: obj.slice,\n      size: obj.size,\n      metric: obj.metric,\n    };\n  });\n\n  const graph = {\n    nodes: nodes,\n    links: [\n      { source: 0, target: 1 },\n      { source: 1, target: 2 },\n      { source: 2, target: 0 },\n      { source: 1, target: 3 },\n      { source: 3, target: 2 },\n      { source: 3, target: 4 },\n      { source: 4, target: 5 },\n      { source: 5, target: 6 },\n      { source: 5, target: 7 },\n      { source: 6, target: 7 },\n      { source: 6, target: 8 },\n      { source: 7, target: 8 },\n      { source: 9, target: 4 },\n      { source: 9, target: 11 },\n      { source: 9, target: 10 },\n      { source: 10, target: 11 },\n      { source: 11, target: 12 },\n      { source: 12, target: 10 },\n    ],\n  };\n\n  function useForceUpdate() {\n    const [value, setValue] = React.useState(0); // integer state\n    return () => setValue((value) => value + 1); // update the state to force render\n  }\n  const forceUpdate = useForceUpdate();\n\n  function clamp(x, lo, hi) {\n    return x < lo ? lo : x > hi ? hi : x;\n  }\n\n  const ref = useD3(\n    (svg) => {\n      svg = d3.select('.svg').style('width', '60%').style('height', '100%');\n      const link = svg\n        .selectAll('.link')\n        .data(graph.links)\n        .join('line')\n        .classed('link', true);\n      const node = svg\n        .selectAll('.node')\n        .data(graph.nodes)\n        .join('circle')\n        .attr('r', 12)\n        .style('fill', 'lightgray')\n        .classed('node', true)\n        .classed('fixed', (d) => d.fx !== undefined);\n\n      const simulation = d3\n        .forceSimulation()\n        .nodes(graph.nodes)\n        .force('charge', d3.forceManyBody())\n        .force('center', d3.forceCenter(width / 2, height / 2))\n        .force('link', d3.forceLink(graph.links))\n        .on('tick', tick);\n\n      const drag = d3.drag().on('start', dragstart).on('drag', dragged);\n\n      node.call(drag).on('click', click);\n\n      function tick() {\n        link\n          .attr('x1', (d) => d.source.x)\n          .attr('y1', (d) => d.source.y)\n          .attr('x2', (d) => d.target.x)\n          .attr('y2', (d) => d.target.y);\n        node.attr('cx', (d) => d.x).attr('cy', (d) => d.y);\n      }\n\n      function click(event, d) {\n        delete d.fx;\n        delete d.fy;\n        d3.select(this).classed('fixed', false);\n        d3.select(this).style('fill', 'lightgray');\n        simulation.alpha(1).restart();\n      }\n\n      function dragstart() {\n        d3.select(this).classed('fixed', true);\n        d3.select(this).style('fill', 'blue');\n      }\n\n      function dragged(event, d) {\n        d.fx = clamp(event.x, 0, width);\n        d.fy = clamp(event.y, 0, height);\n        simulation.alpha(1).restart();\n      }\n    },\n    [data]\n  );\n\n  if (view === 'bar') return null;\n  return (\n    <div id='content' style={{ overflow: 'scroll' }}>\n      <div\n        className='tooltip'\n        style={{ position: 'absolute', background: 'lightgray' }}\n      ></div>\n      <svg\n        className='svg'\n        width={width}\n        height={height}\n        onMouseEnter={forceUpdate}\n        onMouseLeave={forceUpdate}\n        style={{ overflow: 'scroll' }}\n      >\n        <g transform='translate(50, 200)'></g>\n      </svg>\n    </div>\n  );\n}\n\nexport default StickyForceLayout;\n"]},"metadata":{},"sourceType":"module"}