{"ast":null,"code":"import _regeneratorRuntime from \"/Users/davidmunechika/Documents/Code/Research/visual-auditor/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(_callee);\n\nexport default function _callee() {\n  var node, current, next, children, i, n;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          node = this, next = [node];\n\n        case 1:\n          current = next.reverse(), next = [];\n\n        case 2:\n          if (!(node = current.pop())) {\n            _context.next = 8;\n            break;\n          }\n\n          _context.next = 5;\n          return node;\n\n        case 5:\n          if (children = node.children) {\n            for (i = 0, n = children.length; i < n; ++i) {\n              next.push(children[i]);\n            }\n          }\n\n          _context.next = 2;\n          break;\n\n        case 8:\n          if (next.length) {\n            _context.next = 1;\n            break;\n          }\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this);\n}","map":{"version":3,"sources":["/Users/davidmunechika/Documents/Code/Research/visual-auditor/node_modules/d3-hierarchy/src/hierarchy/iterator.js"],"names":["node","next","current","reverse","pop","children","i","n","length","push"],"mappings":";;;;AAAA,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AACTA,UAAAA,IADS,GACF,IADE,EACaC,IADb,GACoB,CAACD,IAAD,CADpB;;AAAA;AAGXE,UAAAA,OAAO,GAAGD,IAAI,CAACE,OAAL,EAAV,EAA0BF,IAAI,GAAG,EAAjC;;AAHW;AAAA,gBAIJD,IAAI,GAAGE,OAAO,CAACE,GAAR,EAJH;AAAA;AAAA;AAAA;;AAAA;AAKT,iBAAMJ,IAAN;;AALS;AAMT,cAAIK,QAAQ,GAAGL,IAAI,CAACK,QAApB,EAA8B;AAC5B,iBAAKC,CAAC,GAAG,CAAJ,EAAOC,CAAC,GAAGF,QAAQ,CAACG,MAAzB,EAAiCF,CAAC,GAAGC,CAArC,EAAwC,EAAED,CAA1C,EAA6C;AAC3CL,cAAAA,IAAI,CAACQ,IAAL,CAAUJ,QAAQ,CAACC,CAAD,CAAlB;AACD;AACF;;AAVQ;AAAA;;AAAA;AAAA,cAYJL,IAAI,CAACO,MAZD;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["export default function*() {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      yield node;\n      if (children = node.children) {\n        for (i = 0, n = children.length; i < n; ++i) {\n          next.push(children[i]);\n        }\n      }\n    }\n  } while (next.length);\n}\n"]},"metadata":{},"sourceType":"module"}