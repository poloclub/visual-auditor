{"ast":null,"code":"// https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423\nexport class Adder {\n  constructor() {\n    this._partials = new Float64Array(32);\n    this._n = 0;\n  }\n\n  add(x) {\n    const p = this._partials;\n    let i = 0;\n\n    for (let j = 0; j < this._n && j < 32; j++) {\n      const y = p[j],\n            hi = x + y,\n            lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);\n      if (lo) p[i++] = lo;\n      x = hi;\n    }\n\n    p[i] = x;\n    this._n = i + 1;\n    return this;\n  }\n\n  valueOf() {\n    const p = this._partials;\n    let n = this._n,\n        x,\n        y,\n        lo,\n        hi = 0;\n\n    if (n > 0) {\n      hi = p[--n];\n\n      while (n > 0) {\n        x = hi;\n        y = p[--n];\n        hi = x + y;\n        lo = y - (hi - x);\n        if (lo) break;\n      }\n\n      if (n > 0 && (lo < 0 && p[n - 1] < 0 || lo > 0 && p[n - 1] > 0)) {\n        y = lo * 2;\n        x = hi + y;\n        if (y == x - hi) hi = x;\n      }\n    }\n\n    return hi;\n  }\n\n}\nexport function fsum(values, valueof) {\n  const adder = new Adder();\n\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        adder.add(value);\n      }\n    }\n  } else {\n    let index = -1;\n\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        adder.add(value);\n      }\n    }\n  }\n\n  return +adder;\n}\nexport function fcumsum(values, valueof) {\n  const adder = new Adder();\n  let index = -1;\n  return Float64Array.from(values, valueof === undefined ? v => adder.add(+v || 0) : v => adder.add(+valueof(v, ++index, values) || 0));\n}","map":{"version":3,"sources":["/Users/davidmunechika/Documents/Code/Research/visual-auditor/visual-auditor-package/node_modules/d3-array/src/fsum.js"],"names":["Adder","constructor","_partials","Float64Array","_n","add","x","p","i","j","y","hi","lo","Math","abs","valueOf","n","fsum","values","valueof","adder","undefined","value","index","fcumsum","from","v"],"mappings":"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","sourcesContent":["// https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423\nexport class Adder {\n  constructor() {\n    this._partials = new Float64Array(32);\n    this._n = 0;\n  }\n  add(x) {\n    const p = this._partials;\n    let i = 0;\n    for (let j = 0; j < this._n && j < 32; j++) {\n      const y = p[j],\n        hi = x + y,\n        lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);\n      if (lo) p[i++] = lo;\n      x = hi;\n    }\n    p[i] = x;\n    this._n = i + 1;\n    return this;\n  }\n  valueOf() {\n    const p = this._partials;\n    let n = this._n, x, y, lo, hi = 0;\n    if (n > 0) {\n      hi = p[--n];\n      while (n > 0) {\n        x = hi;\n        y = p[--n];\n        hi = x + y;\n        lo = y - (hi - x);\n        if (lo) break;\n      }\n      if (n > 0 && ((lo < 0 && p[n - 1] < 0) || (lo > 0 && p[n - 1] > 0))) {\n        y = lo * 2;\n        x = hi + y;\n        if (y == x - hi) hi = x;\n      }\n    }\n    return hi;\n  }\n}\n\nexport function fsum(values, valueof) {\n  const adder = new Adder();\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        adder.add(value);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        adder.add(value);\n      }\n    }\n  }\n  return +adder;\n}\n\nexport function fcumsum(values, valueof) {\n  const adder = new Adder();\n  let index = -1;\n  return Float64Array.from(values, valueof === undefined\n      ? v => adder.add(+v || 0)\n      : v => adder.add(+valueof(v, ++index, values) || 0)\n  );\n}\n"]},"metadata":{},"sourceType":"module"}