{"ast":null,"code":"export default function (onenter, onupdate, onexit) {\n  var enter = this.enter(),\n      update = this,\n      exit = this.exit();\n\n  if (typeof onenter === \"function\") {\n    enter = onenter(enter);\n    if (enter) enter = enter.selection();\n  } else {\n    enter = enter.append(onenter + \"\");\n  }\n\n  if (onupdate != null) {\n    update = onupdate(update);\n    if (update) update = update.selection();\n  }\n\n  if (onexit == null) exit.remove();else onexit(exit);\n  return enter && update ? enter.merge(update).order() : update;\n}","map":{"version":3,"sources":["/Users/davidmunechika/Documents/Code/Research/visual-auditor/visual-auditor-package/node_modules/d3-selection/src/selection/join.js"],"names":["onenter","onupdate","onexit","enter","update","exit","selection","append","remove","merge","order"],"mappings":"AAAA,eAAe,UAASA,OAAT,EAAkBC,QAAlB,EAA4BC,MAA5B,EAAoC;AACjD,MAAIC,KAAK,GAAG,KAAKA,KAAL,EAAZ;AAAA,MAA0BC,MAAM,GAAG,IAAnC;AAAA,MAAyCC,IAAI,GAAG,KAAKA,IAAL,EAAhD;;AACA,MAAI,OAAOL,OAAP,KAAmB,UAAvB,EAAmC;AACjCG,IAAAA,KAAK,GAAGH,OAAO,CAACG,KAAD,CAAf;AACA,QAAIA,KAAJ,EAAWA,KAAK,GAAGA,KAAK,CAACG,SAAN,EAAR;AACZ,GAHD,MAGO;AACLH,IAAAA,KAAK,GAAGA,KAAK,CAACI,MAAN,CAAaP,OAAO,GAAG,EAAvB,CAAR;AACD;;AACD,MAAIC,QAAQ,IAAI,IAAhB,EAAsB;AACpBG,IAAAA,MAAM,GAAGH,QAAQ,CAACG,MAAD,CAAjB;AACA,QAAIA,MAAJ,EAAYA,MAAM,GAAGA,MAAM,CAACE,SAAP,EAAT;AACb;;AACD,MAAIJ,MAAM,IAAI,IAAd,EAAoBG,IAAI,CAACG,MAAL,GAApB,KAAwCN,MAAM,CAACG,IAAD,CAAN;AACxC,SAAOF,KAAK,IAAIC,MAAT,GAAkBD,KAAK,CAACM,KAAN,CAAYL,MAAZ,EAAoBM,KAApB,EAAlB,GAAgDN,MAAvD;AACD","sourcesContent":["export default function(onenter, onupdate, onexit) {\n  var enter = this.enter(), update = this, exit = this.exit();\n  if (typeof onenter === \"function\") {\n    enter = onenter(enter);\n    if (enter) enter = enter.selection();\n  } else {\n    enter = enter.append(onenter + \"\");\n  }\n  if (onupdate != null) {\n    update = onupdate(update);\n    if (update) update = update.selection();\n  }\n  if (onexit == null) exit.remove(); else onexit(exit);\n  return enter && update ? enter.merge(update).order() : update;\n}\n"]},"metadata":{},"sourceType":"module"}