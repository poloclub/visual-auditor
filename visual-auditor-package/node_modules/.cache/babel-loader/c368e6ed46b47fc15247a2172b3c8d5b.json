{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/davidmunechika/Documents/Code/Research/visual-auditor/visual-auditor-package/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _regeneratorRuntime from \"/Users/davidmunechika/Documents/Code/Research/visual-auditor/visual-auditor-package/node_modules/@babel/runtime/regenerator\";\nimport _slicedToArray from \"/Users/davidmunechika/Documents/Code/Research/visual-auditor/visual-auditor-package/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/davidmunechika/Documents/Code/Research/visual-auditor/visual-auditor-package/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/davidmunechika/Documents/Code/Research/visual-auditor/visual-auditor-package/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport Path from \"./path.js\";\nimport Polygon from \"./polygon.js\";\n\nvar Voronoi = /*#__PURE__*/function () {\n  function Voronoi(delaunay) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [0, 0, 960, 500],\n        _ref2 = _slicedToArray(_ref, 4),\n        xmin = _ref2[0],\n        ymin = _ref2[1],\n        xmax = _ref2[2],\n        ymax = _ref2[3];\n\n    _classCallCheck(this, Voronoi);\n\n    if (!((xmax = +xmax) >= (xmin = +xmin)) || !((ymax = +ymax) >= (ymin = +ymin))) throw new Error(\"invalid bounds\");\n    this.delaunay = delaunay;\n    this._circumcenters = new Float64Array(delaunay.points.length * 2);\n    this.vectors = new Float64Array(delaunay.points.length * 2);\n    this.xmax = xmax, this.xmin = xmin;\n    this.ymax = ymax, this.ymin = ymin;\n\n    this._init();\n  }\n\n  _createClass(Voronoi, [{\n    key: \"update\",\n    value: function update() {\n      this.delaunay.update();\n\n      this._init();\n\n      return this;\n    }\n  }, {\n    key: \"_init\",\n    value: function _init() {\n      var _this$delaunay = this.delaunay,\n          points = _this$delaunay.points,\n          hull = _this$delaunay.hull,\n          triangles = _this$delaunay.triangles,\n          vectors = this.vectors; // Compute circumcenters.\n\n      var circumcenters = this.circumcenters = this._circumcenters.subarray(0, triangles.length / 3 * 2);\n\n      for (var i = 0, j = 0, n = triangles.length, x, y; i < n; i += 3, j += 2) {\n        var t1 = triangles[i] * 2;\n        var t2 = triangles[i + 1] * 2;\n        var t3 = triangles[i + 2] * 2;\n        var _x = points[t1];\n        var _y = points[t1 + 1];\n        var x2 = points[t2];\n        var y2 = points[t2 + 1];\n        var x3 = points[t3];\n        var y3 = points[t3 + 1];\n        var dx = x2 - _x;\n        var dy = y2 - _y;\n        var ex = x3 - _x;\n        var ey = y3 - _y;\n        var ab = (dx * ey - dy * ex) * 2;\n\n        if (Math.abs(ab) < 1e-9) {\n          // degenerate case (collinear diagram)\n          // almost equal points (degenerate triangle)\n          // the circumcenter is at the infinity, in a\n          // direction that is:\n          // 1. orthogonal to the halfedge.\n          var a = 1e9; // 2. points away from the center; since the list of triangles starts\n          // in the center, the first point of the first triangle\n          // will be our reference\n\n          var r = triangles[0] * 2;\n          a *= Math.sign((points[r] - _x) * ey - (points[r + 1] - _y) * ex);\n          x = (_x + x3) / 2 - a * ey;\n          y = (_y + y3) / 2 + a * ex;\n        } else {\n          var d = 1 / ab;\n          var bl = dx * dx + dy * dy;\n          var cl = ex * ex + ey * ey;\n          x = _x + (ey * bl - dy * cl) * d;\n          y = _y + (dx * cl - ex * bl) * d;\n        }\n\n        circumcenters[j] = x;\n        circumcenters[j + 1] = y;\n      } // Compute exterior cell rays.\n\n\n      var h = hull[hull.length - 1];\n      var p0,\n          p1 = h * 4;\n      var x0,\n          x1 = points[2 * h];\n      var y0,\n          y1 = points[2 * h + 1];\n      vectors.fill(0);\n\n      for (var _i = 0; _i < hull.length; ++_i) {\n        h = hull[_i];\n        p0 = p1, x0 = x1, y0 = y1;\n        p1 = h * 4, x1 = points[2 * h], y1 = points[2 * h + 1];\n        vectors[p0 + 2] = vectors[p1] = y0 - y1;\n        vectors[p0 + 3] = vectors[p1 + 1] = x1 - x0;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render(context) {\n      var buffer = context == null ? context = new Path() : undefined;\n      var _this$delaunay2 = this.delaunay,\n          halfedges = _this$delaunay2.halfedges,\n          inedges = _this$delaunay2.inedges,\n          hull = _this$delaunay2.hull,\n          circumcenters = this.circumcenters,\n          vectors = this.vectors;\n      if (hull.length <= 1) return null;\n\n      for (var i = 0, n = halfedges.length; i < n; ++i) {\n        var j = halfedges[i];\n        if (j < i) continue;\n        var ti = Math.floor(i / 3) * 2;\n        var tj = Math.floor(j / 3) * 2;\n        var xi = circumcenters[ti];\n        var yi = circumcenters[ti + 1];\n        var xj = circumcenters[tj];\n        var yj = circumcenters[tj + 1];\n\n        this._renderSegment(xi, yi, xj, yj, context);\n      }\n\n      var h0,\n          h1 = hull[hull.length - 1];\n\n      for (var _i2 = 0; _i2 < hull.length; ++_i2) {\n        h0 = h1, h1 = hull[_i2];\n        var t = Math.floor(inedges[h1] / 3) * 2;\n        var x = circumcenters[t];\n        var y = circumcenters[t + 1];\n        var v = h0 * 4;\n\n        var p = this._project(x, y, vectors[v + 2], vectors[v + 3]);\n\n        if (p) this._renderSegment(x, y, p[0], p[1], context);\n      }\n\n      return buffer && buffer.value();\n    }\n  }, {\n    key: \"renderBounds\",\n    value: function renderBounds(context) {\n      var buffer = context == null ? context = new Path() : undefined;\n      context.rect(this.xmin, this.ymin, this.xmax - this.xmin, this.ymax - this.ymin);\n      return buffer && buffer.value();\n    }\n  }, {\n    key: \"renderCell\",\n    value: function renderCell(i, context) {\n      var buffer = context == null ? context = new Path() : undefined;\n\n      var points = this._clip(i);\n\n      if (points === null || !points.length) return;\n      context.moveTo(points[0], points[1]);\n      var n = points.length;\n\n      while (points[0] === points[n - 2] && points[1] === points[n - 1] && n > 1) {\n        n -= 2;\n      }\n\n      for (var _i3 = 2; _i3 < n; _i3 += 2) {\n        if (points[_i3] !== points[_i3 - 2] || points[_i3 + 1] !== points[_i3 - 1]) context.lineTo(points[_i3], points[_i3 + 1]);\n      }\n\n      context.closePath();\n      return buffer && buffer.value();\n    }\n  }, {\n    key: \"cellPolygons\",\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function cellPolygons() {\n      var points, i, n, cell;\n      return _regeneratorRuntime.wrap(function cellPolygons$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              points = this.delaunay.points;\n              i = 0, n = points.length / 2;\n\n            case 2:\n              if (!(i < n)) {\n                _context.next = 11;\n                break;\n              }\n\n              cell = this.cellPolygon(i);\n\n              if (!cell) {\n                _context.next = 8;\n                break;\n              }\n\n              cell.index = i;\n              _context.next = 8;\n              return cell;\n\n            case 8:\n              ++i;\n              _context.next = 2;\n              break;\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, cellPolygons, this);\n    })\n  }, {\n    key: \"cellPolygon\",\n    value: function cellPolygon(i) {\n      var polygon = new Polygon();\n      this.renderCell(i, polygon);\n      return polygon.value();\n    }\n  }, {\n    key: \"_renderSegment\",\n    value: function _renderSegment(x0, y0, x1, y1, context) {\n      var S;\n\n      var c0 = this._regioncode(x0, y0);\n\n      var c1 = this._regioncode(x1, y1);\n\n      if (c0 === 0 && c1 === 0) {\n        context.moveTo(x0, y0);\n        context.lineTo(x1, y1);\n      } else if (S = this._clipSegment(x0, y0, x1, y1, c0, c1)) {\n        context.moveTo(S[0], S[1]);\n        context.lineTo(S[2], S[3]);\n      }\n    }\n  }, {\n    key: \"contains\",\n    value: function contains(i, x, y) {\n      if ((x = +x, x !== x) || (y = +y, y !== y)) return false;\n      return this.delaunay._step(i, x, y) === i;\n    }\n  }, {\n    key: \"neighbors\",\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function neighbors(i) {\n      var ci, _iterator, _step, j, cj, ai, li, aj, lj;\n\n      return _regeneratorRuntime.wrap(function neighbors$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              ci = this._clip(i);\n\n              if (!ci) {\n                _context2.next = 33;\n                break;\n              }\n\n              _iterator = _createForOfIteratorHelper(this.delaunay.neighbors(i));\n              _context2.prev = 3;\n\n              _iterator.s();\n\n            case 5:\n              if ((_step = _iterator.n()).done) {\n                _context2.next = 25;\n                break;\n              }\n\n              j = _step.value;\n              cj = this._clip(j); // find the common edge\n\n              if (!cj) {\n                _context2.next = 23;\n                break;\n              }\n\n              ai = 0, li = ci.length;\n\n            case 10:\n              if (!(ai < li)) {\n                _context2.next = 23;\n                break;\n              }\n\n              aj = 0, lj = cj.length;\n\n            case 12:\n              if (!(aj < lj)) {\n                _context2.next = 20;\n                break;\n              }\n\n              if (!(ci[ai] == cj[aj] && ci[ai + 1] == cj[aj + 1] && ci[(ai + 2) % li] == cj[(aj + lj - 2) % lj] && ci[(ai + 3) % li] == cj[(aj + lj - 1) % lj])) {\n                _context2.next = 17;\n                break;\n              }\n\n              _context2.next = 16;\n              return j;\n\n            case 16:\n              return _context2.abrupt(\"break\", 23);\n\n            case 17:\n              aj += 2;\n              _context2.next = 12;\n              break;\n\n            case 20:\n              ai += 2;\n              _context2.next = 10;\n              break;\n\n            case 23:\n              _context2.next = 5;\n              break;\n\n            case 25:\n              _context2.next = 30;\n              break;\n\n            case 27:\n              _context2.prev = 27;\n              _context2.t0 = _context2[\"catch\"](3);\n\n              _iterator.e(_context2.t0);\n\n            case 30:\n              _context2.prev = 30;\n\n              _iterator.f();\n\n              return _context2.finish(30);\n\n            case 33:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, neighbors, this, [[3, 27, 30, 33]]);\n    })\n  }, {\n    key: \"_cell\",\n    value: function _cell(i) {\n      var circumcenters = this.circumcenters,\n          _this$delaunay3 = this.delaunay,\n          inedges = _this$delaunay3.inedges,\n          halfedges = _this$delaunay3.halfedges,\n          triangles = _this$delaunay3.triangles;\n      var e0 = inedges[i];\n      if (e0 === -1) return null; // coincident point\n\n      var points = [];\n      var e = e0;\n\n      do {\n        var t = Math.floor(e / 3);\n        points.push(circumcenters[t * 2], circumcenters[t * 2 + 1]);\n        e = e % 3 === 2 ? e - 2 : e + 1;\n        if (triangles[e] !== i) break; // bad triangulation\n\n        e = halfedges[e];\n      } while (e !== e0 && e !== -1);\n\n      return points;\n    }\n  }, {\n    key: \"_clip\",\n    value: function _clip(i) {\n      // degenerate case (1 valid point: return the box)\n      if (i === 0 && this.delaunay.hull.length === 1) {\n        return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n      }\n\n      var points = this._cell(i);\n\n      if (points === null) return null;\n      var V = this.vectors;\n      var v = i * 4;\n      return V[v] || V[v + 1] ? this._clipInfinite(i, points, V[v], V[v + 1], V[v + 2], V[v + 3]) : this._clipFinite(i, points);\n    }\n  }, {\n    key: \"_clipFinite\",\n    value: function _clipFinite(i, points) {\n      var n = points.length;\n      var P = null;\n      var x0,\n          y0,\n          x1 = points[n - 2],\n          y1 = points[n - 1];\n\n      var c0,\n          c1 = this._regioncode(x1, y1);\n\n      var e0,\n          e1 = 0;\n\n      for (var j = 0; j < n; j += 2) {\n        x0 = x1, y0 = y1, x1 = points[j], y1 = points[j + 1];\n        c0 = c1, c1 = this._regioncode(x1, y1);\n\n        if (c0 === 0 && c1 === 0) {\n          e0 = e1, e1 = 0;\n          if (P) P.push(x1, y1);else P = [x1, y1];\n        } else {\n          var S = void 0,\n              sx0 = void 0,\n              sy0 = void 0,\n              sx1 = void 0,\n              sy1 = void 0;\n\n          if (c0 === 0) {\n            if ((S = this._clipSegment(x0, y0, x1, y1, c0, c1)) === null) continue;\n            var _S = S;\n\n            var _S2 = _slicedToArray(_S, 4);\n\n            sx0 = _S2[0];\n            sy0 = _S2[1];\n            sx1 = _S2[2];\n            sy1 = _S2[3];\n          } else {\n            if ((S = this._clipSegment(x1, y1, x0, y0, c1, c0)) === null) continue;\n            var _S3 = S;\n\n            var _S4 = _slicedToArray(_S3, 4);\n\n            sx1 = _S4[0];\n            sy1 = _S4[1];\n            sx0 = _S4[2];\n            sy0 = _S4[3];\n            e0 = e1, e1 = this._edgecode(sx0, sy0);\n            if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n            if (P) P.push(sx0, sy0);else P = [sx0, sy0];\n          }\n\n          e0 = e1, e1 = this._edgecode(sx1, sy1);\n          if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n          if (P) P.push(sx1, sy1);else P = [sx1, sy1];\n        }\n      }\n\n      if (P) {\n        e0 = e1, e1 = this._edgecode(P[0], P[1]);\n        if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n      } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n        return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n      }\n\n      return P;\n    }\n  }, {\n    key: \"_clipSegment\",\n    value: function _clipSegment(x0, y0, x1, y1, c0, c1) {\n      while (true) {\n        if (c0 === 0 && c1 === 0) return [x0, y0, x1, y1];\n        if (c0 & c1) return null;\n        var x = void 0,\n            y = void 0,\n            c = c0 || c1;\n        if (c & 8) x = x0 + (x1 - x0) * (this.ymax - y0) / (y1 - y0), y = this.ymax;else if (c & 4) x = x0 + (x1 - x0) * (this.ymin - y0) / (y1 - y0), y = this.ymin;else if (c & 2) y = y0 + (y1 - y0) * (this.xmax - x0) / (x1 - x0), x = this.xmax;else y = y0 + (y1 - y0) * (this.xmin - x0) / (x1 - x0), x = this.xmin;\n        if (c0) x0 = x, y0 = y, c0 = this._regioncode(x0, y0);else x1 = x, y1 = y, c1 = this._regioncode(x1, y1);\n      }\n    }\n  }, {\n    key: \"_clipInfinite\",\n    value: function _clipInfinite(i, points, vx0, vy0, vxn, vyn) {\n      var P = Array.from(points),\n          p;\n      if (p = this._project(P[0], P[1], vx0, vy0)) P.unshift(p[0], p[1]);\n      if (p = this._project(P[P.length - 2], P[P.length - 1], vxn, vyn)) P.push(p[0], p[1]);\n\n      if (P = this._clipFinite(i, P)) {\n        for (var j = 0, n = P.length, c0, c1 = this._edgecode(P[n - 2], P[n - 1]); j < n; j += 2) {\n          c0 = c1, c1 = this._edgecode(P[j], P[j + 1]);\n          if (c0 && c1) j = this._edge(i, c0, c1, P, j), n = P.length;\n        }\n      } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n        P = [this.xmin, this.ymin, this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax];\n      }\n\n      return P;\n    }\n  }, {\n    key: \"_edge\",\n    value: function _edge(i, e0, e1, P, j) {\n      while (e0 !== e1) {\n        var x = void 0,\n            y = void 0;\n\n        switch (e0) {\n          case 5:\n            e0 = 4;\n            continue;\n          // top-left\n\n          case 4:\n            e0 = 6, x = this.xmax, y = this.ymin;\n            break;\n          // top\n\n          case 6:\n            e0 = 2;\n            continue;\n          // top-right\n\n          case 2:\n            e0 = 10, x = this.xmax, y = this.ymax;\n            break;\n          // right\n\n          case 10:\n            e0 = 8;\n            continue;\n          // bottom-right\n\n          case 8:\n            e0 = 9, x = this.xmin, y = this.ymax;\n            break;\n          // bottom\n\n          case 9:\n            e0 = 1;\n            continue;\n          // bottom-left\n\n          case 1:\n            e0 = 5, x = this.xmin, y = this.ymin;\n            break;\n          // left\n        } // Note: this implicitly checks for out of bounds: if P[j] or P[j+1] are\n        // undefined, the conditional statement will be executed.\n\n\n        if ((P[j] !== x || P[j + 1] !== y) && this.contains(i, x, y)) {\n          P.splice(j, 0, x, y), j += 2;\n        }\n      }\n\n      if (P.length > 4) {\n        for (var _i4 = 0; _i4 < P.length; _i4 += 2) {\n          var _j = (_i4 + 2) % P.length,\n              k = (_i4 + 4) % P.length;\n\n          if (P[_i4] === P[_j] && P[_j] === P[k] || P[_i4 + 1] === P[_j + 1] && P[_j + 1] === P[k + 1]) P.splice(_j, 2), _i4 -= 2;\n        }\n      }\n\n      return j;\n    }\n  }, {\n    key: \"_project\",\n    value: function _project(x0, y0, vx, vy) {\n      var t = Infinity,\n          c,\n          x,\n          y;\n\n      if (vy < 0) {\n        // top\n        if (y0 <= this.ymin) return null;\n        if ((c = (this.ymin - y0) / vy) < t) y = this.ymin, x = x0 + (t = c) * vx;\n      } else if (vy > 0) {\n        // bottom\n        if (y0 >= this.ymax) return null;\n        if ((c = (this.ymax - y0) / vy) < t) y = this.ymax, x = x0 + (t = c) * vx;\n      }\n\n      if (vx > 0) {\n        // right\n        if (x0 >= this.xmax) return null;\n        if ((c = (this.xmax - x0) / vx) < t) x = this.xmax, y = y0 + (t = c) * vy;\n      } else if (vx < 0) {\n        // left\n        if (x0 <= this.xmin) return null;\n        if ((c = (this.xmin - x0) / vx) < t) x = this.xmin, y = y0 + (t = c) * vy;\n      }\n\n      return [x, y];\n    }\n  }, {\n    key: \"_edgecode\",\n    value: function _edgecode(x, y) {\n      return (x === this.xmin ? 1 : x === this.xmax ? 2 : 0) | (y === this.ymin ? 4 : y === this.ymax ? 8 : 0);\n    }\n  }, {\n    key: \"_regioncode\",\n    value: function _regioncode(x, y) {\n      return (x < this.xmin ? 1 : x > this.xmax ? 2 : 0) | (y < this.ymin ? 4 : y > this.ymax ? 8 : 0);\n    }\n  }]);\n\n  return Voronoi;\n}();\n\nexport { Voronoi as default };","map":{"version":3,"sources":["/Users/davidmunechika/Documents/Code/Research/visual-auditor/visual-auditor-package/node_modules/d3-delaunay/src/voronoi.js"],"names":["Path","Polygon","Voronoi","delaunay","xmin","ymin","xmax","ymax","Error","_circumcenters","Float64Array","points","length","vectors","_init","update","hull","triangles","circumcenters","subarray","i","j","n","x","y","t1","t2","t3","x1","y1","x2","y2","x3","y3","dx","dy","ex","ey","ab","Math","abs","a","r","sign","d","bl","cl","h","p0","p1","x0","y0","fill","context","buffer","undefined","halfedges","inedges","ti","floor","tj","xi","yi","xj","yj","_renderSegment","h0","h1","t","v","p","_project","value","rect","_clip","moveTo","lineTo","closePath","cell","cellPolygon","index","polygon","renderCell","S","c0","_regioncode","c1","_clipSegment","_step","ci","neighbors","cj","ai","li","aj","lj","e0","e","push","_cell","V","_clipInfinite","_clipFinite","P","e1","sx0","sy0","sx1","sy1","_edgecode","_edge","contains","c","vx0","vy0","vxn","vyn","Array","from","unshift","splice","k","vx","vy","Infinity"],"mappings":"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","sourcesContent":["import Path from \"./path.js\";\nimport Polygon from \"./polygon.js\";\n\nexport default class Voronoi {\n  constructor(delaunay, [xmin, ymin, xmax, ymax] = [0, 0, 960, 500]) {\n    if (!((xmax = +xmax) >= (xmin = +xmin)) || !((ymax = +ymax) >= (ymin = +ymin))) throw new Error(\"invalid bounds\");\n    this.delaunay = delaunay;\n    this._circumcenters = new Float64Array(delaunay.points.length * 2);\n    this.vectors = new Float64Array(delaunay.points.length * 2);\n    this.xmax = xmax, this.xmin = xmin;\n    this.ymax = ymax, this.ymin = ymin;\n    this._init();\n  }\n  update() {\n    this.delaunay.update();\n    this._init();\n    return this;\n  }\n  _init() {\n    const {delaunay: {points, hull, triangles}, vectors} = this;\n\n    // Compute circumcenters.\n    const circumcenters = this.circumcenters = this._circumcenters.subarray(0, triangles.length / 3 * 2);\n    for (let i = 0, j = 0, n = triangles.length, x, y; i < n; i += 3, j += 2) {\n      const t1 = triangles[i] * 2;\n      const t2 = triangles[i + 1] * 2;\n      const t3 = triangles[i + 2] * 2;\n      const x1 = points[t1];\n      const y1 = points[t1 + 1];\n      const x2 = points[t2];\n      const y2 = points[t2 + 1];\n      const x3 = points[t3];\n      const y3 = points[t3 + 1];\n\n      const dx = x2 - x1;\n      const dy = y2 - y1;\n      const ex = x3 - x1;\n      const ey = y3 - y1;\n      const ab = (dx * ey - dy * ex) * 2;\n\n      if (Math.abs(ab) < 1e-9) {\n        // degenerate case (collinear diagram)\n        // almost equal points (degenerate triangle)\n        // the circumcenter is at the infinity, in a\n        // direction that is:\n        // 1. orthogonal to the halfedge.\n        let a = 1e9;\n        // 2. points away from the center; since the list of triangles starts\n        // in the center, the first point of the first triangle\n        // will be our reference\n        const r = triangles[0] * 2;\n        a *= Math.sign((points[r] - x1) * ey - (points[r + 1] - y1) * ex);\n        x = (x1 + x3) / 2 - a * ey;\n        y = (y1 + y3) / 2 + a * ex;\n      } else {\n        const d = 1 / ab;\n        const bl = dx * dx + dy * dy;\n        const cl = ex * ex + ey * ey;\n        x = x1 + (ey * bl - dy * cl) * d;\n        y = y1 + (dx * cl - ex * bl) * d;\n      }\n      circumcenters[j] = x;\n      circumcenters[j + 1] = y;\n    }\n\n    // Compute exterior cell rays.\n    let h = hull[hull.length - 1];\n    let p0, p1 = h * 4;\n    let x0, x1 = points[2 * h];\n    let y0, y1 = points[2 * h + 1];\n    vectors.fill(0);\n    for (let i = 0; i < hull.length; ++i) {\n      h = hull[i];\n      p0 = p1, x0 = x1, y0 = y1;\n      p1 = h * 4, x1 = points[2 * h], y1 = points[2 * h + 1];\n      vectors[p0 + 2] = vectors[p1] = y0 - y1;\n      vectors[p0 + 3] = vectors[p1 + 1] = x1 - x0;\n    }\n  }\n  render(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {delaunay: {halfedges, inedges, hull}, circumcenters, vectors} = this;\n    if (hull.length <= 1) return null;\n    for (let i = 0, n = halfedges.length; i < n; ++i) {\n      const j = halfedges[i];\n      if (j < i) continue;\n      const ti = Math.floor(i / 3) * 2;\n      const tj = Math.floor(j / 3) * 2;\n      const xi = circumcenters[ti];\n      const yi = circumcenters[ti + 1];\n      const xj = circumcenters[tj];\n      const yj = circumcenters[tj + 1];\n      this._renderSegment(xi, yi, xj, yj, context);\n    }\n    let h0, h1 = hull[hull.length - 1];\n    for (let i = 0; i < hull.length; ++i) {\n      h0 = h1, h1 = hull[i];\n      const t = Math.floor(inedges[h1] / 3) * 2;\n      const x = circumcenters[t];\n      const y = circumcenters[t + 1];\n      const v = h0 * 4;\n      const p = this._project(x, y, vectors[v + 2], vectors[v + 3]);\n      if (p) this._renderSegment(x, y, p[0], p[1], context);\n    }\n    return buffer && buffer.value();\n  }\n  renderBounds(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    context.rect(this.xmin, this.ymin, this.xmax - this.xmin, this.ymax - this.ymin);\n    return buffer && buffer.value();\n  }\n  renderCell(i, context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const points = this._clip(i);\n    if (points === null || !points.length) return;\n    context.moveTo(points[0], points[1]);\n    let n = points.length;\n    while (points[0] === points[n-2] && points[1] === points[n-1] && n > 1) n -= 2;\n    for (let i = 2; i < n; i += 2) {\n      if (points[i] !== points[i-2] || points[i+1] !== points[i-1])\n        context.lineTo(points[i], points[i + 1]);\n    }\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  *cellPolygons() {\n    const {delaunay: {points}} = this;\n    for (let i = 0, n = points.length / 2; i < n; ++i) {\n      const cell = this.cellPolygon(i);\n      if (cell) cell.index = i, yield cell;\n    }\n  }\n  cellPolygon(i) {\n    const polygon = new Polygon;\n    this.renderCell(i, polygon);\n    return polygon.value();\n  }\n  _renderSegment(x0, y0, x1, y1, context) {\n    let S;\n    const c0 = this._regioncode(x0, y0);\n    const c1 = this._regioncode(x1, y1);\n    if (c0 === 0 && c1 === 0) {\n      context.moveTo(x0, y0);\n      context.lineTo(x1, y1);\n    } else if (S = this._clipSegment(x0, y0, x1, y1, c0, c1)) {\n      context.moveTo(S[0], S[1]);\n      context.lineTo(S[2], S[3]);\n    }\n  }\n  contains(i, x, y) {\n    if ((x = +x, x !== x) || (y = +y, y !== y)) return false;\n    return this.delaunay._step(i, x, y) === i;\n  }\n  *neighbors(i) {\n    const ci = this._clip(i);\n    if (ci) for (const j of this.delaunay.neighbors(i)) {\n      const cj = this._clip(j);\n      // find the common edge\n      if (cj) loop: for (let ai = 0, li = ci.length; ai < li; ai += 2) {\n        for (let aj = 0, lj = cj.length; aj < lj; aj += 2) {\n          if (ci[ai] == cj[aj]\n          && ci[ai + 1] == cj[aj + 1]\n          && ci[(ai + 2) % li] == cj[(aj + lj - 2) % lj]\n          && ci[(ai + 3) % li] == cj[(aj + lj - 1) % lj]\n          ) {\n            yield j;\n            break loop;\n          }\n        }\n      }\n    }\n  }\n  _cell(i) {\n    const {circumcenters, delaunay: {inedges, halfedges, triangles}} = this;\n    const e0 = inedges[i];\n    if (e0 === -1) return null; // coincident point\n    const points = [];\n    let e = e0;\n    do {\n      const t = Math.floor(e / 3);\n      points.push(circumcenters[t * 2], circumcenters[t * 2 + 1]);\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) break; // bad triangulation\n      e = halfedges[e];\n    } while (e !== e0 && e !== -1);\n    return points;\n  }\n  _clip(i) {\n    // degenerate case (1 valid point: return the box)\n    if (i === 0 && this.delaunay.hull.length === 1) {\n      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n    }\n    const points = this._cell(i);\n    if (points === null) return null;\n    const {vectors: V} = this;\n    const v = i * 4;\n    return V[v] || V[v + 1]\n        ? this._clipInfinite(i, points, V[v], V[v + 1], V[v + 2], V[v + 3])\n        : this._clipFinite(i, points);\n  }\n  _clipFinite(i, points) {\n    const n = points.length;\n    let P = null;\n    let x0, y0, x1 = points[n - 2], y1 = points[n - 1];\n    let c0, c1 = this._regioncode(x1, y1);\n    let e0, e1 = 0;\n    for (let j = 0; j < n; j += 2) {\n      x0 = x1, y0 = y1, x1 = points[j], y1 = points[j + 1];\n      c0 = c1, c1 = this._regioncode(x1, y1);\n      if (c0 === 0 && c1 === 0) {\n        e0 = e1, e1 = 0;\n        if (P) P.push(x1, y1);\n        else P = [x1, y1];\n      } else {\n        let S, sx0, sy0, sx1, sy1;\n        if (c0 === 0) {\n          if ((S = this._clipSegment(x0, y0, x1, y1, c0, c1)) === null) continue;\n          [sx0, sy0, sx1, sy1] = S;\n        } else {\n          if ((S = this._clipSegment(x1, y1, x0, y0, c1, c0)) === null) continue;\n          [sx1, sy1, sx0, sy0] = S;\n          e0 = e1, e1 = this._edgecode(sx0, sy0);\n          if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n          if (P) P.push(sx0, sy0);\n          else P = [sx0, sy0];\n        }\n        e0 = e1, e1 = this._edgecode(sx1, sy1);\n        if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n        if (P) P.push(sx1, sy1);\n        else P = [sx1, sy1];\n      }\n    }\n    if (P) {\n      e0 = e1, e1 = this._edgecode(P[0], P[1]);\n      if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n    }\n    return P;\n  }\n  _clipSegment(x0, y0, x1, y1, c0, c1) {\n    while (true) {\n      if (c0 === 0 && c1 === 0) return [x0, y0, x1, y1];\n      if (c0 & c1) return null;\n      let x, y, c = c0 || c1;\n      if (c & 0b1000) x = x0 + (x1 - x0) * (this.ymax - y0) / (y1 - y0), y = this.ymax;\n      else if (c & 0b0100) x = x0 + (x1 - x0) * (this.ymin - y0) / (y1 - y0), y = this.ymin;\n      else if (c & 0b0010) y = y0 + (y1 - y0) * (this.xmax - x0) / (x1 - x0), x = this.xmax;\n      else y = y0 + (y1 - y0) * (this.xmin - x0) / (x1 - x0), x = this.xmin;\n      if (c0) x0 = x, y0 = y, c0 = this._regioncode(x0, y0);\n      else x1 = x, y1 = y, c1 = this._regioncode(x1, y1);\n    }\n  }\n  _clipInfinite(i, points, vx0, vy0, vxn, vyn) {\n    let P = Array.from(points), p;\n    if (p = this._project(P[0], P[1], vx0, vy0)) P.unshift(p[0], p[1]);\n    if (p = this._project(P[P.length - 2], P[P.length - 1], vxn, vyn)) P.push(p[0], p[1]);\n    if (P = this._clipFinite(i, P)) {\n      for (let j = 0, n = P.length, c0, c1 = this._edgecode(P[n - 2], P[n - 1]); j < n; j += 2) {\n        c0 = c1, c1 = this._edgecode(P[j], P[j + 1]);\n        if (c0 && c1) j = this._edge(i, c0, c1, P, j), n = P.length;\n      }\n    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n      P = [this.xmin, this.ymin, this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax];\n    }\n    return P;\n  }\n  _edge(i, e0, e1, P, j) {\n    while (e0 !== e1) {\n      let x, y;\n      switch (e0) {\n        case 0b0101: e0 = 0b0100; continue; // top-left\n        case 0b0100: e0 = 0b0110, x = this.xmax, y = this.ymin; break; // top\n        case 0b0110: e0 = 0b0010; continue; // top-right\n        case 0b0010: e0 = 0b1010, x = this.xmax, y = this.ymax; break; // right\n        case 0b1010: e0 = 0b1000; continue; // bottom-right\n        case 0b1000: e0 = 0b1001, x = this.xmin, y = this.ymax; break; // bottom\n        case 0b1001: e0 = 0b0001; continue; // bottom-left\n        case 0b0001: e0 = 0b0101, x = this.xmin, y = this.ymin; break; // left\n      }\n      // Note: this implicitly checks for out of bounds: if P[j] or P[j+1] are\n      // undefined, the conditional statement will be executed.\n      if ((P[j] !== x || P[j + 1] !== y) && this.contains(i, x, y)) {\n        P.splice(j, 0, x, y), j += 2;\n      }\n    }\n    if (P.length > 4) {\n      for (let i = 0; i < P.length; i+= 2) {\n        const j = (i + 2) % P.length, k = (i + 4) % P.length;\n        if (P[i] === P[j] && P[j] === P[k]\n        || P[i + 1] === P[j + 1] && P[j + 1] === P[k + 1])\n          P.splice(j, 2), i -= 2;\n      }\n    }\n    return j;\n  }\n  _project(x0, y0, vx, vy) {\n    let t = Infinity, c, x, y;\n    if (vy < 0) { // top\n      if (y0 <= this.ymin) return null;\n      if ((c = (this.ymin - y0) / vy) < t) y = this.ymin, x = x0 + (t = c) * vx;\n    } else if (vy > 0) { // bottom\n      if (y0 >= this.ymax) return null;\n      if ((c = (this.ymax - y0) / vy) < t) y = this.ymax, x = x0 + (t = c) * vx;\n    }\n    if (vx > 0) { // right\n      if (x0 >= this.xmax) return null;\n      if ((c = (this.xmax - x0) / vx) < t) x = this.xmax, y = y0 + (t = c) * vy;\n    } else if (vx < 0) { // left\n      if (x0 <= this.xmin) return null;\n      if ((c = (this.xmin - x0) / vx) < t) x = this.xmin, y = y0 + (t = c) * vy;\n    }\n    return [x, y];\n  }\n  _edgecode(x, y) {\n    return (x === this.xmin ? 0b0001\n        : x === this.xmax ? 0b0010 : 0b0000)\n        | (y === this.ymin ? 0b0100\n        : y === this.ymax ? 0b1000 : 0b0000);\n  }\n  _regioncode(x, y) {\n    return (x < this.xmin ? 0b0001\n        : x > this.xmax ? 0b0010 : 0b0000)\n        | (y < this.ymin ? 0b0100\n        : y > this.ymax ? 0b1000 : 0b0000);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}