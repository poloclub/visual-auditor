{"ast":null,"code":"var _jsxFileName = \"/Users/davidmunechika/Documents/Code/visual-auditor/src/components/Main/GraphLayout.js\",\n    _s = $RefreshSig$();\n\nimport { useD3 } from '../../hooks/useD3';\nimport React from 'react';\nimport * as d3 from 'd3';\nimport './GraphLayout.css';\nimport Button from '@mui/material/Button';\nimport logLossSamples from '../../data/loglosssamples.json';\nimport reverseLogLossSamples from '../../data/reverseloglosssamples.json';\nimport accuracySamples from '../../data/accuracysamples.json';\nimport precisionSamples from '../../data/precisionsamples.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GraphLayout({\n  data,\n  degree,\n  metric,\n  model,\n  overperforming,\n  radiusType,\n  edgeFiltering,\n  edgeThickness,\n  edgeForce,\n  setDetails,\n  pointerMode\n}) {\n  _s();\n\n  const [selected, setSelected] = React.useState(null);\n  const [value, setValue] = React.useState(0); // integer state\n\n  function useForceUpdate() {\n    return () => setValue(value => value + 1); // update the state to force render\n  }\n\n  const forceUpdate = useForceUpdate();\n  const width = 800;\n  const height = 600;\n  const features = [];\n  let samples;\n\n  switch (metric) {\n    case 'Log Loss':\n      if (overperforming) samples = reverseLogLossSamples;else samples = logLossSamples;\n      break;\n\n    case 'Accuracy':\n      if (overperforming) samples = accuracySamples;else samples = accuracySamples;\n      break;\n\n    case 'Precision':\n      if (overperforming) samples = precisionSamples;else samples = precisionSamples;\n      break;\n\n    default:\n      if (overperforming) samples = reverseLogLossSamples;else samples = logLossSamples;\n      break;\n  }\n\n  data.forEach(obj => {\n    obj.classifiers = [];\n    let str = obj.slice;\n\n    while (str.indexOf(':') !== -1) {\n      let temp = str.substring(0, str.indexOf(':'));\n      obj.classifiers.push(temp);\n      if (!features.includes(temp)) features.push(temp);\n\n      if (str.indexOf(',') !== -1) {\n        str = str.substring(str.indexOf(',') + 2);\n      } else {\n        str = '';\n      }\n    }\n  });\n  console.log(features);\n  const xCenter = [];\n  const yCenter = [];\n\n  for (let i = 0; i < features.length; i++) {\n    xCenter.push((width - 200) / features.length * i + 100);\n    yCenter.push((height - 200) / features.length * i + 100);\n  }\n\n  const nodes = data.map(obj => {\n    var _obj$classifiers$;\n\n    return {\n      radius: radiusType === 'log' ? Math.log(obj.size) : Math.sqrt(obj.size),\n      category: obj.degree,\n      xFeature: obj.classifiers[0],\n      yFeature: (_obj$classifiers$ = obj.classifiers[1]) !== null && _obj$classifiers$ !== void 0 ? _obj$classifiers$ : obj.classifiers[0],\n      slice: obj.slice,\n      size: obj.size,\n      metric: obj.metric,\n      classifiers: obj.classifiers\n    };\n  });\n\n  function countCommonSamples(slice1, slice2) {\n    let arr1 = samples[slice1];\n    let arr2 = samples[slice2];\n    if (!arr1 || !arr2) return 0;\n    arr1 = arr1.sort().slice(0, 1000);\n    arr2 = arr2.sort().slice(0, 1000);\n    return arr1.filter(sample => arr2.includes(sample)).length;\n  }\n\n  const links = [];\n\n  for (let i = 0; i < nodes.length; i++) {\n    for (let j = i + 1; j < nodes.length; j++) {\n      const count = countCommonSamples(nodes[i].slice, nodes[j].slice);\n\n      if (count > edgeFiltering) {\n        links.push({\n          source: i,\n          target: j,\n          sliceSource: nodes[i].slice,\n          sliceTarget: nodes[j].slice,\n          count: count\n        });\n      }\n    }\n  }\n\n  const graph = {\n    nodes: nodes,\n    links: links\n  };\n\n  function clamp(x, lo, hi) {\n    return x < lo ? lo : x > hi ? hi : x;\n  }\n\n  const ref = useD3(svg => {\n    svg = d3.select('.svg').style('width', '60%').style('height', '60%');\n    const link = svg.selectAll('.link').data(graph.links).join('line').classed('link', true);\n    const node = svg.selectAll('.node').data(graph.nodes).join('circle').attr('r', function (d) {\n      return d.radius;\n    }).style('fill', function (d) {\n      if (d.slice === selected) {\n        return d3.interpolateGreys(0.5);\n      }\n\n      if (overperforming) return d3.interpolateBlues(Math.abs((d.metric - model) / model));\n      return d3.interpolateReds(Math.abs((d.metric - model) / model));\n    }).classed('node', true).classed('fixed', d => d.fx !== undefined).on('mouseover', function (event, d) {\n      d3.select(this).attr('r', d.radius).style('opacity', '0.7');\n      d3.select('.tooltip').transition().duration(200).style('opacity', 0.9).style('left', Math.min(Math.max(0, d.x), width) + 100 + 'px').style('top', Math.min(height, Math.max(0, d.y)) + 'px');\n      d3.select('.tooltip').html('<strong>Slice Description: </strong>' + '<br><div style={{margin: \"1rem\"}}> </div>' + d.slice + '<br>' + '<strong>Size: </strong>' + '<br>' + d.size + ' samples' + '<br>' + '<strong>' + metric + ': ' + '</strong>' + '<br>' + d.metric.toFixed(2) + '<br>' + `(${Math.round((d.metric - model) / model * 100)}% difference)`);\n    }).on('mouseout', function (d, i) {\n      d3.select(this).attr('r', i.radius).style('opacity', '1');\n      d3.select('.tooltip').transition().style('opacity', 0).style('left', 0 + 'px').style('top', 0 + 'px');\n    }).on('click', click);\n    const simulation = d3.forceSimulation().nodes(graph.nodes).force('charge', d3.forceManyBody().strength(-50)).force('center', d3.forceCenter(width / 2, height / 2).strength(0.1)).force('x', d3.forceX().x(function (d) {\n      return xCenter[features.indexOf(d.xFeature)];\n    })).force('y', d3.forceY().y(function (d) {\n      if (degree > 1) {\n        return yCenter[features.indexOf(d.yFeature)];\n      } else {\n        return height / 4;\n      }\n    })).force('link', d3.forceLink(graph.links).strength(d => {\n      return d.count / 10000 * edgeForce;\n    })).force('collision', d3.forceCollide().radius(function (d) {\n      return d.radius;\n    })).on('tick', tick);\n\n    if (pointerMode === 'drag') {\n      const drag = d3.drag().on('start', dragstart).on('drag', dragged);\n      node.call(drag).on('click', click);\n    }\n\n    function tick() {\n      link.attr('x1', d => d.source.x).attr('y1', d => d.source.y).attr('x2', d => d.target.x).attr('y2', d => d.target.y).style('stroke-width', d => Math.pow(d.count / 1000, 2) * edgeThickness);\n      node.attr('cx', d => Math.max(Math.min(d.x, width), d.radius)).attr('cy', d => Math.max(Math.min(d.y, height), d.radius));\n    }\n\n    function click(event, d) {\n      if (pointerMode === 'select') {\n        setSelected(d.slice);\n        setDetails({\n          slice: d.slice,\n          size: d.size,\n          metric: d.metric,\n          similarSlices: links.map(link => {\n            if (link.count > edgeFiltering && link.sliceSource === d.slice) {\n              return link.sliceTarget;\n            } else if (link.count > edgeFiltering && link.sliceTarget === d.slice) {\n              return link.sliceSource;\n            }\n\n            return undefined;\n          }).filter(link => link !== undefined)\n        });\n      } else {\n        delete d.fx;\n        delete d.fy;\n        d3.select(this).classed('fixed', false);\n        d3.select(this).style('fill', () => {\n          if (overperforming) return d3.interpolateBlues(Math.abs((d.metric - model) / model));\n          return d3.interpolateReds(Math.abs((d.metric - model) / model));\n        });\n        simulation.alpha(1).restart();\n      }\n    }\n\n    function dragstart(event, d) {\n      d3.select(this).classed('fixed', true);\n      d3.select(this).style('fill', 'lightgray');\n    }\n\n    function dragged(event, d) {\n      d.fx = clamp(event.x, 0, width);\n      d.fy = clamp(event.y, 0, height);\n      simulation.alpha(1).restart();\n    }\n\n    d3.select('svg g').remove();\n  }, [data, value]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    style: {\n      overflow: 'scroll'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tooltip\",\n      style: {\n        position: 'absolute',\n        background: '#e6e6e6',\n        borderRadius: '0.5rem',\n        padding: '0.5rem'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \"svg\",\n      width: width,\n      height: height,\n      children: /*#__PURE__*/_jsxDEV(\"g\", {\n        transform: \"translate(50, 200)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: forceUpdate,\n      style: {\n        margin: '1rem'\n      },\n      children: \"Recenter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 301,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GraphLayout, \"se0z3QtA6TKOc/kTevbgmKqdIiE=\", false, function () {\n  return [useForceUpdate, useD3];\n});\n\n_c = GraphLayout;\nexport default GraphLayout;\n\nvar _c;\n\n$RefreshReg$(_c, \"GraphLayout\");","map":{"version":3,"sources":["/Users/davidmunechika/Documents/Code/visual-auditor/src/components/Main/GraphLayout.js"],"names":["useD3","React","d3","Button","logLossSamples","reverseLogLossSamples","accuracySamples","precisionSamples","GraphLayout","data","degree","metric","model","overperforming","radiusType","edgeFiltering","edgeThickness","edgeForce","setDetails","pointerMode","selected","setSelected","useState","value","setValue","useForceUpdate","forceUpdate","width","height","features","samples","forEach","obj","classifiers","str","slice","indexOf","temp","substring","push","includes","console","log","xCenter","yCenter","i","length","nodes","map","radius","Math","size","sqrt","category","xFeature","yFeature","countCommonSamples","slice1","slice2","arr1","arr2","sort","filter","sample","links","j","count","source","target","sliceSource","sliceTarget","graph","clamp","x","lo","hi","ref","svg","select","style","link","selectAll","join","classed","node","attr","d","interpolateGreys","interpolateBlues","abs","interpolateReds","fx","undefined","on","event","transition","duration","min","max","y","html","toFixed","round","click","simulation","forceSimulation","force","forceManyBody","strength","forceCenter","forceX","forceY","forceLink","forceCollide","tick","drag","dragstart","dragged","call","pow","similarSlices","fy","alpha","restart","remove","overflow","position","background","borderRadius","padding","margin"],"mappings":"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","sourcesContent":["import { useD3 } from '../../hooks/useD3';\nimport React from 'react';\nimport * as d3 from 'd3';\nimport './GraphLayout.css';\nimport Button from '@mui/material/Button';\nimport logLossSamples from '../../data/loglosssamples.json';\nimport reverseLogLossSamples from '../../data/reverseloglosssamples.json';\nimport accuracySamples from '../../data/accuracysamples.json';\nimport precisionSamples from '../../data/precisionsamples.json';\n\nfunction GraphLayout({\n  data,\n  degree,\n  metric,\n  model,\n  overperforming,\n  radiusType,\n  edgeFiltering,\n  edgeThickness,\n  edgeForce,\n  setDetails,\n  pointerMode,\n}) {\n  const [selected, setSelected] = React.useState(null);\n  const [value, setValue] = React.useState(0); // integer state\n  function useForceUpdate() {\n    return () => setValue((value) => value + 1); // update the state to force render\n  }\n  const forceUpdate = useForceUpdate();\n\n  const width = 800;\n  const height = 600;\n\n  const features = [];\n\n  let samples;\n\n  switch (metric) {\n    case 'Log Loss':\n      if (overperforming) samples = reverseLogLossSamples;\n      else samples = logLossSamples;\n      break;\n    case 'Accuracy':\n      if (overperforming) samples = accuracySamples;\n      else samples = accuracySamples;\n      break;\n    case 'Precision':\n      if (overperforming) samples = precisionSamples;\n      else samples = precisionSamples;\n      break;\n    default:\n      if (overperforming) samples = reverseLogLossSamples;\n      else samples = logLossSamples;\n      break;\n  }\n\n  data.forEach((obj) => {\n    obj.classifiers = [];\n    let str = obj.slice;\n    while (str.indexOf(':') !== -1) {\n      let temp = str.substring(0, str.indexOf(':'));\n      obj.classifiers.push(temp);\n      if (!features.includes(temp)) features.push(temp);\n      if (str.indexOf(',') !== -1) {\n        str = str.substring(str.indexOf(',') + 2);\n      } else {\n        str = '';\n      }\n    }\n  });\n\n  console.log(features);\n\n  const xCenter = [];\n  const yCenter = [];\n\n  for (let i = 0; i < features.length; i++) {\n    xCenter.push(((width - 200) / features.length) * i + 100);\n    yCenter.push(((height - 200) / features.length) * i + 100);\n  }\n\n  const nodes = data.map((obj) => {\n    return {\n      radius: radiusType === 'log' ? Math.log(obj.size) : Math.sqrt(obj.size),\n      category: obj.degree,\n      xFeature: obj.classifiers[0],\n      yFeature: obj.classifiers[1] ?? obj.classifiers[0],\n      slice: obj.slice,\n      size: obj.size,\n      metric: obj.metric,\n      classifiers: obj.classifiers,\n    };\n  });\n\n  function countCommonSamples(slice1, slice2) {\n    let arr1 = samples[slice1];\n    let arr2 = samples[slice2];\n    if (!arr1 || !arr2) return 0;\n    arr1 = arr1.sort().slice(0, 1000);\n    arr2 = arr2.sort().slice(0, 1000);\n    return arr1.filter((sample) => arr2.includes(sample)).length;\n  }\n\n  const links = [];\n\n  for (let i = 0; i < nodes.length; i++) {\n    for (let j = i + 1; j < nodes.length; j++) {\n      const count = countCommonSamples(nodes[i].slice, nodes[j].slice);\n      if (count > edgeFiltering) {\n        links.push({\n          source: i,\n          target: j,\n          sliceSource: nodes[i].slice,\n          sliceTarget: nodes[j].slice,\n          count: count,\n        });\n      }\n    }\n  }\n\n  const graph = {\n    nodes: nodes,\n    links: links,\n  };\n\n  function clamp(x, lo, hi) {\n    return x < lo ? lo : x > hi ? hi : x;\n  }\n\n  const ref = useD3(\n    (svg) => {\n      svg = d3.select('.svg').style('width', '60%').style('height', '60%');\n      const link = svg\n        .selectAll('.link')\n        .data(graph.links)\n        .join('line')\n        .classed('link', true);\n      const node = svg\n        .selectAll('.node')\n        .data(graph.nodes)\n        .join('circle')\n        .attr('r', function (d) {\n          return d.radius;\n        })\n        .style('fill', function (d) {\n          if (d.slice === selected) {\n            return d3.interpolateGreys(0.5);\n          }\n          if (overperforming)\n            return d3.interpolateBlues(Math.abs((d.metric - model) / model));\n          return d3.interpolateReds(Math.abs((d.metric - model) / model));\n        })\n        .classed('node', true)\n        .classed('fixed', (d) => d.fx !== undefined)\n        .on('mouseover', function (event, d) {\n          d3.select(this).attr('r', d.radius).style('opacity', '0.7');\n          d3.select('.tooltip')\n            .transition()\n            .duration(200)\n            .style('opacity', 0.9)\n            .style('left', Math.min(Math.max(0, d.x), width) + 100 + 'px')\n            .style('top', Math.min(height, Math.max(0, d.y)) + 'px');\n          d3.select('.tooltip').html(\n            '<strong>Slice Description: </strong>' +\n              '<br><div style={{margin: \"1rem\"}}> </div>' +\n              d.slice +\n              '<br>' +\n              '<strong>Size: </strong>' +\n              '<br>' +\n              d.size +\n              ' samples' +\n              '<br>' +\n              '<strong>' +\n              metric +\n              ': ' +\n              '</strong>' +\n              '<br>' +\n              d.metric.toFixed(2) +\n              '<br>' +\n              `(${Math.round(((d.metric - model) / model) * 100)}% difference)`\n          );\n        })\n        .on('mouseout', function (d, i) {\n          d3.select(this).attr('r', i.radius).style('opacity', '1');\n          d3.select('.tooltip')\n            .transition()\n            .style('opacity', 0)\n            .style('left', 0 + 'px')\n            .style('top', 0 + 'px');\n        })\n        .on('click', click);\n\n      const simulation = d3\n        .forceSimulation()\n        .nodes(graph.nodes)\n        .force('charge', d3.forceManyBody().strength(-50))\n        .force('center', d3.forceCenter(width / 2, height / 2).strength(0.1))\n        .force(\n          'x',\n          d3.forceX().x(function (d) {\n            return xCenter[features.indexOf(d.xFeature)];\n          })\n        )\n        .force(\n          'y',\n          d3.forceY().y(function (d) {\n            if (degree > 1) {\n              return yCenter[features.indexOf(d.yFeature)];\n            } else {\n              return height / 4;\n            }\n          })\n        )\n        .force(\n          'link',\n          d3.forceLink(graph.links).strength((d) => {\n            return (d.count / 10000) * edgeForce;\n          })\n        )\n        .force(\n          'collision',\n          d3.forceCollide().radius(function (d) {\n            return d.radius;\n          })\n        )\n        .on('tick', tick);\n      if (pointerMode === 'drag') {\n        const drag = d3.drag().on('start', dragstart).on('drag', dragged);\n\n        node.call(drag).on('click', click);\n      }\n\n      function tick() {\n        link\n          .attr('x1', (d) => d.source.x)\n          .attr('y1', (d) => d.source.y)\n          .attr('x2', (d) => d.target.x)\n          .attr('y2', (d) => d.target.y)\n          .style(\n            'stroke-width',\n            (d) => Math.pow(d.count / 1000, 2) * edgeThickness\n          );\n        node\n          .attr('cx', (d) => Math.max(Math.min(d.x, width), d.radius))\n          .attr('cy', (d) => Math.max(Math.min(d.y, height), d.radius));\n      }\n      function click(event, d) {\n        if (pointerMode === 'select') {\n          setSelected(d.slice);\n          setDetails({\n            slice: d.slice,\n            size: d.size,\n            metric: d.metric,\n            similarSlices: links\n              .map((link) => {\n                if (\n                  link.count > edgeFiltering &&\n                  link.sliceSource === d.slice\n                ) {\n                  return link.sliceTarget;\n                } else if (\n                  link.count > edgeFiltering &&\n                  link.sliceTarget === d.slice\n                ) {\n                  return link.sliceSource;\n                }\n                return undefined;\n              })\n              .filter((link) => link !== undefined),\n          });\n        } else {\n          delete d.fx;\n          delete d.fy;\n          d3.select(this).classed('fixed', false);\n          d3.select(this).style('fill', () => {\n            if (overperforming)\n              return d3.interpolateBlues(Math.abs((d.metric - model) / model));\n            return d3.interpolateReds(Math.abs((d.metric - model) / model));\n          });\n          simulation.alpha(1).restart();\n        }\n      }\n\n      function dragstart(event, d) {\n        d3.select(this).classed('fixed', true);\n        d3.select(this).style('fill', 'lightgray');\n      }\n\n      function dragged(event, d) {\n        d.fx = clamp(event.x, 0, width);\n        d.fy = clamp(event.y, 0, height);\n        simulation.alpha(1).restart();\n      }\n\n      d3.select('svg g').remove();\n    },\n    [data, value]\n  );\n\n  return (\n    <div className='container' style={{ overflow: 'scroll' }}>\n      <div\n        className='tooltip'\n        style={{\n          position: 'absolute',\n          background: '#e6e6e6',\n          borderRadius: '0.5rem',\n          padding: '0.5rem',\n        }}\n      ></div>\n      <svg className='svg' width={width} height={height}>\n        <g transform='translate(50, 200)'></g>\n      </svg>\n      <br />\n      <Button\n        variant='outlined'\n        onClick={forceUpdate}\n        style={{ margin: '1rem' }}\n      >\n        Recenter\n      </Button>\n    </div>\n  );\n}\n\nexport default GraphLayout;\n"]},"metadata":{},"sourceType":"module"}