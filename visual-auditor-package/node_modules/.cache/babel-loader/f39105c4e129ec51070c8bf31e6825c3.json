{"ast":null,"code":"var _jsxFileName = \"/Users/davidmunechika/Documents/Code/visual-auditor/src/components/Main/SliceBarChart.js\",\n    _s2 = $RefreshSig$();\n\nimport { useD3 } from '../../hooks/useD3';\nimport React from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SliceBarChart({\n  data,\n  model,\n  max,\n  overperforming,\n  metric\n}) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  function useForceUpdate() {\n    _s();\n\n    const [value, setValue] = React.useState(0); // integer state\n\n    return () => setValue(value => value + 1); // update the state to force render\n  }\n\n  _s(useForceUpdate, \"qPBOvRc2Co1iWTsdTL0g7j/rpjU=\");\n\n  const forceUpdate = useForceUpdate();\n  const ref = useD3(svg => {\n    svg.selectAll('*').remove();\n    const height = 600;\n    const width = 875;\n    const margin = {\n      top: 20,\n      right: 30,\n      bottom: 50,\n      left: 80\n    };\n    let div = d3.select('.tooltip').style('opacity', 0).style('width', '200px').style('height', '150px').style('padding', '1rem 0.5rem 0 0.5rem').style('border-radius', '20px');\n    const x = d3.scaleBand().domain(data.map(d => d.slice)).rangeRound([margin.left, width - margin.right]).padding(0.1);\n    const y1 = d3.scaleLinear().domain([0, max]).rangeRound([height - margin.bottom, margin.top]);\n\n    const xAxis = g => g.attr('transform', `translate(0,${height - margin.bottom})`).call(d3.axisBottom(x).tickSizeOuter(0)).selectAll('text').attr('transform', 'translate(-10,0)rotate(-45)').style('text-anchor', 'end');\n\n    const y1Axis = g => g.attr('transform', `translate(${margin.left},0)`).style('color', 'steelblue').call(d3.axisLeft(y1).ticks(null, 's')).call(g => g.select('.domain').remove()).call(g => g.append('text').attr('x', -margin.left).attr('y', 10).attr('fill', 'currentColor').attr('text-anchor', 'start').text(data.y1));\n\n    svg.select('.x-axis').call(xAxis);\n    svg.select('.y-axis').call(y1Axis);\n    svg.select('.plot-area').selectAll('.bar').data(data).join('rect').attr('class', 'bar').style('fill', d => {\n      if (overperforming) return d3.interpolateBlues(Math.abs((d.metric - model) / model));\n      return d3.interpolateReds(Math.abs((d.metric - model) / model));\n    }).on('mouseover', function (event, d) {\n      d3.select(this).style('opacity', '0.7');\n      div.transition().duration(200).style('opacity', 0.9).style('left', width + 'px').style('top', height / 4 + 'px');\n      div.html('<strong>Slice Description: </strong>' + '<br><div style={{margin: \"1rem\"}}> </div>' + d.slice + '<br>' + '<strong>Size: </strong>' + '<br>' + d.size + ' samples' + '<br>' + '<strong>Metric: </strong>' + '<br>' + d.metric.toFixed(2) + '<br>' + `(${Math.round((d.metric - model) / model * 100)}% difference)`);\n    }).on('mouseout', function (d) {\n      d3.select(this).style('opacity', '1');\n      div.transition().style('opacity', 0).style('left', width + 'px').style('top', height + 'px');\n    }).attr('x', d => x(d.slice)).attr('width', x.bandwidth()).attr('y', d => y1(0) - margin.bottom).attr('height', d => height - y1(0)); // Animation\n\n    svg.selectAll('rect').transition().duration(800).attr('y', function (d) {\n      return y1(d.metric) - margin.bottom;\n    }).attr('height', function (d) {\n      return height - y1(d.metric);\n    }).delay(function (d, i) {\n      return i * 100;\n    });\n    svg.append('svg:line').attr('x1', 60).attr('x2', width).attr('y1', y1(model)).attr('y2', y1(model)).style('stroke', '#e6e6e6');\n    svg.append('text').text('Overall').attr('x', 0).attr('y', y1(model) + 5).style('fill', 'gray');\n  }, [data, metric]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tooltip\",\n      style: {\n        position: 'absolute',\n        background: 'lightgray'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: ref,\n      style: {\n        height: 700,\n        width: '60%',\n        margin: 'auto',\n        display: 'block'\n      },\n      onMouseEnter: forceUpdate,\n      onMouseLeave: forceUpdate,\n      children: [/*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"plot-area\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"x-axis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"y-axis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(SliceBarChart, \"P4nBBCy+9t409b+Cs/IxSWJG88I=\", false, function () {\n  return [useForceUpdate, useD3];\n});\n\n_c = SliceBarChart;\nexport default SliceBarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"SliceBarChart\");","map":{"version":3,"sources":["/Users/davidmunechika/Documents/Code/visual-auditor/src/components/Main/SliceBarChart.js"],"names":["useD3","React","d3","SliceBarChart","data","model","max","overperforming","metric","useForceUpdate","value","setValue","useState","forceUpdate","ref","svg","selectAll","remove","height","width","margin","top","right","bottom","left","div","select","style","x","scaleBand","domain","map","d","slice","rangeRound","padding","y1","scaleLinear","xAxis","g","attr","call","axisBottom","tickSizeOuter","y1Axis","axisLeft","ticks","append","text","join","interpolateBlues","Math","abs","interpolateReds","on","event","transition","duration","html","size","toFixed","round","bandwidth","delay","i","position","background","display"],"mappings":"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","sourcesContent":["import { useD3 } from '../../hooks/useD3';\nimport React from 'react';\nimport * as d3 from 'd3';\n\nfunction SliceBarChart({ data, model, max, overperforming, metric }) {\n  function useForceUpdate() {\n    const [value, setValue] = React.useState(0); // integer state\n    return () => setValue((value) => value + 1); // update the state to force render\n  }\n  const forceUpdate = useForceUpdate();\n\n  const ref = useD3(\n    (svg) => {\n      svg.selectAll('*').remove();\n      const height = 600;\n      const width = 875;\n      const margin = { top: 20, right: 30, bottom: 50, left: 80 };\n\n      let div = d3\n        .select('.tooltip')\n        .style('opacity', 0)\n        .style('width', '200px')\n        .style('height', '150px')\n        .style('padding', '1rem 0.5rem 0 0.5rem')\n        .style('border-radius', '20px');\n\n      const x = d3\n        .scaleBand()\n        .domain(data.map((d) => d.slice))\n        .rangeRound([margin.left, width - margin.right])\n        .padding(0.1);\n\n      const y1 = d3\n        .scaleLinear()\n        .domain([0, max])\n        .rangeRound([height - margin.bottom, margin.top]);\n\n      const xAxis = (g) =>\n        g\n          .attr('transform', `translate(0,${height - margin.bottom})`)\n          .call(d3.axisBottom(x).tickSizeOuter(0))\n          .selectAll('text')\n          .attr('transform', 'translate(-10,0)rotate(-45)')\n          .style('text-anchor', 'end');\n\n      const y1Axis = (g) =>\n        g\n          .attr('transform', `translate(${margin.left},0)`)\n          .style('color', 'steelblue')\n          .call(d3.axisLeft(y1).ticks(null, 's'))\n          .call((g) => g.select('.domain').remove())\n          .call((g) =>\n            g\n              .append('text')\n              .attr('x', -margin.left)\n              .attr('y', 10)\n              .attr('fill', 'currentColor')\n              .attr('text-anchor', 'start')\n              .text(data.y1)\n          );\n\n      svg.select('.x-axis').call(xAxis);\n      svg.select('.y-axis').call(y1Axis);\n\n      svg\n        .select('.plot-area')\n        .selectAll('.bar')\n        .data(data)\n        .join('rect')\n        .attr('class', 'bar')\n        .style('fill', (d) => {\n          if (overperforming)\n            return d3.interpolateBlues(Math.abs((d.metric - model) / model));\n          return d3.interpolateReds(Math.abs((d.metric - model) / model));\n        })\n        .on('mouseover', function (event, d) {\n          d3.select(this).style('opacity', '0.7');\n          div\n            .transition()\n            .duration(200)\n            .style('opacity', 0.9)\n            .style('left', width + 'px')\n            .style('top', height / 4 + 'px');\n          div.html(\n            '<strong>Slice Description: </strong>' +\n              '<br><div style={{margin: \"1rem\"}}> </div>' +\n              d.slice +\n              '<br>' +\n              '<strong>Size: </strong>' +\n              '<br>' +\n              d.size +\n              ' samples' +\n              '<br>' +\n              '<strong>Metric: </strong>' +\n              '<br>' +\n              d.metric.toFixed(2) +\n              '<br>' +\n              `(${Math.round(((d.metric - model) / model) * 100)}% difference)`\n          );\n        })\n        .on('mouseout', function (d) {\n          d3.select(this).style('opacity', '1');\n          div\n            .transition()\n            .style('opacity', 0)\n            .style('left', width + 'px')\n            .style('top', height + 'px');\n        })\n        .attr('x', (d) => x(d.slice))\n        .attr('width', x.bandwidth())\n        .attr('y', (d) => y1(0) - margin.bottom)\n        .attr('height', (d) => height - y1(0));\n\n      // Animation\n      svg\n        .selectAll('rect')\n        .transition()\n        .duration(800)\n        .attr('y', function (d) {\n          return y1(d.metric) - margin.bottom;\n        })\n        .attr('height', function (d) {\n          return height - y1(d.metric);\n        })\n        .delay(function (d, i) {\n          return i * 100;\n        });\n\n      svg\n        .append('svg:line')\n        .attr('x1', 60)\n        .attr('x2', width)\n        .attr('y1', y1(model))\n        .attr('y2', y1(model))\n        .style('stroke', '#e6e6e6');\n      svg\n        .append('text')\n        .text('Overall')\n        .attr('x', 0)\n        .attr('y', y1(model) + 5)\n        .style('fill', 'gray');\n    },\n    [data, metric]\n  );\n\n  return (\n    <div>\n      <div\n        className='tooltip'\n        style={{ position: 'absolute', background: 'lightgray' }}\n      ></div>\n      <svg\n        ref={ref}\n        style={{\n          height: 700,\n          width: '60%',\n          margin: 'auto',\n          display: 'block',\n        }}\n        onMouseEnter={forceUpdate}\n        onMouseLeave={forceUpdate}\n      >\n        <g className='plot-area' />\n        <g className='x-axis' />\n        <g className='y-axis' />\n      </svg>\n    </div>\n  );\n}\n\nexport default SliceBarChart;\n"]},"metadata":{},"sourceType":"module"}