{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@mui/utils\";\nimport { isUnitless, convertLength, responsiveProperty, alignProperty, fontGrid } from './cssUtils';\nexport default function responsiveFontSizes(themeInput) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$breakpoints = options.breakpoints,\n      breakpoints = _options$breakpoints === void 0 ? ['sm', 'md', 'lg'] : _options$breakpoints,\n      _options$disableAlign = options.disableAlign,\n      disableAlign = _options$disableAlign === void 0 ? false : _options$disableAlign,\n      _options$factor = options.factor,\n      factor = _options$factor === void 0 ? 2 : _options$factor,\n      _options$variants = options.variants,\n      variants = _options$variants === void 0 ? ['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline'] : _options$variants;\n\n  var theme = _extends({}, themeInput);\n\n  theme.typography = _extends({}, theme.typography);\n  var typography = theme.typography; // Convert between css lengths e.g. em->px or px->rem\n  // Set the baseFontSize for your project. Defaults to 16px (also the browser default).\n\n  var convert = convertLength(typography.htmlFontSize);\n  var breakpointValues = breakpoints.map(function (x) {\n    return theme.breakpoints.values[x];\n  });\n  variants.forEach(function (variant) {\n    var style = typography[variant];\n    var remFontSize = parseFloat(convert(style.fontSize, 'rem'));\n\n    if (remFontSize <= 1) {\n      return;\n    }\n\n    var maxFontSize = remFontSize;\n    var minFontSize = 1 + (maxFontSize - 1) / factor;\n    var lineHeight = style.lineHeight;\n\n    if (!isUnitless(lineHeight) && !disableAlign) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? \"MUI: Unsupported non-unitless line height with grid alignment.\\nUse unitless line heights instead.\" : _formatMuiErrorMessage(6));\n    }\n\n    if (!isUnitless(lineHeight)) {\n      // make it unitless\n      lineHeight = parseFloat(convert(lineHeight, 'rem')) / parseFloat(remFontSize);\n    }\n\n    var transform = null;\n\n    if (!disableAlign) {\n      transform = function transform(value) {\n        return alignProperty({\n          size: value,\n          grid: fontGrid({\n            pixels: 4,\n            lineHeight: lineHeight,\n            htmlFontSize: typography.htmlFontSize\n          })\n        });\n      };\n    }\n\n    typography[variant] = _extends({}, style, responsiveProperty({\n      cssProperty: 'fontSize',\n      min: minFontSize,\n      max: maxFontSize,\n      unit: 'rem',\n      breakpoints: breakpointValues,\n      transform: transform\n    }));\n  });\n  return theme;\n}","map":{"version":3,"sources":["/Users/davidmunechika/Documents/Code/visual-auditor/node_modules/@mui/material/styles/responsiveFontSizes.js"],"names":["_extends","formatMuiErrorMessage","_formatMuiErrorMessage","isUnitless","convertLength","responsiveProperty","alignProperty","fontGrid","responsiveFontSizes","themeInput","options","breakpoints","disableAlign","factor","variants","theme","typography","convert","htmlFontSize","breakpointValues","map","x","values","forEach","variant","style","remFontSize","parseFloat","fontSize","maxFontSize","minFontSize","lineHeight","Error","process","env","NODE_ENV","transform","value","size","grid","pixels","cssProperty","min","max","unit"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@mui/utils\";\nimport { isUnitless, convertLength, responsiveProperty, alignProperty, fontGrid } from './cssUtils';\nexport default function responsiveFontSizes(themeInput, options = {}) {\n  const {\n    breakpoints = ['sm', 'md', 'lg'],\n    disableAlign = false,\n    factor = 2,\n    variants = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline']\n  } = options;\n\n  const theme = _extends({}, themeInput);\n\n  theme.typography = _extends({}, theme.typography);\n  const typography = theme.typography; // Convert between css lengths e.g. em->px or px->rem\n  // Set the baseFontSize for your project. Defaults to 16px (also the browser default).\n\n  const convert = convertLength(typography.htmlFontSize);\n  const breakpointValues = breakpoints.map(x => theme.breakpoints.values[x]);\n  variants.forEach(variant => {\n    const style = typography[variant];\n    const remFontSize = parseFloat(convert(style.fontSize, 'rem'));\n\n    if (remFontSize <= 1) {\n      return;\n    }\n\n    const maxFontSize = remFontSize;\n    const minFontSize = 1 + (maxFontSize - 1) / factor;\n    let {\n      lineHeight\n    } = style;\n\n    if (!isUnitless(lineHeight) && !disableAlign) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: Unsupported non-unitless line height with grid alignment.\nUse unitless line heights instead.` : _formatMuiErrorMessage(6));\n    }\n\n    if (!isUnitless(lineHeight)) {\n      // make it unitless\n      lineHeight = parseFloat(convert(lineHeight, 'rem')) / parseFloat(remFontSize);\n    }\n\n    let transform = null;\n\n    if (!disableAlign) {\n      transform = value => alignProperty({\n        size: value,\n        grid: fontGrid({\n          pixels: 4,\n          lineHeight,\n          htmlFontSize: typography.htmlFontSize\n        })\n      });\n    }\n\n    typography[variant] = _extends({}, style, responsiveProperty({\n      cssProperty: 'fontSize',\n      min: minFontSize,\n      max: maxFontSize,\n      unit: 'rem',\n      breakpoints: breakpointValues,\n      transform\n    }));\n  });\n  return theme;\n}"]},"metadata":{},"sourceType":"module"}