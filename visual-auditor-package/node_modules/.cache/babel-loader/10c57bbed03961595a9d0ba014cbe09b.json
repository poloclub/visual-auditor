{"ast":null,"code":"var _jsxFileName = \"/Users/davidmunechika/Documents/Code/visual-auditor/src/components/Nav/Nav.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport SettingsOutlinedIcon from '@mui/icons-material/SettingsOutlined';\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Slider from '@mui/material/Slider';\nimport './Nav.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Nav = ({\n  view,\n  setView,\n  pointerMode,\n  setPointerMode\n}) => {\n  _s();\n\n  // const [thicknessValue, setThicknessValue] = React.useState(edgeThickness);\n  const [pointerModeValue, setPointerModeValue] = React.useState(pointerMode);\n  const [open, setOpen] = React.useState(false);\n\n  const handleViewChange = event => {\n    setView(event.target.value);\n  };\n\n  const handleSettingsOpen = () => {\n    setOpen(true);\n  };\n\n  const handleSubmit = () => {\n    // setEdgeThickness(thicknessValue);\n    setOpen(false);\n    setPointerMode(pointerModeValue);\n  };\n\n  const boxStyle = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 300,\n    bgcolor: 'background.paper',\n    boxShadow: 24,\n    p: 4,\n    borderRadius: '0.5rem'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nav-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Adults Dataset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      sx: {\n        s: 1,\n        minWidth: 175\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        children: \"View:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        value: view,\n        label: \"View\",\n        onChange: handleViewChange,\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: 'bar',\n          children: \"Bar Graph\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: 'force',\n          children: \"Force Layout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: 'graph',\n          children: \"Graph Layout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Nav, \"d4RfbJDayLcZJ0jyNvZi6G25pbI=\");\n\n_c = Nav;\nexport default Nav;\n\nvar _c;\n\n$RefreshReg$(_c, \"Nav\");","map":{"version":3,"sources":["/Users/davidmunechika/Documents/Code/visual-auditor/src/components/Nav/Nav.js"],"names":["React","FormControl","Select","InputLabel","MenuItem","SettingsOutlinedIcon","Modal","Box","Button","Slider","Nav","view","setView","pointerMode","setPointerMode","pointerModeValue","setPointerModeValue","useState","open","setOpen","handleViewChange","event","target","value","handleSettingsOpen","handleSubmit","boxStyle","position","top","left","transform","width","bgcolor","boxShadow","p","borderRadius","s","minWidth"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,oBAAP,MAAiC,sCAAjC;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA,WAAjB;AAA8BC,EAAAA;AAA9B,CAAD,KAAoD;AAAA;;AAC9D;AACA,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0ChB,KAAK,CAACiB,QAAN,CAAeJ,WAAf,CAAhD;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBnB,KAAK,CAACiB,QAAN,CAAe,KAAf,CAAxB;;AACA,QAAMG,gBAAgB,GAAIC,KAAD,IAAW;AAClCT,IAAAA,OAAO,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACD,GAFD;;AAIA,QAAMC,kBAAkB,GAAG,MAAM;AAC/BL,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,QAAMM,YAAY,GAAG,MAAM;AACzB;AACAN,IAAAA,OAAO,CAAC,KAAD,CAAP;AACAL,IAAAA,cAAc,CAACC,gBAAD,CAAd;AACD,GAJD;;AAMA,QAAMW,QAAQ,GAAG;AACfC,IAAAA,QAAQ,EAAE,UADK;AAEfC,IAAAA,GAAG,EAAE,KAFU;AAGfC,IAAAA,IAAI,EAAE,KAHS;AAIfC,IAAAA,SAAS,EAAE,uBAJI;AAKfC,IAAAA,KAAK,EAAE,GALQ;AAMfC,IAAAA,OAAO,EAAE,kBANM;AAOfC,IAAAA,SAAS,EAAE,EAPI;AAQfC,IAAAA,CAAC,EAAE,CARY;AASfC,IAAAA,YAAY,EAAE;AATC,GAAjB;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,WAAD;AAAa,MAAA,EAAE,EAAE;AAAEC,QAAAA,CAAC,EAAE,CAAL;AAAQC,QAAAA,QAAQ,EAAE;AAAlB,OAAjB;AAAA,8BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAE1B,IAAf;AAAqB,QAAA,KAAK,EAAC,MAA3B;AAAkC,QAAA,QAAQ,EAAES,gBAA5C;AAAA,gCACE,QAAC,QAAD;AAAU,UAAA,KAAK,EAAE,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,QAAD;AAAU,UAAA,KAAK,EAAE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,QAAD;AAAU,UAAA,KAAK,EAAE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0DD,CAxFD;;GAAMV,G;;KAAAA,G;AA0FN,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport SettingsOutlinedIcon from '@mui/icons-material/SettingsOutlined';\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Slider from '@mui/material/Slider';\nimport './Nav.css';\n\nconst Nav = ({ view, setView, pointerMode, setPointerMode }) => {\n  // const [thicknessValue, setThicknessValue] = React.useState(edgeThickness);\n  const [pointerModeValue, setPointerModeValue] = React.useState(pointerMode);\n  const [open, setOpen] = React.useState(false);\n  const handleViewChange = (event) => {\n    setView(event.target.value);\n  };\n\n  const handleSettingsOpen = () => {\n    setOpen(true);\n  };\n\n  const handleSubmit = () => {\n    // setEdgeThickness(thicknessValue);\n    setOpen(false);\n    setPointerMode(pointerModeValue);\n  };\n\n  const boxStyle = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 300,\n    bgcolor: 'background.paper',\n    boxShadow: 24,\n    p: 4,\n    borderRadius: '0.5rem',\n  };\n\n  return (\n    <div className='nav-container'>\n      <h1>Adults Dataset</h1>\n      <FormControl sx={{ s: 1, minWidth: 175 }}>\n        <InputLabel>View:</InputLabel>\n        <Select value={view} label='View' onChange={handleViewChange}>\n          <MenuItem value={'bar'}>Bar Graph</MenuItem>\n          <MenuItem value={'force'}>Force Layout</MenuItem>\n          <MenuItem value={'graph'}>Graph Layout</MenuItem>\n        </Select>\n      </FormControl>\n      {/* {view === 'graph' && (\n        <SettingsOutlinedIcon\n          className='settings'\n          onClick={handleSettingsOpen}\n        />\n      )} */}\n      {/* <Modal open={open} onClose={() => setOpen(false)}>\n        <Box sx={boxStyle}>\n          <h1>Settings</h1>\n          <h2>Edge Thickness:</h2>\n          <Slider\n            aria-label='Edge Thickness'\n            defaultValue={1}\n            value={thicknessValue}\n            valueLabelDisplay='auto'\n            step={0.1}\n            min={0}\n            max={10}\n            size='small'\n            onChange={(event) => setThicknessValue(event.target.value)}\n          />\n          <h2>Cursor Mode:</h2>\n          <FormControl sx={{ s: 1, minWidth: 175 }}>\n            <InputLabel>Cursor Mode:</InputLabel>\n            <Select\n              value={pointerModeValue}\n              label='Cursor Mode'\n              onChange={(event) => setPointerModeValue(event.target.value)}\n            >\n              <MenuItem value={'select'}>Select</MenuItem>\n              <MenuItem value={'drag'}>Drag</MenuItem>\n            </Select>\n          </FormControl>\n          <div>\n            <Button\n              variant='outlined'\n              type='submit'\n              onClick={handleSubmit}\n              style={{ marginTop: '1rem' }}\n            >\n              Save\n            </Button>\n          </div>\n        </Box>\n      </Modal> */}\n    </div>\n  );\n};\n\nexport default Nav;\n"]},"metadata":{},"sourceType":"module"}