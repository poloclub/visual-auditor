{"ast":null,"code":"var _jsxFileName = \"/Users/davidmunechika/Documents/Code/visual-auditor/src/components/Main/Main.js\";\nimport React from 'react';\nimport SliceBarChart from './SliceBarChart';\nimport './Main.css';\nimport logloss from '../../data/logloss.json';\nimport accuracy from '../../data/accuracy.json';\nimport precision from '../../data/precision.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = ({\n  numFeatures,\n  sampleSize,\n  metric\n}) => {\n  console.log(metric);\n  let data;\n\n  switch (metric) {\n    case 'log loss':\n      data = Object.values(logloss['data']).map(obj => Object.values(obj)[0]);\n\n    case 'accuracy':\n      data = Object.values(precision['data']).map(obj => Object.values(obj)[0]);\n\n    default:\n      data = Object.values(logloss['data']).map(obj => Object.values(obj)[0]);\n  }\n\n  const filteredData = data.filter(obj => obj.size >= sampleSize).filter(obj => obj.degree <= numFeatures).sort(function (a, b) {\n    return a.metric - b.metric;\n  }).slice(0, 10);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: /*#__PURE__*/_jsxDEV(SliceBarChart, {\n      data: filteredData,\n      minSize: 100\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/davidmunechika/Documents/Code/visual-auditor/src/components/Main/Main.js"],"names":["React","SliceBarChart","logloss","accuracy","precision","Main","numFeatures","sampleSize","metric","console","log","data","Object","values","map","obj","filteredData","filter","size","degree","sort","a","b","slice"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAO,YAAP;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,UAAf;AAA2BC,EAAAA;AAA3B,CAAD,KAAyC;AACpDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,MAAIG,IAAJ;;AACA,UAAQH,MAAR;AACE,SAAK,UAAL;AACEG,MAAAA,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAcX,OAAO,CAAC,MAAD,CAArB,EAA+BY,GAA/B,CAAoCC,GAAD,IAASH,MAAM,CAACC,MAAP,CAAcE,GAAd,EAAmB,CAAnB,CAA5C,CAAP;;AACF,SAAK,UAAL;AACEJ,MAAAA,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAcT,SAAS,CAAC,MAAD,CAAvB,EAAiCU,GAAjC,CACJC,GAAD,IAASH,MAAM,CAACC,MAAP,CAAcE,GAAd,EAAmB,CAAnB,CADJ,CAAP;;AAGF;AACEJ,MAAAA,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAcX,OAAO,CAAC,MAAD,CAArB,EAA+BY,GAA/B,CAAoCC,GAAD,IAASH,MAAM,CAACC,MAAP,CAAcE,GAAd,EAAmB,CAAnB,CAA5C,CAAP;AARJ;;AAUA,QAAMC,YAAY,GAAGL,IAAI,CACtBM,MADkB,CACVF,GAAD,IAASA,GAAG,CAACG,IAAJ,IAAYX,UADV,EAElBU,MAFkB,CAEVF,GAAD,IAASA,GAAG,CAACI,MAAJ,IAAcb,WAFZ,EAGlBc,IAHkB,CAGb,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AACpB,WAAOD,CAAC,CAACb,MAAF,GAAWc,CAAC,CAACd,MAApB;AACD,GALkB,EAMlBe,KANkB,CAMZ,CANY,EAMT,EANS,CAArB;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACE,QAAC,aAAD;AAAe,MAAA,IAAI,EAAEP,YAArB;AAAmC,MAAA,OAAO,EAAE;AAA5C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAzBD;;KAAMX,I;AA2BN,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport SliceBarChart from './SliceBarChart';\nimport './Main.css';\nimport logloss from '../../data/logloss.json';\nimport accuracy from '../../data/accuracy.json';\nimport precision from '../../data/precision.json';\n\nconst Main = ({ numFeatures, sampleSize, metric }) => {\n  console.log(metric);\n  let data;\n  switch (metric) {\n    case 'log loss':\n      data = Object.values(logloss['data']).map((obj) => Object.values(obj)[0]);\n    case 'accuracy':\n      data = Object.values(precision['data']).map(\n        (obj) => Object.values(obj)[0]\n      );\n    default:\n      data = Object.values(logloss['data']).map((obj) => Object.values(obj)[0]);\n  }\n  const filteredData = data\n    .filter((obj) => obj.size >= sampleSize)\n    .filter((obj) => obj.degree <= numFeatures)\n    .sort(function (a, b) {\n      return a.metric - b.metric;\n    })\n    .slice(0, 10);\n  return (\n    <div className='main-container'>\n      <SliceBarChart data={filteredData} minSize={100} />\n    </div>\n  );\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}