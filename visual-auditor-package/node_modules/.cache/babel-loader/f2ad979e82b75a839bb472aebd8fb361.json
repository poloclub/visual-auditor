{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/davidmunechika/Documents/Code/Research/visual-auditor/visual-auditor-package/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _regeneratorRuntime from \"/Users/davidmunechika/Documents/Code/Research/visual-auditor/visual-auditor-package/node_modules/@babel/runtime/regenerator\";\nimport _classCallCheck from \"/Users/davidmunechika/Documents/Code/Research/visual-auditor/visual-auditor-package/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/davidmunechika/Documents/Code/Research/visual-auditor/visual-auditor-package/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(flatIterable);\n\nimport Delaunator from \"delaunator\";\nimport Path from \"./path.js\";\nimport Polygon from \"./polygon.js\";\nimport Voronoi from \"./voronoi.js\";\nvar tau = 2 * Math.PI,\n    pow = Math.pow;\n\nfunction pointX(p) {\n  return p[0];\n}\n\nfunction pointY(p) {\n  return p[1];\n} // A triangulation is collinear if all its triangles have a non-null area\n\n\nfunction collinear(d) {\n  var triangles = d.triangles,\n      coords = d.coords;\n\n  for (var i = 0; i < triangles.length; i += 3) {\n    var a = 2 * triangles[i],\n        b = 2 * triangles[i + 1],\n        c = 2 * triangles[i + 2],\n        cross = (coords[c] - coords[a]) * (coords[b + 1] - coords[a + 1]) - (coords[b] - coords[a]) * (coords[c + 1] - coords[a + 1]);\n    if (cross > 1e-10) return false;\n  }\n\n  return true;\n}\n\nfunction jitter(x, y, r) {\n  return [x + Math.sin(x + y) * r, y + Math.cos(x - y) * r];\n}\n\nvar Delaunay = /*#__PURE__*/function () {\n  function Delaunay(points) {\n    _classCallCheck(this, Delaunay);\n\n    this._delaunator = new Delaunator(points);\n    this.inedges = new Int32Array(points.length / 2);\n    this._hullIndex = new Int32Array(points.length / 2);\n    this.points = this._delaunator.coords;\n\n    this._init();\n  }\n\n  _createClass(Delaunay, [{\n    key: \"update\",\n    value: function update() {\n      this._delaunator.update();\n\n      this._init();\n\n      return this;\n    }\n  }, {\n    key: \"_init\",\n    value: function _init() {\n      var d = this._delaunator,\n          points = this.points; // check for collinear\n\n      if (d.hull && d.hull.length > 2 && collinear(d)) {\n        this.collinear = Int32Array.from({\n          length: points.length / 2\n        }, function (_, i) {\n          return i;\n        }).sort(function (i, j) {\n          return points[2 * i] - points[2 * j] || points[2 * i + 1] - points[2 * j + 1];\n        }); // for exact neighbors\n\n        var e = this.collinear[0],\n            f = this.collinear[this.collinear.length - 1],\n            bounds = [points[2 * e], points[2 * e + 1], points[2 * f], points[2 * f + 1]],\n            r = 1e-8 * Math.hypot(bounds[3] - bounds[1], bounds[2] - bounds[0]);\n\n        for (var i = 0, n = points.length / 2; i < n; ++i) {\n          var p = jitter(points[2 * i], points[2 * i + 1], r);\n          points[2 * i] = p[0];\n          points[2 * i + 1] = p[1];\n        }\n\n        this._delaunator = new Delaunator(points);\n      } else {\n        delete this.collinear;\n      }\n\n      var halfedges = this.halfedges = this._delaunator.halfedges;\n      var hull = this.hull = this._delaunator.hull;\n      var triangles = this.triangles = this._delaunator.triangles;\n      var inedges = this.inedges.fill(-1);\n\n      var hullIndex = this._hullIndex.fill(-1); // Compute an index from each point to an (arbitrary) incoming halfedge\n      // Used to give the first neighbor of each point; for this reason,\n      // on the hull we give priority to exterior halfedges\n\n\n      for (var _e = 0, _n = halfedges.length; _e < _n; ++_e) {\n        var _p = triangles[_e % 3 === 2 ? _e - 2 : _e + 1];\n        if (halfedges[_e] === -1 || inedges[_p] === -1) inedges[_p] = _e;\n      }\n\n      for (var _i = 0, _n2 = hull.length; _i < _n2; ++_i) {\n        hullIndex[hull[_i]] = _i;\n      } // degenerate case: 1 or 2 (distinct) points\n\n\n      if (hull.length <= 2 && hull.length > 0) {\n        this.triangles = new Int32Array(3).fill(-1);\n        this.halfedges = new Int32Array(3).fill(-1);\n        this.triangles[0] = hull[0];\n        inedges[hull[0]] = 1;\n\n        if (hull.length === 2) {\n          inedges[hull[1]] = 0;\n          this.triangles[1] = hull[1];\n          this.triangles[2] = hull[1];\n        }\n      }\n    }\n  }, {\n    key: \"voronoi\",\n    value: function voronoi(bounds) {\n      return new Voronoi(this, bounds);\n    }\n  }, {\n    key: \"neighbors\",\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function neighbors(i) {\n      var inedges, hull, _hullIndex, halfedges, triangles, collinear, l, e0, e, p0, p;\n\n      return _regeneratorRuntime.wrap(function neighbors$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              inedges = this.inedges, hull = this.hull, _hullIndex = this._hullIndex, halfedges = this.halfedges, triangles = this.triangles, collinear = this.collinear; // degenerate case with several collinear points\n\n              if (!collinear) {\n                _context.next = 10;\n                break;\n              }\n\n              l = collinear.indexOf(i);\n\n              if (!(l > 0)) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 6;\n              return collinear[l - 1];\n\n            case 6:\n              if (!(l < collinear.length - 1)) {\n                _context.next = 9;\n                break;\n              }\n\n              _context.next = 9;\n              return collinear[l + 1];\n\n            case 9:\n              return _context.abrupt(\"return\");\n\n            case 10:\n              e0 = inedges[i];\n\n              if (!(e0 === -1)) {\n                _context.next = 13;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 13:\n              // coincident point\n              e = e0, p0 = -1;\n\n            case 14:\n              _context.next = 16;\n              return p0 = triangles[e];\n\n            case 16:\n              e = e % 3 === 2 ? e - 2 : e + 1;\n\n              if (!(triangles[e] !== i)) {\n                _context.next = 19;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 19:\n              // bad triangulation\n              e = halfedges[e];\n\n              if (!(e === -1)) {\n                _context.next = 26;\n                break;\n              }\n\n              p = hull[(_hullIndex[i] + 1) % hull.length];\n\n              if (!(p !== p0)) {\n                _context.next = 25;\n                break;\n              }\n\n              _context.next = 25;\n              return p;\n\n            case 25:\n              return _context.abrupt(\"return\");\n\n            case 26:\n              if (e !== e0) {\n                _context.next = 14;\n                break;\n              }\n\n            case 27:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, neighbors, this);\n    })\n  }, {\n    key: \"find\",\n    value: function find(x, y) {\n      var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      if ((x = +x, x !== x) || (y = +y, y !== y)) return -1;\n      var i0 = i;\n      var c;\n\n      while ((c = this._step(i, x, y)) >= 0 && c !== i && c !== i0) {\n        i = c;\n      }\n\n      return c;\n    }\n  }, {\n    key: \"_step\",\n    value: function _step(i, x, y) {\n      var inedges = this.inedges,\n          hull = this.hull,\n          _hullIndex = this._hullIndex,\n          halfedges = this.halfedges,\n          triangles = this.triangles,\n          points = this.points;\n      if (inedges[i] === -1 || !points.length) return (i + 1) % (points.length >> 1);\n      var c = i;\n      var dc = pow(x - points[i * 2], 2) + pow(y - points[i * 2 + 1], 2);\n      var e0 = inedges[i];\n      var e = e0;\n\n      do {\n        var t = triangles[e];\n        var dt = pow(x - points[t * 2], 2) + pow(y - points[t * 2 + 1], 2);\n        if (dt < dc) dc = dt, c = t;\n        e = e % 3 === 2 ? e - 2 : e + 1;\n        if (triangles[e] !== i) break; // bad triangulation\n\n        e = halfedges[e];\n\n        if (e === -1) {\n          e = hull[(_hullIndex[i] + 1) % hull.length];\n\n          if (e !== t) {\n            if (pow(x - points[e * 2], 2) + pow(y - points[e * 2 + 1], 2) < dc) return e;\n          }\n\n          break;\n        }\n      } while (e !== e0);\n\n      return c;\n    }\n  }, {\n    key: \"render\",\n    value: function render(context) {\n      var buffer = context == null ? context = new Path() : undefined;\n      var points = this.points,\n          halfedges = this.halfedges,\n          triangles = this.triangles;\n\n      for (var i = 0, n = halfedges.length; i < n; ++i) {\n        var j = halfedges[i];\n        if (j < i) continue;\n        var ti = triangles[i] * 2;\n        var tj = triangles[j] * 2;\n        context.moveTo(points[ti], points[ti + 1]);\n        context.lineTo(points[tj], points[tj + 1]);\n      }\n\n      this.renderHull(context);\n      return buffer && buffer.value();\n    }\n  }, {\n    key: \"renderPoints\",\n    value: function renderPoints(context, r) {\n      if (r === undefined && (!context || typeof context.moveTo !== \"function\")) r = context, context = null;\n      r = r == undefined ? 2 : +r;\n      var buffer = context == null ? context = new Path() : undefined;\n      var points = this.points;\n\n      for (var i = 0, n = points.length; i < n; i += 2) {\n        var x = points[i],\n            y = points[i + 1];\n        context.moveTo(x + r, y);\n        context.arc(x, y, r, 0, tau);\n      }\n\n      return buffer && buffer.value();\n    }\n  }, {\n    key: \"renderHull\",\n    value: function renderHull(context) {\n      var buffer = context == null ? context = new Path() : undefined;\n      var hull = this.hull,\n          points = this.points;\n      var h = hull[0] * 2,\n          n = hull.length;\n      context.moveTo(points[h], points[h + 1]);\n\n      for (var i = 1; i < n; ++i) {\n        var _h = 2 * hull[i];\n\n        context.lineTo(points[_h], points[_h + 1]);\n      }\n\n      context.closePath();\n      return buffer && buffer.value();\n    }\n  }, {\n    key: \"hullPolygon\",\n    value: function hullPolygon() {\n      var polygon = new Polygon();\n      this.renderHull(polygon);\n      return polygon.value();\n    }\n  }, {\n    key: \"renderTriangle\",\n    value: function renderTriangle(i, context) {\n      var buffer = context == null ? context = new Path() : undefined;\n      var points = this.points,\n          triangles = this.triangles;\n      var t0 = triangles[i *= 3] * 2;\n      var t1 = triangles[i + 1] * 2;\n      var t2 = triangles[i + 2] * 2;\n      context.moveTo(points[t0], points[t0 + 1]);\n      context.lineTo(points[t1], points[t1 + 1]);\n      context.lineTo(points[t2], points[t2 + 1]);\n      context.closePath();\n      return buffer && buffer.value();\n    }\n  }, {\n    key: \"trianglePolygons\",\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function trianglePolygons() {\n      var triangles, i, n;\n      return _regeneratorRuntime.wrap(function trianglePolygons$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              triangles = this.triangles;\n              i = 0, n = triangles.length / 3;\n\n            case 2:\n              if (!(i < n)) {\n                _context2.next = 8;\n                break;\n              }\n\n              _context2.next = 5;\n              return this.trianglePolygon(i);\n\n            case 5:\n              ++i;\n              _context2.next = 2;\n              break;\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, trianglePolygons, this);\n    })\n  }, {\n    key: \"trianglePolygon\",\n    value: function trianglePolygon(i) {\n      var polygon = new Polygon();\n      this.renderTriangle(i, polygon);\n      return polygon.value();\n    }\n  }], [{\n    key: \"from\",\n    value: function from(points) {\n      var fx = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : pointX;\n      var fy = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : pointY;\n      var that = arguments.length > 3 ? arguments[3] : undefined;\n      return new Delaunay(\"length\" in points ? flatArray(points, fx, fy, that) : Float64Array.from(flatIterable(points, fx, fy, that)));\n    }\n  }]);\n\n  return Delaunay;\n}();\n\nexport { Delaunay as default };\n\nfunction flatArray(points, fx, fy, that) {\n  var n = points.length;\n  var array = new Float64Array(n * 2);\n\n  for (var i = 0; i < n; ++i) {\n    var p = points[i];\n    array[i * 2] = fx.call(that, p, i, points);\n    array[i * 2 + 1] = fy.call(that, p, i, points);\n  }\n\n  return array;\n}\n\nfunction flatIterable(points, fx, fy, that) {\n  var i, _iterator, _step2, p;\n\n  return _regeneratorRuntime.wrap(function flatIterable$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          i = 0;\n          _iterator = _createForOfIteratorHelper(points);\n          _context3.prev = 2;\n\n          _iterator.s();\n\n        case 4:\n          if ((_step2 = _iterator.n()).done) {\n            _context3.next = 13;\n            break;\n          }\n\n          p = _step2.value;\n          _context3.next = 8;\n          return fx.call(that, p, i, points);\n\n        case 8:\n          _context3.next = 10;\n          return fy.call(that, p, i, points);\n\n        case 10:\n          ++i;\n\n        case 11:\n          _context3.next = 4;\n          break;\n\n        case 13:\n          _context3.next = 18;\n          break;\n\n        case 15:\n          _context3.prev = 15;\n          _context3.t0 = _context3[\"catch\"](2);\n\n          _iterator.e(_context3.t0);\n\n        case 18:\n          _context3.prev = 18;\n\n          _iterator.f();\n\n          return _context3.finish(18);\n\n        case 21:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked, null, [[2, 15, 18, 21]]);\n}","map":{"version":3,"sources":["/Users/davidmunechika/Documents/Code/Research/visual-auditor/visual-auditor-package/node_modules/d3-delaunay/src/delaunay.js"],"names":["flatIterable","Delaunator","Path","Polygon","Voronoi","tau","Math","PI","pow","pointX","p","pointY","collinear","d","triangles","coords","i","length","a","b","c","cross","jitter","x","y","r","sin","cos","Delaunay","points","_delaunator","inedges","Int32Array","_hullIndex","_init","update","hull","from","_","sort","j","e","f","bounds","hypot","n","halfedges","fill","hullIndex","l","indexOf","e0","p0","i0","_step","dc","t","dt","context","buffer","undefined","ti","tj","moveTo","lineTo","renderHull","value","arc","h","closePath","polygon","t0","t1","t2","trianglePolygon","renderTriangle","fx","fy","that","flatArray","Float64Array","array","call"],"mappings":"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","sourcesContent":["import Delaunator from \"delaunator\";\nimport Path from \"./path.js\";\nimport Polygon from \"./polygon.js\";\nimport Voronoi from \"./voronoi.js\";\n\nconst tau = 2 * Math.PI, pow = Math.pow;\n\nfunction pointX(p) {\n  return p[0];\n}\n\nfunction pointY(p) {\n  return p[1];\n}\n\n// A triangulation is collinear if all its triangles have a non-null area\nfunction collinear(d) {\n  const {triangles, coords} = d;\n  for (let i = 0; i < triangles.length; i += 3) {\n    const a = 2 * triangles[i],\n          b = 2 * triangles[i + 1],\n          c = 2 * triangles[i + 2],\n          cross = (coords[c] - coords[a]) * (coords[b + 1] - coords[a + 1])\n                - (coords[b] - coords[a]) * (coords[c + 1] - coords[a + 1]);\n    if (cross > 1e-10) return false;\n  }\n  return true;\n}\n\nfunction jitter(x, y, r) {\n  return [x + Math.sin(x + y) * r, y + Math.cos(x - y) * r];\n}\n\nexport default class Delaunay {\n  static from(points, fx = pointX, fy = pointY, that) {\n    return new Delaunay(\"length\" in points\n        ? flatArray(points, fx, fy, that)\n        : Float64Array.from(flatIterable(points, fx, fy, that)));\n  }\n  constructor(points) {\n    this._delaunator = new Delaunator(points);\n    this.inedges = new Int32Array(points.length / 2);\n    this._hullIndex = new Int32Array(points.length / 2);\n    this.points = this._delaunator.coords;\n    this._init();\n  }\n  update() {\n    this._delaunator.update();\n    this._init();\n    return this;\n  }\n  _init() {\n    const d = this._delaunator, points = this.points;\n\n    // check for collinear\n    if (d.hull && d.hull.length > 2 && collinear(d)) {\n      this.collinear = Int32Array.from({length: points.length/2}, (_,i) => i)\n        .sort((i, j) => points[2 * i] - points[2 * j] || points[2 * i + 1] - points[2 * j + 1]); // for exact neighbors\n      const e = this.collinear[0], f = this.collinear[this.collinear.length - 1],\n        bounds = [ points[2 * e], points[2 * e + 1], points[2 * f], points[2 * f + 1] ],\n        r = 1e-8 * Math.hypot(bounds[3] - bounds[1], bounds[2] - bounds[0]);\n      for (let i = 0, n = points.length / 2; i < n; ++i) {\n        const p = jitter(points[2 * i], points[2 * i + 1], r);\n        points[2 * i] = p[0];\n        points[2 * i + 1] = p[1];\n      }\n      this._delaunator = new Delaunator(points);\n    } else {\n      delete this.collinear;\n    }\n\n    const halfedges = this.halfedges = this._delaunator.halfedges;\n    const hull = this.hull = this._delaunator.hull;\n    const triangles = this.triangles = this._delaunator.triangles;\n    const inedges = this.inedges.fill(-1);\n    const hullIndex = this._hullIndex.fill(-1);\n\n    // Compute an index from each point to an (arbitrary) incoming halfedge\n    // Used to give the first neighbor of each point; for this reason,\n    // on the hull we give priority to exterior halfedges\n    for (let e = 0, n = halfedges.length; e < n; ++e) {\n      const p = triangles[e % 3 === 2 ? e - 2 : e + 1];\n      if (halfedges[e] === -1 || inedges[p] === -1) inedges[p] = e;\n    }\n    for (let i = 0, n = hull.length; i < n; ++i) {\n      hullIndex[hull[i]] = i;\n    }\n\n    // degenerate case: 1 or 2 (distinct) points\n    if (hull.length <= 2 && hull.length > 0) {\n      this.triangles = new Int32Array(3).fill(-1);\n      this.halfedges = new Int32Array(3).fill(-1);\n      this.triangles[0] = hull[0];\n      inedges[hull[0]] = 1;\n      if (hull.length === 2) {\n        inedges[hull[1]] = 0;\n        this.triangles[1] = hull[1];\n        this.triangles[2] = hull[1];\n      }\n    }\n  }\n  voronoi(bounds) {\n    return new Voronoi(this, bounds);\n  }\n  *neighbors(i) {\n    const {inedges, hull, _hullIndex, halfedges, triangles, collinear} = this;\n\n    // degenerate case with several collinear points\n    if (collinear) {\n      const l = collinear.indexOf(i);\n      if (l > 0) yield collinear[l - 1];\n      if (l < collinear.length - 1) yield collinear[l + 1];\n      return;\n    }\n\n    const e0 = inedges[i];\n    if (e0 === -1) return; // coincident point\n    let e = e0, p0 = -1;\n    do {\n      yield p0 = triangles[e];\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) return; // bad triangulation\n      e = halfedges[e];\n      if (e === -1) {\n        const p = hull[(_hullIndex[i] + 1) % hull.length];\n        if (p !== p0) yield p;\n        return;\n      }\n    } while (e !== e0);\n  }\n  find(x, y, i = 0) {\n    if ((x = +x, x !== x) || (y = +y, y !== y)) return -1;\n    const i0 = i;\n    let c;\n    while ((c = this._step(i, x, y)) >= 0 && c !== i && c !== i0) i = c;\n    return c;\n  }\n  _step(i, x, y) {\n    const {inedges, hull, _hullIndex, halfedges, triangles, points} = this;\n    if (inedges[i] === -1 || !points.length) return (i + 1) % (points.length >> 1);\n    let c = i;\n    let dc = pow(x - points[i * 2], 2) + pow(y - points[i * 2 + 1], 2);\n    const e0 = inedges[i];\n    let e = e0;\n    do {\n      let t = triangles[e];\n      const dt = pow(x - points[t * 2], 2) + pow(y - points[t * 2 + 1], 2);\n      if (dt < dc) dc = dt, c = t;\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) break; // bad triangulation\n      e = halfedges[e];\n      if (e === -1) {\n        e = hull[(_hullIndex[i] + 1) % hull.length];\n        if (e !== t) {\n          if (pow(x - points[e * 2], 2) + pow(y - points[e * 2 + 1], 2) < dc) return e;\n        }\n        break;\n      }\n    } while (e !== e0);\n    return c;\n  }\n  render(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {points, halfedges, triangles} = this;\n    for (let i = 0, n = halfedges.length; i < n; ++i) {\n      const j = halfedges[i];\n      if (j < i) continue;\n      const ti = triangles[i] * 2;\n      const tj = triangles[j] * 2;\n      context.moveTo(points[ti], points[ti + 1]);\n      context.lineTo(points[tj], points[tj + 1]);\n    }\n    this.renderHull(context);\n    return buffer && buffer.value();\n  }\n  renderPoints(context, r) {\n    if (r === undefined && (!context || typeof context.moveTo !== \"function\")) r = context, context = null;\n    r = r == undefined ? 2 : +r;\n    const buffer = context == null ? context = new Path : undefined;\n    const {points} = this;\n    for (let i = 0, n = points.length; i < n; i += 2) {\n      const x = points[i], y = points[i + 1];\n      context.moveTo(x + r, y);\n      context.arc(x, y, r, 0, tau);\n    }\n    return buffer && buffer.value();\n  }\n  renderHull(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {hull, points} = this;\n    const h = hull[0] * 2, n = hull.length;\n    context.moveTo(points[h], points[h + 1]);\n    for (let i = 1; i < n; ++i) {\n      const h = 2 * hull[i];\n      context.lineTo(points[h], points[h + 1]);\n    }\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  hullPolygon() {\n    const polygon = new Polygon;\n    this.renderHull(polygon);\n    return polygon.value();\n  }\n  renderTriangle(i, context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {points, triangles} = this;\n    const t0 = triangles[i *= 3] * 2;\n    const t1 = triangles[i + 1] * 2;\n    const t2 = triangles[i + 2] * 2;\n    context.moveTo(points[t0], points[t0 + 1]);\n    context.lineTo(points[t1], points[t1 + 1]);\n    context.lineTo(points[t2], points[t2 + 1]);\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  *trianglePolygons() {\n    const {triangles} = this;\n    for (let i = 0, n = triangles.length / 3; i < n; ++i) {\n      yield this.trianglePolygon(i);\n    }\n  }\n  trianglePolygon(i) {\n    const polygon = new Polygon;\n    this.renderTriangle(i, polygon);\n    return polygon.value();\n  }\n}\n\nfunction flatArray(points, fx, fy, that) {\n  const n = points.length;\n  const array = new Float64Array(n * 2);\n  for (let i = 0; i < n; ++i) {\n    const p = points[i];\n    array[i * 2] = fx.call(that, p, i, points);\n    array[i * 2 + 1] = fy.call(that, p, i, points);\n  }\n  return array;\n}\n\nfunction* flatIterable(points, fx, fy, that) {\n  let i = 0;\n  for (const p of points) {\n    yield fx.call(that, p, i, points);\n    yield fy.call(that, p, i, points);\n    ++i;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}