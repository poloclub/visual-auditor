{"ast":null,"code":"import { epsilon, splitter, resulterrbound, estimate, vec, sum } from './util.js';\nvar ccwerrboundA = (3 + 16 * epsilon) * epsilon;\nvar ccwerrboundB = (2 + 12 * epsilon) * epsilon;\nvar ccwerrboundC = (9 + 64 * epsilon) * epsilon * epsilon;\nvar B = vec(4);\nvar C1 = vec(8);\nvar C2 = vec(12);\nvar D = vec(16);\nvar u = vec(4);\n\nfunction orient2dadapt(ax, ay, bx, by, cx, cy, detsum) {\n  var acxtail, acytail, bcxtail, bcytail;\n\n  var bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n  var acx = ax - cx;\n  var bcx = bx - cx;\n  var acy = ay - cy;\n  var bcy = by - cy;\n  s1 = acx * bcy;\n  c = splitter * acx;\n  ahi = c - (c - acx);\n  alo = acx - ahi;\n  c = splitter * bcy;\n  bhi = c - (c - bcy);\n  blo = bcy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = acy * bcx;\n  c = splitter * acy;\n  ahi = c - (c - acy);\n  alo = acy - ahi;\n  c = splitter * bcx;\n  bhi = c - (c - bcx);\n  blo = bcx - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  B[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  B[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  B[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  B[3] = u3;\n  var det = estimate(4, B);\n  var errbound = ccwerrboundB * detsum;\n\n  if (det >= errbound || -det >= errbound) {\n    return det;\n  }\n\n  bvirt = ax - acx;\n  acxtail = ax - (acx + bvirt) + (bvirt - cx);\n  bvirt = bx - bcx;\n  bcxtail = bx - (bcx + bvirt) + (bvirt - cx);\n  bvirt = ay - acy;\n  acytail = ay - (acy + bvirt) + (bvirt - cy);\n  bvirt = by - bcy;\n  bcytail = by - (bcy + bvirt) + (bvirt - cy);\n\n  if (acxtail === 0 && acytail === 0 && bcxtail === 0 && bcytail === 0) {\n    return det;\n  }\n\n  errbound = ccwerrboundC * detsum + resulterrbound * Math.abs(det);\n  det += acx * bcytail + bcy * acxtail - (acy * bcxtail + bcx * acytail);\n  if (det >= errbound || -det >= errbound) return det;\n  s1 = acxtail * bcy;\n  c = splitter * acxtail;\n  ahi = c - (c - acxtail);\n  alo = acxtail - ahi;\n  c = splitter * bcy;\n  bhi = c - (c - bcy);\n  blo = bcy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = acytail * bcx;\n  c = splitter * acytail;\n  ahi = c - (c - acytail);\n  alo = acytail - ahi;\n  c = splitter * bcx;\n  bhi = c - (c - bcx);\n  blo = bcx - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  u[3] = u3;\n  var C1len = sum(4, B, 4, u, C1);\n  s1 = acx * bcytail;\n  c = splitter * acx;\n  ahi = c - (c - acx);\n  alo = acx - ahi;\n  c = splitter * bcytail;\n  bhi = c - (c - bcytail);\n  blo = bcytail - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = acy * bcxtail;\n  c = splitter * acy;\n  ahi = c - (c - acy);\n  alo = acy - ahi;\n  c = splitter * bcxtail;\n  bhi = c - (c - bcxtail);\n  blo = bcxtail - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  u[3] = u3;\n  var C2len = sum(C1len, C1, 4, u, C2);\n  s1 = acxtail * bcytail;\n  c = splitter * acxtail;\n  ahi = c - (c - acxtail);\n  alo = acxtail - ahi;\n  c = splitter * bcytail;\n  bhi = c - (c - bcytail);\n  blo = bcytail - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = acytail * bcxtail;\n  c = splitter * acytail;\n  ahi = c - (c - acytail);\n  alo = acytail - ahi;\n  c = splitter * bcxtail;\n  bhi = c - (c - bcxtail);\n  blo = bcxtail - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  u[3] = u3;\n  var Dlen = sum(C2len, C2, 4, u, D);\n  return D[Dlen - 1];\n}\n\nexport function orient2d(ax, ay, bx, by, cx, cy) {\n  var detleft = (ay - cy) * (bx - cx);\n  var detright = (ax - cx) * (by - cy);\n  var det = detleft - detright;\n  if (detleft === 0 || detright === 0 || detleft > 0 !== detright > 0) return det;\n  var detsum = Math.abs(detleft + detright);\n  if (Math.abs(det) >= ccwerrboundA * detsum) return det;\n  return -orient2dadapt(ax, ay, bx, by, cx, cy, detsum);\n}\nexport function orient2dfast(ax, ay, bx, by, cx, cy) {\n  return (ay - cy) * (bx - cx) - (ax - cx) * (by - cy);\n}","map":{"version":3,"sources":["/Users/davidmunechika/Documents/Code/Research/visual-auditor/visual-auditor-package/node_modules/robust-predicates/esm/orient2d.js"],"names":["epsilon","splitter","resulterrbound","estimate","vec","sum","ccwerrboundA","ccwerrboundB","ccwerrboundC","B","C1","C2","D","u","orient2dadapt","ax","ay","bx","by","cx","cy","detsum","acxtail","acytail","bcxtail","bcytail","bvirt","c","ahi","alo","bhi","blo","_i","_j","_0","s1","s0","t1","t0","u3","acx","bcx","acy","bcy","det","errbound","Math","abs","C1len","C2len","Dlen","orient2d","detleft","detright","orient2dfast"],"mappings":"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","sourcesContent":["import {epsilon, splitter, resulterrbound, estimate, vec, sum} from './util.js';\n\nconst ccwerrboundA = (3 + 16 * epsilon) * epsilon;\nconst ccwerrboundB = (2 + 12 * epsilon) * epsilon;\nconst ccwerrboundC = (9 + 64 * epsilon) * epsilon * epsilon;\n\nconst B = vec(4);\nconst C1 = vec(8);\nconst C2 = vec(12);\nconst D = vec(16);\nconst u = vec(4);\n\nfunction orient2dadapt(ax, ay, bx, by, cx, cy, detsum) {\n    let acxtail, acytail, bcxtail, bcytail;\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n    const acx = ax - cx;\n    const bcx = bx - cx;\n    const acy = ay - cy;\n    const bcy = by - cy;\n\n    s1 = acx * bcy;\n    c = splitter * acx;\n    ahi = c - (c - acx);\n    alo = acx - ahi;\n    c = splitter * bcy;\n    bhi = c - (c - bcy);\n    blo = bcy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acy * bcx;\n    c = splitter * acy;\n    ahi = c - (c - acy);\n    alo = acy - ahi;\n    c = splitter * bcx;\n    bhi = c - (c - bcx);\n    blo = bcx - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    B[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    B[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    B[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    B[3] = u3;\n\n    let det = estimate(4, B);\n    let errbound = ccwerrboundB * detsum;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - acx;\n    acxtail = ax - (acx + bvirt) + (bvirt - cx);\n    bvirt = bx - bcx;\n    bcxtail = bx - (bcx + bvirt) + (bvirt - cx);\n    bvirt = ay - acy;\n    acytail = ay - (acy + bvirt) + (bvirt - cy);\n    bvirt = by - bcy;\n    bcytail = by - (bcy + bvirt) + (bvirt - cy);\n\n    if (acxtail === 0 && acytail === 0 && bcxtail === 0 && bcytail === 0) {\n        return det;\n    }\n\n    errbound = ccwerrboundC * detsum + resulterrbound * Math.abs(det);\n    det += (acx * bcytail + bcy * acxtail) - (acy * bcxtail + bcx * acytail);\n    if (det >= errbound || -det >= errbound) return det;\n\n    s1 = acxtail * bcy;\n    c = splitter * acxtail;\n    ahi = c - (c - acxtail);\n    alo = acxtail - ahi;\n    c = splitter * bcy;\n    bhi = c - (c - bcy);\n    blo = bcy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acytail * bcx;\n    c = splitter * acytail;\n    ahi = c - (c - acytail);\n    alo = acytail - ahi;\n    c = splitter * bcx;\n    bhi = c - (c - bcx);\n    blo = bcx - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const C1len = sum(4, B, 4, u, C1);\n\n    s1 = acx * bcytail;\n    c = splitter * acx;\n    ahi = c - (c - acx);\n    alo = acx - ahi;\n    c = splitter * bcytail;\n    bhi = c - (c - bcytail);\n    blo = bcytail - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acy * bcxtail;\n    c = splitter * acy;\n    ahi = c - (c - acy);\n    alo = acy - ahi;\n    c = splitter * bcxtail;\n    bhi = c - (c - bcxtail);\n    blo = bcxtail - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const C2len = sum(C1len, C1, 4, u, C2);\n\n    s1 = acxtail * bcytail;\n    c = splitter * acxtail;\n    ahi = c - (c - acxtail);\n    alo = acxtail - ahi;\n    c = splitter * bcytail;\n    bhi = c - (c - bcytail);\n    blo = bcytail - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acytail * bcxtail;\n    c = splitter * acytail;\n    ahi = c - (c - acytail);\n    alo = acytail - ahi;\n    c = splitter * bcxtail;\n    bhi = c - (c - bcxtail);\n    blo = bcxtail - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const Dlen = sum(C2len, C2, 4, u, D);\n\n    return D[Dlen - 1];\n}\n\nexport function orient2d(ax, ay, bx, by, cx, cy) {\n    const detleft = (ay - cy) * (bx - cx);\n    const detright = (ax - cx) * (by - cy);\n    const det = detleft - detright;\n\n    if (detleft === 0 || detright === 0 || (detleft > 0) !== (detright > 0)) return det;\n\n    const detsum = Math.abs(detleft + detright);\n    if (Math.abs(det) >= ccwerrboundA * detsum) return det;\n\n    return -orient2dadapt(ax, ay, bx, by, cx, cy, detsum);\n}\n\nexport function orient2dfast(ax, ay, bx, by, cx, cy) {\n    return (ay - cy) * (bx - cx) - (ax - cx) * (by - cy);\n}\n"]},"metadata":{},"sourceType":"module"}