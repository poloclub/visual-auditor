{"ast":null,"code":"import { epsilon, splitter, resulterrbound, estimate, vec, sum, sum_three, scale, negate } from './util.js';\nconst isperrboundA = (16 + 224 * epsilon) * epsilon;\nconst isperrboundB = (5 + 72 * epsilon) * epsilon;\nconst isperrboundC = (71 + 1408 * epsilon) * epsilon * epsilon;\nconst ab = vec(4);\nconst bc = vec(4);\nconst cd = vec(4);\nconst de = vec(4);\nconst ea = vec(4);\nconst ac = vec(4);\nconst bd = vec(4);\nconst ce = vec(4);\nconst da = vec(4);\nconst eb = vec(4);\nconst abc = vec(24);\nconst bcd = vec(24);\nconst cde = vec(24);\nconst dea = vec(24);\nconst eab = vec(24);\nconst abd = vec(24);\nconst bce = vec(24);\nconst cda = vec(24);\nconst deb = vec(24);\nconst eac = vec(24);\nconst adet = vec(1152);\nconst bdet = vec(1152);\nconst cdet = vec(1152);\nconst ddet = vec(1152);\nconst edet = vec(1152);\nconst abdet = vec(2304);\nconst cddet = vec(2304);\nconst cdedet = vec(3456);\nconst deter = vec(5760);\n\nconst _8 = vec(8);\n\nconst _8b = vec(8);\n\nconst _8c = vec(8);\n\nconst _16 = vec(16);\n\nconst _24 = vec(24);\n\nconst _48 = vec(48);\n\nconst _48b = vec(48);\n\nconst _96 = vec(96);\n\nconst _192 = vec(192);\n\nconst _384x = vec(384);\n\nconst _384y = vec(384);\n\nconst _384z = vec(384);\n\nconst _768 = vec(768);\n\nfunction sum_three_scale(a, b, c, az, bz, cz, out) {\n  return sum_three(scale(4, a, az, _8), _8, scale(4, b, bz, _8b), _8b, scale(4, c, cz, _8c), _8c, _16, out);\n}\n\nfunction liftexact(alen, a, blen, b, clen, c, dlen, d, x, y, z, out) {\n  const len = sum(sum(alen, a, blen, b, _48), _48, negate(sum(clen, c, dlen, d, _48b), _48b), _48b, _96);\n  return sum_three(scale(scale(len, _96, x, _192), _192, x, _384x), _384x, scale(scale(len, _96, y, _192), _192, y, _384y), _384y, scale(scale(len, _96, z, _192), _192, z, _384z), _384z, _768, out);\n}\n\nfunction insphereexact(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez) {\n  let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n  s1 = ax * by;\n  c = splitter * ax;\n  ahi = c - (c - ax);\n  alo = ax - ahi;\n  c = splitter * by;\n  bhi = c - (c - by);\n  blo = by - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = bx * ay;\n  c = splitter * bx;\n  ahi = c - (c - bx);\n  alo = bx - ahi;\n  c = splitter * ay;\n  bhi = c - (c - ay);\n  blo = ay - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ab[3] = u3;\n  s1 = bx * cy;\n  c = splitter * bx;\n  ahi = c - (c - bx);\n  alo = bx - ahi;\n  c = splitter * cy;\n  bhi = c - (c - cy);\n  blo = cy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = cx * by;\n  c = splitter * cx;\n  ahi = c - (c - cx);\n  alo = cx - ahi;\n  c = splitter * by;\n  bhi = c - (c - by);\n  blo = by - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  bc[3] = u3;\n  s1 = cx * dy;\n  c = splitter * cx;\n  ahi = c - (c - cx);\n  alo = cx - ahi;\n  c = splitter * dy;\n  bhi = c - (c - dy);\n  blo = dy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = dx * cy;\n  c = splitter * dx;\n  ahi = c - (c - dx);\n  alo = dx - ahi;\n  c = splitter * cy;\n  bhi = c - (c - cy);\n  blo = cy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  cd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  cd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  cd[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  cd[3] = u3;\n  s1 = dx * ey;\n  c = splitter * dx;\n  ahi = c - (c - dx);\n  alo = dx - ahi;\n  c = splitter * ey;\n  bhi = c - (c - ey);\n  blo = ey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = ex * dy;\n  c = splitter * ex;\n  ahi = c - (c - ex);\n  alo = ex - ahi;\n  c = splitter * dy;\n  bhi = c - (c - dy);\n  blo = dy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  de[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  de[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  de[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  de[3] = u3;\n  s1 = ex * ay;\n  c = splitter * ex;\n  ahi = c - (c - ex);\n  alo = ex - ahi;\n  c = splitter * ay;\n  bhi = c - (c - ay);\n  blo = ay - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = ax * ey;\n  c = splitter * ax;\n  ahi = c - (c - ax);\n  alo = ax - ahi;\n  c = splitter * ey;\n  bhi = c - (c - ey);\n  blo = ey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ea[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ea[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ea[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ea[3] = u3;\n  s1 = ax * cy;\n  c = splitter * ax;\n  ahi = c - (c - ax);\n  alo = ax - ahi;\n  c = splitter * cy;\n  bhi = c - (c - cy);\n  blo = cy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = cx * ay;\n  c = splitter * cx;\n  ahi = c - (c - cx);\n  alo = cx - ahi;\n  c = splitter * ay;\n  bhi = c - (c - ay);\n  blo = ay - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ac[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ac[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ac[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ac[3] = u3;\n  s1 = bx * dy;\n  c = splitter * bx;\n  ahi = c - (c - bx);\n  alo = bx - ahi;\n  c = splitter * dy;\n  bhi = c - (c - dy);\n  blo = dy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = dx * by;\n  c = splitter * dx;\n  ahi = c - (c - dx);\n  alo = dx - ahi;\n  c = splitter * by;\n  bhi = c - (c - by);\n  blo = by - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  bd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  bd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  bd[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  bd[3] = u3;\n  s1 = cx * ey;\n  c = splitter * cx;\n  ahi = c - (c - cx);\n  alo = cx - ahi;\n  c = splitter * ey;\n  bhi = c - (c - ey);\n  blo = ey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = ex * cy;\n  c = splitter * ex;\n  ahi = c - (c - ex);\n  alo = ex - ahi;\n  c = splitter * cy;\n  bhi = c - (c - cy);\n  blo = cy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ce[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ce[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ce[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ce[3] = u3;\n  s1 = dx * ay;\n  c = splitter * dx;\n  ahi = c - (c - dx);\n  alo = dx - ahi;\n  c = splitter * ay;\n  bhi = c - (c - ay);\n  blo = ay - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = ax * dy;\n  c = splitter * ax;\n  ahi = c - (c - ax);\n  alo = ax - ahi;\n  c = splitter * dy;\n  bhi = c - (c - dy);\n  blo = dy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  da[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  da[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  da[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  da[3] = u3;\n  s1 = ex * by;\n  c = splitter * ex;\n  ahi = c - (c - ex);\n  alo = ex - ahi;\n  c = splitter * by;\n  bhi = c - (c - by);\n  blo = by - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = bx * ey;\n  c = splitter * bx;\n  ahi = c - (c - bx);\n  alo = bx - ahi;\n  c = splitter * ey;\n  bhi = c - (c - ey);\n  blo = ey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  eb[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  eb[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  eb[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  eb[3] = u3;\n  const abclen = sum_three_scale(ab, bc, ac, cz, az, -bz, abc);\n  const bcdlen = sum_three_scale(bc, cd, bd, dz, bz, -cz, bcd);\n  const cdelen = sum_three_scale(cd, de, ce, ez, cz, -dz, cde);\n  const dealen = sum_three_scale(de, ea, da, az, dz, -ez, dea);\n  const eablen = sum_three_scale(ea, ab, eb, bz, ez, -az, eab);\n  const abdlen = sum_three_scale(ab, bd, da, dz, az, bz, abd);\n  const bcelen = sum_three_scale(bc, ce, eb, ez, bz, cz, bce);\n  const cdalen = sum_three_scale(cd, da, ac, az, cz, dz, cda);\n  const deblen = sum_three_scale(de, eb, bd, bz, dz, ez, deb);\n  const eaclen = sum_three_scale(ea, ac, ce, cz, ez, az, eac);\n  const deterlen = sum_three(liftexact(cdelen, cde, bcelen, bce, deblen, deb, bcdlen, bcd, ax, ay, az, adet), adet, liftexact(dealen, dea, cdalen, cda, eaclen, eac, cdelen, cde, bx, by, bz, bdet), bdet, sum_three(liftexact(eablen, eab, deblen, deb, abdlen, abd, dealen, dea, cx, cy, cz, cdet), cdet, liftexact(abclen, abc, eaclen, eac, bcelen, bce, eablen, eab, dx, dy, dz, ddet), ddet, liftexact(bcdlen, bcd, abdlen, abd, cdalen, cda, abclen, abc, ex, ey, ez, edet), edet, cddet, cdedet), cdedet, abdet, deter);\n  return deter[deterlen - 1];\n}\n\nconst xdet = vec(96);\nconst ydet = vec(96);\nconst zdet = vec(96);\nconst fin = vec(1152);\n\nfunction liftadapt(a, b, c, az, bz, cz, x, y, z, out) {\n  const len = sum_three_scale(a, b, c, az, bz, cz, _24);\n  return sum_three(scale(scale(len, _24, x, _48), _48, x, xdet), xdet, scale(scale(len, _24, y, _48), _48, y, ydet), ydet, scale(scale(len, _24, z, _48), _48, z, zdet), zdet, _192, out);\n}\n\nfunction insphereadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez, permanent) {\n  let ab3, bc3, cd3, da3, ac3, bd3;\n  let aextail, bextail, cextail, dextail;\n  let aeytail, beytail, ceytail, deytail;\n  let aeztail, beztail, ceztail, deztail;\n\n  let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0;\n\n  const aex = ax - ex;\n  const bex = bx - ex;\n  const cex = cx - ex;\n  const dex = dx - ex;\n  const aey = ay - ey;\n  const bey = by - ey;\n  const cey = cy - ey;\n  const dey = dy - ey;\n  const aez = az - ez;\n  const bez = bz - ez;\n  const cez = cz - ez;\n  const dez = dz - ez;\n  s1 = aex * bey;\n  c = splitter * aex;\n  ahi = c - (c - aex);\n  alo = aex - ahi;\n  c = splitter * bey;\n  bhi = c - (c - bey);\n  blo = bey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = bex * aey;\n  c = splitter * bex;\n  ahi = c - (c - bex);\n  alo = bex - ahi;\n  c = splitter * aey;\n  bhi = c - (c - aey);\n  blo = aey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  ab3 = _j + _i;\n  bvirt = ab3 - _j;\n  ab[2] = _j - (ab3 - bvirt) + (_i - bvirt);\n  ab[3] = ab3;\n  s1 = bex * cey;\n  c = splitter * bex;\n  ahi = c - (c - bex);\n  alo = bex - ahi;\n  c = splitter * cey;\n  bhi = c - (c - cey);\n  blo = cey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = cex * bey;\n  c = splitter * cex;\n  ahi = c - (c - cex);\n  alo = cex - ahi;\n  c = splitter * bey;\n  bhi = c - (c - bey);\n  blo = bey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  bc3 = _j + _i;\n  bvirt = bc3 - _j;\n  bc[2] = _j - (bc3 - bvirt) + (_i - bvirt);\n  bc[3] = bc3;\n  s1 = cex * dey;\n  c = splitter * cex;\n  ahi = c - (c - cex);\n  alo = cex - ahi;\n  c = splitter * dey;\n  bhi = c - (c - dey);\n  blo = dey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = dex * cey;\n  c = splitter * dex;\n  ahi = c - (c - dex);\n  alo = dex - ahi;\n  c = splitter * cey;\n  bhi = c - (c - cey);\n  blo = cey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  cd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  cd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  cd3 = _j + _i;\n  bvirt = cd3 - _j;\n  cd[2] = _j - (cd3 - bvirt) + (_i - bvirt);\n  cd[3] = cd3;\n  s1 = dex * aey;\n  c = splitter * dex;\n  ahi = c - (c - dex);\n  alo = dex - ahi;\n  c = splitter * aey;\n  bhi = c - (c - aey);\n  blo = aey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = aex * dey;\n  c = splitter * aex;\n  ahi = c - (c - aex);\n  alo = aex - ahi;\n  c = splitter * dey;\n  bhi = c - (c - dey);\n  blo = dey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  da[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  da[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  da3 = _j + _i;\n  bvirt = da3 - _j;\n  da[2] = _j - (da3 - bvirt) + (_i - bvirt);\n  da[3] = da3;\n  s1 = aex * cey;\n  c = splitter * aex;\n  ahi = c - (c - aex);\n  alo = aex - ahi;\n  c = splitter * cey;\n  bhi = c - (c - cey);\n  blo = cey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = cex * aey;\n  c = splitter * cex;\n  ahi = c - (c - cex);\n  alo = cex - ahi;\n  c = splitter * aey;\n  bhi = c - (c - aey);\n  blo = aey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ac[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ac[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  ac3 = _j + _i;\n  bvirt = ac3 - _j;\n  ac[2] = _j - (ac3 - bvirt) + (_i - bvirt);\n  ac[3] = ac3;\n  s1 = bex * dey;\n  c = splitter * bex;\n  ahi = c - (c - bex);\n  alo = bex - ahi;\n  c = splitter * dey;\n  bhi = c - (c - dey);\n  blo = dey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = dex * bey;\n  c = splitter * dex;\n  ahi = c - (c - dex);\n  alo = dex - ahi;\n  c = splitter * bey;\n  bhi = c - (c - bey);\n  blo = bey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  bd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  bd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  bd3 = _j + _i;\n  bvirt = bd3 - _j;\n  bd[2] = _j - (bd3 - bvirt) + (_i - bvirt);\n  bd[3] = bd3;\n  const finlen = sum(sum(negate(liftadapt(bc, cd, bd, dez, bez, -cez, aex, aey, aez, adet), adet), adet, liftadapt(cd, da, ac, aez, cez, dez, bex, bey, bez, bdet), bdet, abdet), abdet, sum(negate(liftadapt(da, ab, bd, bez, dez, aez, cex, cey, cez, cdet), cdet), cdet, liftadapt(ab, bc, ac, cez, aez, -bez, dex, dey, dez, ddet), ddet, cddet), cddet, fin);\n  let det = estimate(finlen, fin);\n  let errbound = isperrboundB * permanent;\n\n  if (det >= errbound || -det >= errbound) {\n    return det;\n  }\n\n  bvirt = ax - aex;\n  aextail = ax - (aex + bvirt) + (bvirt - ex);\n  bvirt = ay - aey;\n  aeytail = ay - (aey + bvirt) + (bvirt - ey);\n  bvirt = az - aez;\n  aeztail = az - (aez + bvirt) + (bvirt - ez);\n  bvirt = bx - bex;\n  bextail = bx - (bex + bvirt) + (bvirt - ex);\n  bvirt = by - bey;\n  beytail = by - (bey + bvirt) + (bvirt - ey);\n  bvirt = bz - bez;\n  beztail = bz - (bez + bvirt) + (bvirt - ez);\n  bvirt = cx - cex;\n  cextail = cx - (cex + bvirt) + (bvirt - ex);\n  bvirt = cy - cey;\n  ceytail = cy - (cey + bvirt) + (bvirt - ey);\n  bvirt = cz - cez;\n  ceztail = cz - (cez + bvirt) + (bvirt - ez);\n  bvirt = dx - dex;\n  dextail = dx - (dex + bvirt) + (bvirt - ex);\n  bvirt = dy - dey;\n  deytail = dy - (dey + bvirt) + (bvirt - ey);\n  bvirt = dz - dez;\n  deztail = dz - (dez + bvirt) + (bvirt - ez);\n\n  if (aextail === 0 && aeytail === 0 && aeztail === 0 && bextail === 0 && beytail === 0 && beztail === 0 && cextail === 0 && ceytail === 0 && ceztail === 0 && dextail === 0 && deytail === 0 && deztail === 0) {\n    return det;\n  }\n\n  errbound = isperrboundC * permanent + resulterrbound * Math.abs(det);\n  const abeps = aex * beytail + bey * aextail - (aey * bextail + bex * aeytail);\n  const bceps = bex * ceytail + cey * bextail - (bey * cextail + cex * beytail);\n  const cdeps = cex * deytail + dey * cextail - (cey * dextail + dex * ceytail);\n  const daeps = dex * aeytail + aey * dextail - (dey * aextail + aex * deytail);\n  const aceps = aex * ceytail + cey * aextail - (aey * cextail + cex * aeytail);\n  const bdeps = bex * deytail + dey * bextail - (bey * dextail + dex * beytail);\n  det += (bex * bex + bey * bey + bez * bez) * (cez * daeps + dez * aceps + aez * cdeps + (ceztail * da3 + deztail * ac3 + aeztail * cd3)) + (dex * dex + dey * dey + dez * dez) * (aez * bceps - bez * aceps + cez * abeps + (aeztail * bc3 - beztail * ac3 + ceztail * ab3)) - ((aex * aex + aey * aey + aez * aez) * (bez * cdeps - cez * bdeps + dez * bceps + (beztail * cd3 - ceztail * bd3 + deztail * bc3)) + (cex * cex + cey * cey + cez * cez) * (dez * abeps + aez * bdeps + bez * daeps + (deztail * ab3 + aeztail * bd3 + beztail * da3))) + 2 * ((bex * bextail + bey * beytail + bez * beztail) * (cez * da3 + dez * ac3 + aez * cd3) + (dex * dextail + dey * deytail + dez * deztail) * (aez * bc3 - bez * ac3 + cez * ab3) - ((aex * aextail + aey * aeytail + aez * aeztail) * (bez * cd3 - cez * bd3 + dez * bc3) + (cex * cextail + cey * ceytail + cez * ceztail) * (dez * ab3 + aez * bd3 + bez * da3)));\n\n  if (det >= errbound || -det >= errbound) {\n    return det;\n  }\n\n  return insphereexact(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez);\n}\n\nexport function insphere(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez) {\n  const aex = ax - ex;\n  const bex = bx - ex;\n  const cex = cx - ex;\n  const dex = dx - ex;\n  const aey = ay - ey;\n  const bey = by - ey;\n  const cey = cy - ey;\n  const dey = dy - ey;\n  const aez = az - ez;\n  const bez = bz - ez;\n  const cez = cz - ez;\n  const dez = dz - ez;\n  const aexbey = aex * bey;\n  const bexaey = bex * aey;\n  const ab = aexbey - bexaey;\n  const bexcey = bex * cey;\n  const cexbey = cex * bey;\n  const bc = bexcey - cexbey;\n  const cexdey = cex * dey;\n  const dexcey = dex * cey;\n  const cd = cexdey - dexcey;\n  const dexaey = dex * aey;\n  const aexdey = aex * dey;\n  const da = dexaey - aexdey;\n  const aexcey = aex * cey;\n  const cexaey = cex * aey;\n  const ac = aexcey - cexaey;\n  const bexdey = bex * dey;\n  const dexbey = dex * bey;\n  const bd = bexdey - dexbey;\n  const abc = aez * bc - bez * ac + cez * ab;\n  const bcd = bez * cd - cez * bd + dez * bc;\n  const cda = cez * da + dez * ac + aez * cd;\n  const dab = dez * ab + aez * bd + bez * da;\n  const alift = aex * aex + aey * aey + aez * aez;\n  const blift = bex * bex + bey * bey + bez * bez;\n  const clift = cex * cex + cey * cey + cez * cez;\n  const dlift = dex * dex + dey * dey + dez * dez;\n  const det = clift * dab - dlift * abc + (alift * bcd - blift * cda);\n  const aezplus = Math.abs(aez);\n  const bezplus = Math.abs(bez);\n  const cezplus = Math.abs(cez);\n  const dezplus = Math.abs(dez);\n  const aexbeyplus = Math.abs(aexbey);\n  const bexaeyplus = Math.abs(bexaey);\n  const bexceyplus = Math.abs(bexcey);\n  const cexbeyplus = Math.abs(cexbey);\n  const cexdeyplus = Math.abs(cexdey);\n  const dexceyplus = Math.abs(dexcey);\n  const dexaeyplus = Math.abs(dexaey);\n  const aexdeyplus = Math.abs(aexdey);\n  const aexceyplus = Math.abs(aexcey);\n  const cexaeyplus = Math.abs(cexaey);\n  const bexdeyplus = Math.abs(bexdey);\n  const dexbeyplus = Math.abs(dexbey);\n  const permanent = ((cexdeyplus + dexceyplus) * bezplus + (dexbeyplus + bexdeyplus) * cezplus + (bexceyplus + cexbeyplus) * dezplus) * alift + ((dexaeyplus + aexdeyplus) * cezplus + (aexceyplus + cexaeyplus) * dezplus + (cexdeyplus + dexceyplus) * aezplus) * blift + ((aexbeyplus + bexaeyplus) * dezplus + (bexdeyplus + dexbeyplus) * aezplus + (dexaeyplus + aexdeyplus) * bezplus) * clift + ((bexceyplus + cexbeyplus) * aezplus + (cexaeyplus + aexceyplus) * bezplus + (aexbeyplus + bexaeyplus) * cezplus) * dlift;\n  const errbound = isperrboundA * permanent;\n\n  if (det > errbound || -det > errbound) {\n    return det;\n  }\n\n  return -insphereadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez, permanent);\n}\nexport function inspherefast(pax, pay, paz, pbx, pby, pbz, pcx, pcy, pcz, pdx, pdy, pdz, pex, pey, pez) {\n  const aex = pax - pex;\n  const bex = pbx - pex;\n  const cex = pcx - pex;\n  const dex = pdx - pex;\n  const aey = pay - pey;\n  const bey = pby - pey;\n  const cey = pcy - pey;\n  const dey = pdy - pey;\n  const aez = paz - pez;\n  const bez = pbz - pez;\n  const cez = pcz - pez;\n  const dez = pdz - pez;\n  const ab = aex * bey - bex * aey;\n  const bc = bex * cey - cex * bey;\n  const cd = cex * dey - dex * cey;\n  const da = dex * aey - aex * dey;\n  const ac = aex * cey - cex * aey;\n  const bd = bex * dey - dex * bey;\n  const abc = aez * bc - bez * ac + cez * ab;\n  const bcd = bez * cd - cez * bd + dez * bc;\n  const cda = cez * da + dez * ac + aez * cd;\n  const dab = dez * ab + aez * bd + bez * da;\n  const alift = aex * aex + aey * aey + aez * aez;\n  const blift = bex * bex + bey * bey + bez * bez;\n  const clift = cex * cex + cey * cey + cez * cez;\n  const dlift = dex * dex + dey * dey + dez * dez;\n  return clift * dab - dlift * abc + (alift * bcd - blift * cda);\n}","map":{"version":3,"sources":["/Users/davidmunechika/Documents/Code/visual-auditor/node_modules/robust-predicates/esm/insphere.js"],"names":["epsilon","splitter","resulterrbound","estimate","vec","sum","sum_three","scale","negate","isperrboundA","isperrboundB","isperrboundC","ab","bc","cd","de","ea","ac","bd","ce","da","eb","abc","bcd","cde","dea","eab","abd","bce","cda","deb","eac","adet","bdet","cdet","ddet","edet","abdet","cddet","cdedet","deter","_8","_8b","_8c","_16","_24","_48","_48b","_96","_192","_384x","_384y","_384z","_768","sum_three_scale","a","b","c","az","bz","cz","out","liftexact","alen","blen","clen","dlen","d","x","y","z","len","insphereexact","ax","ay","bx","by","cx","cy","dx","dy","dz","ex","ey","ez","bvirt","ahi","alo","bhi","blo","_i","_j","_0","s1","s0","t1","t0","u3","abclen","bcdlen","cdelen","dealen","eablen","abdlen","bcelen","cdalen","deblen","eaclen","deterlen","xdet","ydet","zdet","fin","liftadapt","insphereadapt","permanent","ab3","bc3","cd3","da3","ac3","bd3","aextail","bextail","cextail","dextail","aeytail","beytail","ceytail","deytail","aeztail","beztail","ceztail","deztail","aex","bex","cex","dex","aey","bey","cey","dey","aez","bez","cez","dez","finlen","det","errbound","Math","abs","abeps","bceps","cdeps","daeps","aceps","bdeps","insphere","aexbey","bexaey","bexcey","cexbey","cexdey","dexcey","dexaey","aexdey","aexcey","cexaey","bexdey","dexbey","dab","alift","blift","clift","dlift","aezplus","bezplus","cezplus","dezplus","aexbeyplus","bexaeyplus","bexceyplus","cexbeyplus","cexdeyplus","dexceyplus","dexaeyplus","aexdeyplus","aexceyplus","cexaeyplus","bexdeyplus","dexbeyplus","inspherefast","pax","pay","paz","pbx","pby","pbz","pcx","pcy","pcz","pdx","pdy","pdz","pex","pey","pez"],"mappings":"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","sourcesContent":["import {epsilon, splitter, resulterrbound, estimate, vec, sum, sum_three, scale, negate} from './util.js';\n\nconst isperrboundA = (16 + 224 * epsilon) * epsilon;\nconst isperrboundB = (5 + 72 * epsilon) * epsilon;\nconst isperrboundC = (71 + 1408 * epsilon) * epsilon * epsilon;\n\nconst ab = vec(4);\nconst bc = vec(4);\nconst cd = vec(4);\nconst de = vec(4);\nconst ea = vec(4);\nconst ac = vec(4);\nconst bd = vec(4);\nconst ce = vec(4);\nconst da = vec(4);\nconst eb = vec(4);\n\nconst abc = vec(24);\nconst bcd = vec(24);\nconst cde = vec(24);\nconst dea = vec(24);\nconst eab = vec(24);\nconst abd = vec(24);\nconst bce = vec(24);\nconst cda = vec(24);\nconst deb = vec(24);\nconst eac = vec(24);\n\nconst adet = vec(1152);\nconst bdet = vec(1152);\nconst cdet = vec(1152);\nconst ddet = vec(1152);\nconst edet = vec(1152);\nconst abdet = vec(2304);\nconst cddet = vec(2304);\nconst cdedet = vec(3456);\nconst deter = vec(5760);\n\nconst _8 = vec(8);\nconst _8b = vec(8);\nconst _8c = vec(8);\nconst _16 = vec(16);\nconst _24 = vec(24);\nconst _48 = vec(48);\nconst _48b = vec(48);\nconst _96 = vec(96);\nconst _192 = vec(192);\nconst _384x = vec(384);\nconst _384y = vec(384);\nconst _384z = vec(384);\nconst _768 = vec(768);\n\nfunction sum_three_scale(a, b, c, az, bz, cz, out) {\n    return sum_three(\n        scale(4, a, az, _8), _8,\n        scale(4, b, bz, _8b), _8b,\n        scale(4, c, cz, _8c), _8c, _16, out);\n}\n\nfunction liftexact(alen, a, blen, b, clen, c, dlen, d, x, y, z, out) {\n    const len = sum(\n        sum(alen, a, blen, b, _48), _48,\n        negate(sum(clen, c, dlen, d, _48b), _48b), _48b, _96);\n\n    return sum_three(\n        scale(scale(len, _96, x, _192), _192, x, _384x), _384x,\n        scale(scale(len, _96, y, _192), _192, y, _384y), _384y,\n        scale(scale(len, _96, z, _192), _192, z, _384z), _384z, _768, out);\n}\n\nfunction insphereexact(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez) {\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n    s1 = ax * by;\n    c = splitter * ax;\n    ahi = c - (c - ax);\n    alo = ax - ahi;\n    c = splitter * by;\n    bhi = c - (c - by);\n    blo = by - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bx * ay;\n    c = splitter * bx;\n    ahi = c - (c - bx);\n    alo = bx - ahi;\n    c = splitter * ay;\n    bhi = c - (c - ay);\n    blo = ay - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ab[3] = u3;\n    s1 = bx * cy;\n    c = splitter * bx;\n    ahi = c - (c - bx);\n    alo = bx - ahi;\n    c = splitter * cy;\n    bhi = c - (c - cy);\n    blo = cy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cx * by;\n    c = splitter * cx;\n    ahi = c - (c - cx);\n    alo = cx - ahi;\n    c = splitter * by;\n    bhi = c - (c - by);\n    blo = by - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bc[3] = u3;\n    s1 = cx * dy;\n    c = splitter * cx;\n    ahi = c - (c - cx);\n    alo = cx - ahi;\n    c = splitter * dy;\n    bhi = c - (c - dy);\n    blo = dy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = dx * cy;\n    c = splitter * dx;\n    ahi = c - (c - dx);\n    alo = dx - ahi;\n    c = splitter * cy;\n    bhi = c - (c - cy);\n    blo = cy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    cd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    cd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    cd[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    cd[3] = u3;\n    s1 = dx * ey;\n    c = splitter * dx;\n    ahi = c - (c - dx);\n    alo = dx - ahi;\n    c = splitter * ey;\n    bhi = c - (c - ey);\n    blo = ey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = ex * dy;\n    c = splitter * ex;\n    ahi = c - (c - ex);\n    alo = ex - ahi;\n    c = splitter * dy;\n    bhi = c - (c - dy);\n    blo = dy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    de[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    de[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    de[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    de[3] = u3;\n    s1 = ex * ay;\n    c = splitter * ex;\n    ahi = c - (c - ex);\n    alo = ex - ahi;\n    c = splitter * ay;\n    bhi = c - (c - ay);\n    blo = ay - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = ax * ey;\n    c = splitter * ax;\n    ahi = c - (c - ax);\n    alo = ax - ahi;\n    c = splitter * ey;\n    bhi = c - (c - ey);\n    blo = ey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ea[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ea[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ea[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ea[3] = u3;\n    s1 = ax * cy;\n    c = splitter * ax;\n    ahi = c - (c - ax);\n    alo = ax - ahi;\n    c = splitter * cy;\n    bhi = c - (c - cy);\n    blo = cy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cx * ay;\n    c = splitter * cx;\n    ahi = c - (c - cx);\n    alo = cx - ahi;\n    c = splitter * ay;\n    bhi = c - (c - ay);\n    blo = ay - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ac[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ac[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ac[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ac[3] = u3;\n    s1 = bx * dy;\n    c = splitter * bx;\n    ahi = c - (c - bx);\n    alo = bx - ahi;\n    c = splitter * dy;\n    bhi = c - (c - dy);\n    blo = dy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = dx * by;\n    c = splitter * dx;\n    ahi = c - (c - dx);\n    alo = dx - ahi;\n    c = splitter * by;\n    bhi = c - (c - by);\n    blo = by - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bd[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bd[3] = u3;\n    s1 = cx * ey;\n    c = splitter * cx;\n    ahi = c - (c - cx);\n    alo = cx - ahi;\n    c = splitter * ey;\n    bhi = c - (c - ey);\n    blo = ey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = ex * cy;\n    c = splitter * ex;\n    ahi = c - (c - ex);\n    alo = ex - ahi;\n    c = splitter * cy;\n    bhi = c - (c - cy);\n    blo = cy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ce[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ce[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ce[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ce[3] = u3;\n    s1 = dx * ay;\n    c = splitter * dx;\n    ahi = c - (c - dx);\n    alo = dx - ahi;\n    c = splitter * ay;\n    bhi = c - (c - ay);\n    blo = ay - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = ax * dy;\n    c = splitter * ax;\n    ahi = c - (c - ax);\n    alo = ax - ahi;\n    c = splitter * dy;\n    bhi = c - (c - dy);\n    blo = dy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    da[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    da[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    da[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    da[3] = u3;\n    s1 = ex * by;\n    c = splitter * ex;\n    ahi = c - (c - ex);\n    alo = ex - ahi;\n    c = splitter * by;\n    bhi = c - (c - by);\n    blo = by - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bx * ey;\n    c = splitter * bx;\n    ahi = c - (c - bx);\n    alo = bx - ahi;\n    c = splitter * ey;\n    bhi = c - (c - ey);\n    blo = ey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    eb[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    eb[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    eb[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    eb[3] = u3;\n\n    const abclen = sum_three_scale(ab, bc, ac, cz, az, -bz, abc);\n    const bcdlen = sum_three_scale(bc, cd, bd, dz, bz, -cz, bcd);\n    const cdelen = sum_three_scale(cd, de, ce, ez, cz, -dz, cde);\n    const dealen = sum_three_scale(de, ea, da, az, dz, -ez, dea);\n    const eablen = sum_three_scale(ea, ab, eb, bz, ez, -az, eab);\n    const abdlen = sum_three_scale(ab, bd, da, dz, az, bz, abd);\n    const bcelen = sum_three_scale(bc, ce, eb, ez, bz, cz, bce);\n    const cdalen = sum_three_scale(cd, da, ac, az, cz, dz, cda);\n    const deblen = sum_three_scale(de, eb, bd, bz, dz, ez, deb);\n    const eaclen = sum_three_scale(ea, ac, ce, cz, ez, az, eac);\n\n    const deterlen = sum_three(\n        liftexact(cdelen, cde, bcelen, bce, deblen, deb, bcdlen, bcd, ax, ay, az, adet), adet,\n        liftexact(dealen, dea, cdalen, cda, eaclen, eac, cdelen, cde, bx, by, bz, bdet), bdet,\n        sum_three(\n            liftexact(eablen, eab, deblen, deb, abdlen, abd, dealen, dea, cx, cy, cz, cdet), cdet,\n            liftexact(abclen, abc, eaclen, eac, bcelen, bce, eablen, eab, dx, dy, dz, ddet), ddet,\n            liftexact(bcdlen, bcd, abdlen, abd, cdalen, cda, abclen, abc, ex, ey, ez, edet), edet, cddet, cdedet), cdedet, abdet, deter);\n\n    return deter[deterlen - 1];\n}\n\nconst xdet = vec(96);\nconst ydet = vec(96);\nconst zdet = vec(96);\nconst fin = vec(1152);\n\nfunction liftadapt(a, b, c, az, bz, cz, x, y, z, out) {\n    const len = sum_three_scale(a, b, c, az, bz, cz, _24);\n    return sum_three(\n        scale(scale(len, _24, x, _48), _48, x, xdet), xdet,\n        scale(scale(len, _24, y, _48), _48, y, ydet), ydet,\n        scale(scale(len, _24, z, _48), _48, z, zdet), zdet, _192, out);\n}\n\nfunction insphereadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez, permanent) {\n    let ab3, bc3, cd3, da3, ac3, bd3;\n\n    let aextail, bextail, cextail, dextail;\n    let aeytail, beytail, ceytail, deytail;\n    let aeztail, beztail, ceztail, deztail;\n\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0;\n\n    const aex = ax - ex;\n    const bex = bx - ex;\n    const cex = cx - ex;\n    const dex = dx - ex;\n    const aey = ay - ey;\n    const bey = by - ey;\n    const cey = cy - ey;\n    const dey = dy - ey;\n    const aez = az - ez;\n    const bez = bz - ez;\n    const cez = cz - ez;\n    const dez = dz - ez;\n\n    s1 = aex * bey;\n    c = splitter * aex;\n    ahi = c - (c - aex);\n    alo = aex - ahi;\n    c = splitter * bey;\n    bhi = c - (c - bey);\n    blo = bey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bex * aey;\n    c = splitter * bex;\n    ahi = c - (c - bex);\n    alo = bex - ahi;\n    c = splitter * aey;\n    bhi = c - (c - aey);\n    blo = aey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    ab3 = _j + _i;\n    bvirt = ab3 - _j;\n    ab[2] = _j - (ab3 - bvirt) + (_i - bvirt);\n    ab[3] = ab3;\n    s1 = bex * cey;\n    c = splitter * bex;\n    ahi = c - (c - bex);\n    alo = bex - ahi;\n    c = splitter * cey;\n    bhi = c - (c - cey);\n    blo = cey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cex * bey;\n    c = splitter * cex;\n    ahi = c - (c - cex);\n    alo = cex - ahi;\n    c = splitter * bey;\n    bhi = c - (c - bey);\n    blo = bey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    bc3 = _j + _i;\n    bvirt = bc3 - _j;\n    bc[2] = _j - (bc3 - bvirt) + (_i - bvirt);\n    bc[3] = bc3;\n    s1 = cex * dey;\n    c = splitter * cex;\n    ahi = c - (c - cex);\n    alo = cex - ahi;\n    c = splitter * dey;\n    bhi = c - (c - dey);\n    blo = dey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = dex * cey;\n    c = splitter * dex;\n    ahi = c - (c - dex);\n    alo = dex - ahi;\n    c = splitter * cey;\n    bhi = c - (c - cey);\n    blo = cey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    cd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    cd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    cd3 = _j + _i;\n    bvirt = cd3 - _j;\n    cd[2] = _j - (cd3 - bvirt) + (_i - bvirt);\n    cd[3] = cd3;\n    s1 = dex * aey;\n    c = splitter * dex;\n    ahi = c - (c - dex);\n    alo = dex - ahi;\n    c = splitter * aey;\n    bhi = c - (c - aey);\n    blo = aey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = aex * dey;\n    c = splitter * aex;\n    ahi = c - (c - aex);\n    alo = aex - ahi;\n    c = splitter * dey;\n    bhi = c - (c - dey);\n    blo = dey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    da[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    da[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    da3 = _j + _i;\n    bvirt = da3 - _j;\n    da[2] = _j - (da3 - bvirt) + (_i - bvirt);\n    da[3] = da3;\n    s1 = aex * cey;\n    c = splitter * aex;\n    ahi = c - (c - aex);\n    alo = aex - ahi;\n    c = splitter * cey;\n    bhi = c - (c - cey);\n    blo = cey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cex * aey;\n    c = splitter * cex;\n    ahi = c - (c - cex);\n    alo = cex - ahi;\n    c = splitter * aey;\n    bhi = c - (c - aey);\n    blo = aey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ac[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ac[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    ac3 = _j + _i;\n    bvirt = ac3 - _j;\n    ac[2] = _j - (ac3 - bvirt) + (_i - bvirt);\n    ac[3] = ac3;\n    s1 = bex * dey;\n    c = splitter * bex;\n    ahi = c - (c - bex);\n    alo = bex - ahi;\n    c = splitter * dey;\n    bhi = c - (c - dey);\n    blo = dey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = dex * bey;\n    c = splitter * dex;\n    ahi = c - (c - dex);\n    alo = dex - ahi;\n    c = splitter * bey;\n    bhi = c - (c - bey);\n    blo = bey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    bd3 = _j + _i;\n    bvirt = bd3 - _j;\n    bd[2] = _j - (bd3 - bvirt) + (_i - bvirt);\n    bd[3] = bd3;\n\n    const finlen = sum(\n        sum(\n            negate(liftadapt(bc, cd, bd, dez, bez, -cez, aex, aey, aez, adet), adet), adet,\n            liftadapt(cd, da, ac, aez, cez, dez, bex, bey, bez, bdet), bdet, abdet), abdet,\n        sum(\n            negate(liftadapt(da, ab, bd, bez, dez, aez, cex, cey, cez, cdet), cdet), cdet,\n            liftadapt(ab, bc, ac, cez, aez, -bez, dex, dey, dez, ddet), ddet, cddet), cddet, fin);\n\n    let det = estimate(finlen, fin);\n    let errbound = isperrboundB * permanent;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - aex;\n    aextail = ax - (aex + bvirt) + (bvirt - ex);\n    bvirt = ay - aey;\n    aeytail = ay - (aey + bvirt) + (bvirt - ey);\n    bvirt = az - aez;\n    aeztail = az - (aez + bvirt) + (bvirt - ez);\n    bvirt = bx - bex;\n    bextail = bx - (bex + bvirt) + (bvirt - ex);\n    bvirt = by - bey;\n    beytail = by - (bey + bvirt) + (bvirt - ey);\n    bvirt = bz - bez;\n    beztail = bz - (bez + bvirt) + (bvirt - ez);\n    bvirt = cx - cex;\n    cextail = cx - (cex + bvirt) + (bvirt - ex);\n    bvirt = cy - cey;\n    ceytail = cy - (cey + bvirt) + (bvirt - ey);\n    bvirt = cz - cez;\n    ceztail = cz - (cez + bvirt) + (bvirt - ez);\n    bvirt = dx - dex;\n    dextail = dx - (dex + bvirt) + (bvirt - ex);\n    bvirt = dy - dey;\n    deytail = dy - (dey + bvirt) + (bvirt - ey);\n    bvirt = dz - dez;\n    deztail = dz - (dez + bvirt) + (bvirt - ez);\n    if (aextail === 0 && aeytail === 0 && aeztail === 0 &&\n        bextail === 0 && beytail === 0 && beztail === 0 &&\n        cextail === 0 && ceytail === 0 && ceztail === 0 &&\n        dextail === 0 && deytail === 0 && deztail === 0) {\n        return det;\n    }\n\n    errbound = isperrboundC * permanent + resulterrbound * Math.abs(det);\n\n    const abeps = (aex * beytail + bey * aextail) - (aey * bextail + bex * aeytail);\n    const bceps = (bex * ceytail + cey * bextail) - (bey * cextail + cex * beytail);\n    const cdeps = (cex * deytail + dey * cextail) - (cey * dextail + dex * ceytail);\n    const daeps = (dex * aeytail + aey * dextail) - (dey * aextail + aex * deytail);\n    const aceps = (aex * ceytail + cey * aextail) - (aey * cextail + cex * aeytail);\n    const bdeps = (bex * deytail + dey * bextail) - (bey * dextail + dex * beytail);\n    det +=\n        (((bex * bex + bey * bey + bez * bez) * ((cez * daeps + dez * aceps + aez * cdeps) +\n        (ceztail * da3 + deztail * ac3 + aeztail * cd3)) + (dex * dex + dey * dey + dez * dez) *\n        ((aez * bceps - bez * aceps + cez * abeps) + (aeztail * bc3 - beztail * ac3 + ceztail * ab3))) -\n        ((aex * aex + aey * aey + aez * aez) * ((bez * cdeps - cez * bdeps + dez * bceps) +\n        (beztail * cd3 - ceztail * bd3 + deztail * bc3)) + (cex * cex + cey * cey + cez * cez) *\n        ((dez * abeps + aez * bdeps + bez * daeps) + (deztail * ab3 + aeztail * bd3 + beztail * da3)))) +\n        2 * (((bex * bextail + bey * beytail + bez * beztail) * (cez * da3 + dez * ac3 + aez * cd3) +\n        (dex * dextail + dey * deytail + dez * deztail) * (aez * bc3 - bez * ac3 + cez * ab3)) -\n        ((aex * aextail + aey * aeytail + aez * aeztail) * (bez * cd3 - cez * bd3 + dez * bc3) +\n        (cex * cextail + cey * ceytail + cez * ceztail) * (dez * ab3 + aez * bd3 + bez * da3)));\n\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    return insphereexact(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez);\n}\n\nexport function insphere(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez) {\n    const aex = ax - ex;\n    const bex = bx - ex;\n    const cex = cx - ex;\n    const dex = dx - ex;\n    const aey = ay - ey;\n    const bey = by - ey;\n    const cey = cy - ey;\n    const dey = dy - ey;\n    const aez = az - ez;\n    const bez = bz - ez;\n    const cez = cz - ez;\n    const dez = dz - ez;\n\n    const aexbey = aex * bey;\n    const bexaey = bex * aey;\n    const ab = aexbey - bexaey;\n    const bexcey = bex * cey;\n    const cexbey = cex * bey;\n    const bc = bexcey - cexbey;\n    const cexdey = cex * dey;\n    const dexcey = dex * cey;\n    const cd = cexdey - dexcey;\n    const dexaey = dex * aey;\n    const aexdey = aex * dey;\n    const da = dexaey - aexdey;\n    const aexcey = aex * cey;\n    const cexaey = cex * aey;\n    const ac = aexcey - cexaey;\n    const bexdey = bex * dey;\n    const dexbey = dex * bey;\n    const bd = bexdey - dexbey;\n\n    const abc = aez * bc - bez * ac + cez * ab;\n    const bcd = bez * cd - cez * bd + dez * bc;\n    const cda = cez * da + dez * ac + aez * cd;\n    const dab = dez * ab + aez * bd + bez * da;\n\n    const alift = aex * aex + aey * aey + aez * aez;\n    const blift = bex * bex + bey * bey + bez * bez;\n    const clift = cex * cex + cey * cey + cez * cez;\n    const dlift = dex * dex + dey * dey + dez * dez;\n\n    const det = (clift * dab - dlift * abc) + (alift * bcd - blift * cda);\n\n    const aezplus = Math.abs(aez);\n    const bezplus = Math.abs(bez);\n    const cezplus = Math.abs(cez);\n    const dezplus = Math.abs(dez);\n    const aexbeyplus = Math.abs(aexbey);\n    const bexaeyplus = Math.abs(bexaey);\n    const bexceyplus = Math.abs(bexcey);\n    const cexbeyplus = Math.abs(cexbey);\n    const cexdeyplus = Math.abs(cexdey);\n    const dexceyplus = Math.abs(dexcey);\n    const dexaeyplus = Math.abs(dexaey);\n    const aexdeyplus = Math.abs(aexdey);\n    const aexceyplus = Math.abs(aexcey);\n    const cexaeyplus = Math.abs(cexaey);\n    const bexdeyplus = Math.abs(bexdey);\n    const dexbeyplus = Math.abs(dexbey);\n    const permanent =\n        ((cexdeyplus + dexceyplus) * bezplus + (dexbeyplus + bexdeyplus) * cezplus + (bexceyplus + cexbeyplus) * dezplus) * alift +\n        ((dexaeyplus + aexdeyplus) * cezplus + (aexceyplus + cexaeyplus) * dezplus + (cexdeyplus + dexceyplus) * aezplus) * blift +\n        ((aexbeyplus + bexaeyplus) * dezplus + (bexdeyplus + dexbeyplus) * aezplus + (dexaeyplus + aexdeyplus) * bezplus) * clift +\n        ((bexceyplus + cexbeyplus) * aezplus + (cexaeyplus + aexceyplus) * bezplus + (aexbeyplus + bexaeyplus) * cezplus) * dlift;\n\n    const errbound = isperrboundA * permanent;\n    if (det > errbound || -det > errbound) {\n        return det;\n    }\n    return -insphereadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez, permanent);\n}\n\nexport function inspherefast(pax, pay, paz, pbx, pby, pbz, pcx, pcy, pcz, pdx, pdy, pdz, pex, pey, pez) {\n    const aex = pax - pex;\n    const bex = pbx - pex;\n    const cex = pcx - pex;\n    const dex = pdx - pex;\n    const aey = pay - pey;\n    const bey = pby - pey;\n    const cey = pcy - pey;\n    const dey = pdy - pey;\n    const aez = paz - pez;\n    const bez = pbz - pez;\n    const cez = pcz - pez;\n    const dez = pdz - pez;\n\n    const ab = aex * bey - bex * aey;\n    const bc = bex * cey - cex * bey;\n    const cd = cex * dey - dex * cey;\n    const da = dex * aey - aex * dey;\n    const ac = aex * cey - cex * aey;\n    const bd = bex * dey - dex * bey;\n\n    const abc = aez * bc - bez * ac + cez * ab;\n    const bcd = bez * cd - cez * bd + dez * bc;\n    const cda = cez * da + dez * ac + aez * cd;\n    const dab = dez * ab + aez * bd + bez * da;\n\n    const alift = aex * aex + aey * aey + aez * aez;\n    const blift = bex * bex + bey * bey + bez * bez;\n    const clift = cex * cex + cey * cey + cez * cez;\n    const dlift = dex * dex + dey * dey + dez * dez;\n\n    return (clift * dab - dlift * abc) + (alift * bcd - blift * cda);\n}\n"]},"metadata":{},"sourceType":"module"}