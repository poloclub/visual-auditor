{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/davidmunechika/Documents/Code/Research/visual-auditor/visual-auditor-package/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nexport default function sum(values, valueof) {\n  var sum = 0;\n\n  if (valueof === undefined) {\n    var _iterator = _createForOfIteratorHelper(values),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var value = _step.value;\n\n        if (value = +value) {\n          sum += value;\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  } else {\n    var index = -1;\n\n    var _iterator2 = _createForOfIteratorHelper(values),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var _value = _step2.value;\n\n        if (_value = +valueof(_value, ++index, values)) {\n          sum += _value;\n        }\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  }\n\n  return sum;\n}","map":{"version":3,"sources":["/Users/davidmunechika/Documents/Code/Research/visual-auditor/visual-auditor-package/node_modules/d3-array/src/sum.js"],"names":["sum","values","valueof","undefined","value","index"],"mappings":";AAAA,eAAe,SAASA,GAAT,CAAaC,MAAb,EAAqBC,OAArB,EAA8B;AAC3C,MAAIF,GAAG,GAAG,CAAV;;AACA,MAAIE,OAAO,KAAKC,SAAhB,EAA2B;AAAA,+CACPF,MADO;AAAA;;AAAA;AACzB,0DAA0B;AAAA,YAAjBG,KAAiB;;AACxB,YAAIA,KAAK,GAAG,CAACA,KAAb,EAAoB;AAClBJ,UAAAA,GAAG,IAAII,KAAP;AACD;AACF;AALwB;AAAA;AAAA;AAAA;AAAA;AAM1B,GAND,MAMO;AACL,QAAIC,KAAK,GAAG,CAAC,CAAb;;AADK,gDAEaJ,MAFb;AAAA;;AAAA;AAEL,6DAA0B;AAAA,YAAjBG,MAAiB;;AACxB,YAAIA,MAAK,GAAG,CAACF,OAAO,CAACE,MAAD,EAAQ,EAAEC,KAAV,EAAiBJ,MAAjB,CAApB,EAA8C;AAC5CD,UAAAA,GAAG,IAAII,MAAP;AACD;AACF;AANI;AAAA;AAAA;AAAA;AAAA;AAON;;AACD,SAAOJ,GAAP;AACD","sourcesContent":["export default function sum(values, valueof) {\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        sum += value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        sum += value;\n      }\n    }\n  }\n  return sum;\n}\n"]},"metadata":{},"sourceType":"module"}