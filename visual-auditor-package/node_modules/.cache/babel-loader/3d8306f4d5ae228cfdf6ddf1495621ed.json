{"ast":null,"code":"import { epsilon, splitter, resulterrbound, estimate, vec, sum, scale } from './util.js';\nconst o3derrboundA = (7 + 56 * epsilon) * epsilon;\nconst o3derrboundB = (3 + 28 * epsilon) * epsilon;\nconst o3derrboundC = (26 + 288 * epsilon) * epsilon * epsilon;\nconst bc = vec(4);\nconst ca = vec(4);\nconst ab = vec(4);\nconst at_b = vec(4);\nconst at_c = vec(4);\nconst bt_c = vec(4);\nconst bt_a = vec(4);\nconst ct_a = vec(4);\nconst ct_b = vec(4);\nconst bct = vec(8);\nconst cat = vec(8);\nconst abt = vec(8);\nconst u = vec(4);\n\nconst _8 = vec(8);\n\nconst _8b = vec(8);\n\nconst _16 = vec(8);\n\nconst _12 = vec(12);\n\nlet fin = vec(192);\nlet fin2 = vec(192);\n\nfunction finadd(finlen, alen, a) {\n  finlen = sum(finlen, fin, alen, a, fin2);\n  const tmp = fin;\n  fin = fin2;\n  fin2 = tmp;\n  return finlen;\n}\n\nfunction tailinit(xtail, ytail, ax, ay, bx, by, a, b) {\n  let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, t1, t0, u3, negate;\n\n  if (xtail === 0) {\n    if (ytail === 0) {\n      a[0] = 0;\n      b[0] = 0;\n      return 1;\n    } else {\n      negate = -ytail;\n      s1 = negate * ax;\n      c = splitter * negate;\n      ahi = c - (c - negate);\n      alo = negate - ahi;\n      c = splitter * ax;\n      bhi = c - (c - ax);\n      blo = ax - bhi;\n      a[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      a[1] = s1;\n      s1 = ytail * bx;\n      c = splitter * ytail;\n      ahi = c - (c - ytail);\n      alo = ytail - ahi;\n      c = splitter * bx;\n      bhi = c - (c - bx);\n      blo = bx - bhi;\n      b[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      b[1] = s1;\n      return 2;\n    }\n  } else {\n    if (ytail === 0) {\n      s1 = xtail * ay;\n      c = splitter * xtail;\n      ahi = c - (c - xtail);\n      alo = xtail - ahi;\n      c = splitter * ay;\n      bhi = c - (c - ay);\n      blo = ay - bhi;\n      a[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      a[1] = s1;\n      negate = -xtail;\n      s1 = negate * by;\n      c = splitter * negate;\n      ahi = c - (c - negate);\n      alo = negate - ahi;\n      c = splitter * by;\n      bhi = c - (c - by);\n      blo = by - bhi;\n      b[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      b[1] = s1;\n      return 2;\n    } else {\n      s1 = xtail * ay;\n      c = splitter * xtail;\n      ahi = c - (c - xtail);\n      alo = xtail - ahi;\n      c = splitter * ay;\n      bhi = c - (c - ay);\n      blo = ay - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = ytail * ax;\n      c = splitter * ytail;\n      ahi = c - (c - ytail);\n      alo = ytail - ahi;\n      c = splitter * ax;\n      bhi = c - (c - ax);\n      blo = ax - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 - t0;\n      bvirt = s0 - _i;\n      a[0] = s0 - (_i + bvirt) + (bvirt - t0);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 - t1;\n      bvirt = _0 - _i;\n      a[1] = _0 - (_i + bvirt) + (bvirt - t1);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      a[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      a[3] = u3;\n      s1 = ytail * bx;\n      c = splitter * ytail;\n      ahi = c - (c - ytail);\n      alo = ytail - ahi;\n      c = splitter * bx;\n      bhi = c - (c - bx);\n      blo = bx - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = xtail * by;\n      c = splitter * xtail;\n      ahi = c - (c - xtail);\n      alo = xtail - ahi;\n      c = splitter * by;\n      bhi = c - (c - by);\n      blo = by - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 - t0;\n      bvirt = s0 - _i;\n      b[0] = s0 - (_i + bvirt) + (bvirt - t0);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 - t1;\n      bvirt = _0 - _i;\n      b[1] = _0 - (_i + bvirt) + (bvirt - t1);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      b[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      b[3] = u3;\n      return 4;\n    }\n  }\n}\n\nfunction tailadd(finlen, a, b, k, z) {\n  let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, u3;\n\n  s1 = a * b;\n  c = splitter * a;\n  ahi = c - (c - a);\n  alo = a - ahi;\n  c = splitter * b;\n  bhi = c - (c - b);\n  blo = b - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  c = splitter * k;\n  bhi = c - (c - k);\n  blo = k - bhi;\n  _i = s0 * k;\n  c = splitter * s0;\n  ahi = c - (c - s0);\n  alo = s0 - ahi;\n  u[0] = alo * blo - (_i - ahi * bhi - alo * bhi - ahi * blo);\n  _j = s1 * k;\n  c = splitter * s1;\n  ahi = c - (c - s1);\n  alo = s1 - ahi;\n  _0 = alo * blo - (_j - ahi * bhi - alo * bhi - ahi * blo);\n  _k = _i + _0;\n  bvirt = _k - _i;\n  u[1] = _i - (_k - bvirt) + (_0 - bvirt);\n  u3 = _j + _k;\n  u[2] = _k - (u3 - _j);\n  u[3] = u3;\n  finlen = finadd(finlen, 4, u);\n\n  if (z !== 0) {\n    c = splitter * z;\n    bhi = c - (c - z);\n    blo = z - bhi;\n    _i = s0 * z;\n    c = splitter * s0;\n    ahi = c - (c - s0);\n    alo = s0 - ahi;\n    u[0] = alo * blo - (_i - ahi * bhi - alo * bhi - ahi * blo);\n    _j = s1 * z;\n    c = splitter * s1;\n    ahi = c - (c - s1);\n    alo = s1 - ahi;\n    _0 = alo * blo - (_j - ahi * bhi - alo * bhi - ahi * blo);\n    _k = _i + _0;\n    bvirt = _k - _i;\n    u[1] = _i - (_k - bvirt) + (_0 - bvirt);\n    u3 = _j + _k;\n    u[2] = _k - (u3 - _j);\n    u[3] = u3;\n    finlen = finadd(finlen, 4, u);\n  }\n\n  return finlen;\n}\n\nfunction orient3dadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, permanent) {\n  let finlen;\n  let adxtail, bdxtail, cdxtail;\n  let adytail, bdytail, cdytail;\n  let adztail, bdztail, cdztail;\n\n  let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, t1, t0, u3;\n\n  const adx = ax - dx;\n  const bdx = bx - dx;\n  const cdx = cx - dx;\n  const ady = ay - dy;\n  const bdy = by - dy;\n  const cdy = cy - dy;\n  const adz = az - dz;\n  const bdz = bz - dz;\n  const cdz = cz - dz;\n  s1 = bdx * cdy;\n  c = splitter * bdx;\n  ahi = c - (c - bdx);\n  alo = bdx - ahi;\n  c = splitter * cdy;\n  bhi = c - (c - cdy);\n  blo = cdy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = cdx * bdy;\n  c = splitter * cdx;\n  ahi = c - (c - cdx);\n  alo = cdx - ahi;\n  c = splitter * bdy;\n  bhi = c - (c - bdy);\n  blo = bdy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  bc[3] = u3;\n  s1 = cdx * ady;\n  c = splitter * cdx;\n  ahi = c - (c - cdx);\n  alo = cdx - ahi;\n  c = splitter * ady;\n  bhi = c - (c - ady);\n  blo = ady - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = adx * cdy;\n  c = splitter * adx;\n  ahi = c - (c - adx);\n  alo = adx - ahi;\n  c = splitter * cdy;\n  bhi = c - (c - cdy);\n  blo = cdy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ca[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ca[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ca[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ca[3] = u3;\n  s1 = adx * bdy;\n  c = splitter * adx;\n  ahi = c - (c - adx);\n  alo = adx - ahi;\n  c = splitter * bdy;\n  bhi = c - (c - bdy);\n  blo = bdy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = bdx * ady;\n  c = splitter * bdx;\n  ahi = c - (c - bdx);\n  alo = bdx - ahi;\n  c = splitter * ady;\n  bhi = c - (c - ady);\n  blo = ady - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ab[3] = u3;\n  finlen = sum(sum(scale(4, bc, adz, _8), _8, scale(4, ca, bdz, _8b), _8b, _16), _16, scale(4, ab, cdz, _8), _8, fin);\n  let det = estimate(finlen, fin);\n  let errbound = o3derrboundB * permanent;\n\n  if (det >= errbound || -det >= errbound) {\n    return det;\n  }\n\n  bvirt = ax - adx;\n  adxtail = ax - (adx + bvirt) + (bvirt - dx);\n  bvirt = bx - bdx;\n  bdxtail = bx - (bdx + bvirt) + (bvirt - dx);\n  bvirt = cx - cdx;\n  cdxtail = cx - (cdx + bvirt) + (bvirt - dx);\n  bvirt = ay - ady;\n  adytail = ay - (ady + bvirt) + (bvirt - dy);\n  bvirt = by - bdy;\n  bdytail = by - (bdy + bvirt) + (bvirt - dy);\n  bvirt = cy - cdy;\n  cdytail = cy - (cdy + bvirt) + (bvirt - dy);\n  bvirt = az - adz;\n  adztail = az - (adz + bvirt) + (bvirt - dz);\n  bvirt = bz - bdz;\n  bdztail = bz - (bdz + bvirt) + (bvirt - dz);\n  bvirt = cz - cdz;\n  cdztail = cz - (cdz + bvirt) + (bvirt - dz);\n\n  if (adxtail === 0 && bdxtail === 0 && cdxtail === 0 && adytail === 0 && bdytail === 0 && cdytail === 0 && adztail === 0 && bdztail === 0 && cdztail === 0) {\n    return det;\n  }\n\n  errbound = o3derrboundC * permanent + resulterrbound * Math.abs(det);\n  det += adz * (bdx * cdytail + cdy * bdxtail - (bdy * cdxtail + cdx * bdytail)) + adztail * (bdx * cdy - bdy * cdx) + bdz * (cdx * adytail + ady * cdxtail - (cdy * adxtail + adx * cdytail)) + bdztail * (cdx * ady - cdy * adx) + cdz * (adx * bdytail + bdy * adxtail - (ady * bdxtail + bdx * adytail)) + cdztail * (adx * bdy - ady * bdx);\n\n  if (det >= errbound || -det >= errbound) {\n    return det;\n  }\n\n  const at_len = tailinit(adxtail, adytail, bdx, bdy, cdx, cdy, at_b, at_c);\n  const bt_len = tailinit(bdxtail, bdytail, cdx, cdy, adx, ady, bt_c, bt_a);\n  const ct_len = tailinit(cdxtail, cdytail, adx, ady, bdx, bdy, ct_a, ct_b);\n  const bctlen = sum(bt_len, bt_c, ct_len, ct_b, bct);\n  finlen = finadd(finlen, scale(bctlen, bct, adz, _16), _16);\n  const catlen = sum(ct_len, ct_a, at_len, at_c, cat);\n  finlen = finadd(finlen, scale(catlen, cat, bdz, _16), _16);\n  const abtlen = sum(at_len, at_b, bt_len, bt_a, abt);\n  finlen = finadd(finlen, scale(abtlen, abt, cdz, _16), _16);\n\n  if (adztail !== 0) {\n    finlen = finadd(finlen, scale(4, bc, adztail, _12), _12);\n    finlen = finadd(finlen, scale(bctlen, bct, adztail, _16), _16);\n  }\n\n  if (bdztail !== 0) {\n    finlen = finadd(finlen, scale(4, ca, bdztail, _12), _12);\n    finlen = finadd(finlen, scale(catlen, cat, bdztail, _16), _16);\n  }\n\n  if (cdztail !== 0) {\n    finlen = finadd(finlen, scale(4, ab, cdztail, _12), _12);\n    finlen = finadd(finlen, scale(abtlen, abt, cdztail, _16), _16);\n  }\n\n  if (adxtail !== 0) {\n    if (bdytail !== 0) {\n      finlen = tailadd(finlen, adxtail, bdytail, cdz, cdztail);\n    }\n\n    if (cdytail !== 0) {\n      finlen = tailadd(finlen, -adxtail, cdytail, bdz, bdztail);\n    }\n  }\n\n  if (bdxtail !== 0) {\n    if (cdytail !== 0) {\n      finlen = tailadd(finlen, bdxtail, cdytail, adz, adztail);\n    }\n\n    if (adytail !== 0) {\n      finlen = tailadd(finlen, -bdxtail, adytail, cdz, cdztail);\n    }\n  }\n\n  if (cdxtail !== 0) {\n    if (adytail !== 0) {\n      finlen = tailadd(finlen, cdxtail, adytail, bdz, bdztail);\n    }\n\n    if (bdytail !== 0) {\n      finlen = tailadd(finlen, -cdxtail, bdytail, adz, adztail);\n    }\n  }\n\n  return fin[finlen - 1];\n}\n\nexport function orient3d(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz) {\n  const adx = ax - dx;\n  const bdx = bx - dx;\n  const cdx = cx - dx;\n  const ady = ay - dy;\n  const bdy = by - dy;\n  const cdy = cy - dy;\n  const adz = az - dz;\n  const bdz = bz - dz;\n  const cdz = cz - dz;\n  const bdxcdy = bdx * cdy;\n  const cdxbdy = cdx * bdy;\n  const cdxady = cdx * ady;\n  const adxcdy = adx * cdy;\n  const adxbdy = adx * bdy;\n  const bdxady = bdx * ady;\n  const det = adz * (bdxcdy - cdxbdy) + bdz * (cdxady - adxcdy) + cdz * (adxbdy - bdxady);\n  const permanent = (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * Math.abs(adz) + (Math.abs(cdxady) + Math.abs(adxcdy)) * Math.abs(bdz) + (Math.abs(adxbdy) + Math.abs(bdxady)) * Math.abs(cdz);\n  const errbound = o3derrboundA * permanent;\n\n  if (det > errbound || -det > errbound) {\n    return det;\n  }\n\n  return orient3dadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, permanent);\n}\nexport function orient3dfast(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz) {\n  const adx = ax - dx;\n  const bdx = bx - dx;\n  const cdx = cx - dx;\n  const ady = ay - dy;\n  const bdy = by - dy;\n  const cdy = cy - dy;\n  const adz = az - dz;\n  const bdz = bz - dz;\n  const cdz = cz - dz;\n  return adx * (bdy * cdz - bdz * cdy) + bdx * (cdy * adz - cdz * ady) + cdx * (ady * bdz - adz * bdy);\n}","map":{"version":3,"sources":["/Users/davidmunechika/Documents/Code/Research/visual-auditor/node_modules/robust-predicates/esm/orient3d.js"],"names":["epsilon","splitter","resulterrbound","estimate","vec","sum","scale","o3derrboundA","o3derrboundB","o3derrboundC","bc","ca","ab","at_b","at_c","bt_c","bt_a","ct_a","ct_b","bct","cat","abt","u","_8","_8b","_16","_12","fin","fin2","finadd","finlen","alen","a","tmp","tailinit","xtail","ytail","ax","ay","bx","by","b","bvirt","c","ahi","alo","bhi","blo","_i","_j","_k","_0","s1","s0","t1","t0","u3","negate","tailadd","k","z","orient3dadapt","az","bz","cx","cy","cz","dx","dy","dz","permanent","adxtail","bdxtail","cdxtail","adytail","bdytail","cdytail","adztail","bdztail","cdztail","adx","bdx","cdx","ady","bdy","cdy","adz","bdz","cdz","det","errbound","Math","abs","at_len","bt_len","ct_len","bctlen","catlen","abtlen","orient3d","bdxcdy","cdxbdy","cdxady","adxcdy","adxbdy","bdxady","orient3dfast"],"mappings":"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","sourcesContent":["import {epsilon, splitter, resulterrbound, estimate, vec, sum, scale} from './util.js';\n\nconst o3derrboundA = (7 + 56 * epsilon) * epsilon;\nconst o3derrboundB = (3 + 28 * epsilon) * epsilon;\nconst o3derrboundC = (26 + 288 * epsilon) * epsilon * epsilon;\n\nconst bc = vec(4);\nconst ca = vec(4);\nconst ab = vec(4);\nconst at_b = vec(4);\nconst at_c = vec(4);\nconst bt_c = vec(4);\nconst bt_a = vec(4);\nconst ct_a = vec(4);\nconst ct_b = vec(4);\nconst bct = vec(8);\nconst cat = vec(8);\nconst abt = vec(8);\nconst u = vec(4);\n\nconst _8 = vec(8);\nconst _8b = vec(8);\nconst _16 = vec(8);\nconst _12 = vec(12);\n\nlet fin = vec(192);\nlet fin2 = vec(192);\n\nfunction finadd(finlen, alen, a) {\n    finlen = sum(finlen, fin, alen, a, fin2);\n    const tmp = fin; fin = fin2; fin2 = tmp;\n    return finlen;\n}\n\nfunction tailinit(xtail, ytail, ax, ay, bx, by, a, b) {\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, t1, t0, u3, negate;\n    if (xtail === 0) {\n        if (ytail === 0) {\n            a[0] = 0;\n            b[0] = 0;\n            return 1;\n        } else {\n            negate = -ytail;\n            s1 = negate * ax;\n            c = splitter * negate;\n            ahi = c - (c - negate);\n            alo = negate - ahi;\n            c = splitter * ax;\n            bhi = c - (c - ax);\n            blo = ax - bhi;\n            a[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            a[1] = s1;\n            s1 = ytail * bx;\n            c = splitter * ytail;\n            ahi = c - (c - ytail);\n            alo = ytail - ahi;\n            c = splitter * bx;\n            bhi = c - (c - bx);\n            blo = bx - bhi;\n            b[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            b[1] = s1;\n            return 2;\n        }\n    } else {\n        if (ytail === 0) {\n            s1 = xtail * ay;\n            c = splitter * xtail;\n            ahi = c - (c - xtail);\n            alo = xtail - ahi;\n            c = splitter * ay;\n            bhi = c - (c - ay);\n            blo = ay - bhi;\n            a[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            a[1] = s1;\n            negate = -xtail;\n            s1 = negate * by;\n            c = splitter * negate;\n            ahi = c - (c - negate);\n            alo = negate - ahi;\n            c = splitter * by;\n            bhi = c - (c - by);\n            blo = by - bhi;\n            b[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            b[1] = s1;\n            return 2;\n        } else {\n            s1 = xtail * ay;\n            c = splitter * xtail;\n            ahi = c - (c - xtail);\n            alo = xtail - ahi;\n            c = splitter * ay;\n            bhi = c - (c - ay);\n            blo = ay - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = ytail * ax;\n            c = splitter * ytail;\n            ahi = c - (c - ytail);\n            alo = ytail - ahi;\n            c = splitter * ax;\n            bhi = c - (c - ax);\n            blo = ax - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            a[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            a[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            a[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            a[3] = u3;\n            s1 = ytail * bx;\n            c = splitter * ytail;\n            ahi = c - (c - ytail);\n            alo = ytail - ahi;\n            c = splitter * bx;\n            bhi = c - (c - bx);\n            blo = bx - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = xtail * by;\n            c = splitter * xtail;\n            ahi = c - (c - xtail);\n            alo = xtail - ahi;\n            c = splitter * by;\n            bhi = c - (c - by);\n            blo = by - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            b[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            b[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            b[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            b[3] = u3;\n            return 4;\n        }\n    }\n}\n\nfunction tailadd(finlen, a, b, k, z) {\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, u3;\n    s1 = a * b;\n    c = splitter * a;\n    ahi = c - (c - a);\n    alo = a - ahi;\n    c = splitter * b;\n    bhi = c - (c - b);\n    blo = b - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    c = splitter * k;\n    bhi = c - (c - k);\n    blo = k - bhi;\n    _i = s0 * k;\n    c = splitter * s0;\n    ahi = c - (c - s0);\n    alo = s0 - ahi;\n    u[0] = alo * blo - (_i - ahi * bhi - alo * bhi - ahi * blo);\n    _j = s1 * k;\n    c = splitter * s1;\n    ahi = c - (c - s1);\n    alo = s1 - ahi;\n    _0 = alo * blo - (_j - ahi * bhi - alo * bhi - ahi * blo);\n    _k = _i + _0;\n    bvirt = _k - _i;\n    u[1] = _i - (_k - bvirt) + (_0 - bvirt);\n    u3 = _j + _k;\n    u[2] = _k - (u3 - _j);\n    u[3] = u3;\n    finlen = finadd(finlen, 4, u);\n    if (z !== 0) {\n        c = splitter * z;\n        bhi = c - (c - z);\n        blo = z - bhi;\n        _i = s0 * z;\n        c = splitter * s0;\n        ahi = c - (c - s0);\n        alo = s0 - ahi;\n        u[0] = alo * blo - (_i - ahi * bhi - alo * bhi - ahi * blo);\n        _j = s1 * z;\n        c = splitter * s1;\n        ahi = c - (c - s1);\n        alo = s1 - ahi;\n        _0 = alo * blo - (_j - ahi * bhi - alo * bhi - ahi * blo);\n        _k = _i + _0;\n        bvirt = _k - _i;\n        u[1] = _i - (_k - bvirt) + (_0 - bvirt);\n        u3 = _j + _k;\n        u[2] = _k - (u3 - _j);\n        u[3] = u3;\n        finlen = finadd(finlen, 4, u);\n    }\n    return finlen;\n}\n\nfunction orient3dadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, permanent) {\n    let finlen;\n    let adxtail, bdxtail, cdxtail;\n    let adytail, bdytail, cdytail;\n    let adztail, bdztail, cdztail;\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, t1, t0, u3;\n\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n    const adz = az - dz;\n    const bdz = bz - dz;\n    const cdz = cz - dz;\n\n    s1 = bdx * cdy;\n    c = splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    c = splitter * cdy;\n    bhi = c - (c - cdy);\n    blo = cdy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cdx * bdy;\n    c = splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    c = splitter * bdy;\n    bhi = c - (c - bdy);\n    blo = bdy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bc[3] = u3;\n    s1 = cdx * ady;\n    c = splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    c = splitter * ady;\n    bhi = c - (c - ady);\n    blo = ady - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = adx * cdy;\n    c = splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    c = splitter * cdy;\n    bhi = c - (c - cdy);\n    blo = cdy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ca[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ca[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ca[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ca[3] = u3;\n    s1 = adx * bdy;\n    c = splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    c = splitter * bdy;\n    bhi = c - (c - bdy);\n    blo = bdy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bdx * ady;\n    c = splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    c = splitter * ady;\n    bhi = c - (c - ady);\n    blo = ady - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ab[3] = u3;\n\n    finlen = sum(\n        sum(\n            scale(4, bc, adz, _8), _8,\n            scale(4, ca, bdz, _8b), _8b, _16), _16,\n        scale(4, ab, cdz, _8), _8, fin);\n\n    let det = estimate(finlen, fin);\n    let errbound = o3derrboundB * permanent;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - adx;\n    adxtail = ax - (adx + bvirt) + (bvirt - dx);\n    bvirt = bx - bdx;\n    bdxtail = bx - (bdx + bvirt) + (bvirt - dx);\n    bvirt = cx - cdx;\n    cdxtail = cx - (cdx + bvirt) + (bvirt - dx);\n    bvirt = ay - ady;\n    adytail = ay - (ady + bvirt) + (bvirt - dy);\n    bvirt = by - bdy;\n    bdytail = by - (bdy + bvirt) + (bvirt - dy);\n    bvirt = cy - cdy;\n    cdytail = cy - (cdy + bvirt) + (bvirt - dy);\n    bvirt = az - adz;\n    adztail = az - (adz + bvirt) + (bvirt - dz);\n    bvirt = bz - bdz;\n    bdztail = bz - (bdz + bvirt) + (bvirt - dz);\n    bvirt = cz - cdz;\n    cdztail = cz - (cdz + bvirt) + (bvirt - dz);\n\n    if (adxtail === 0 && bdxtail === 0 && cdxtail === 0 &&\n        adytail === 0 && bdytail === 0 && cdytail === 0 &&\n        adztail === 0 && bdztail === 0 && cdztail === 0) {\n        return det;\n    }\n\n    errbound = o3derrboundC * permanent + resulterrbound * Math.abs(det);\n    det +=\n        adz * (bdx * cdytail + cdy * bdxtail - (bdy * cdxtail + cdx * bdytail)) + adztail * (bdx * cdy - bdy * cdx) +\n        bdz * (cdx * adytail + ady * cdxtail - (cdy * adxtail + adx * cdytail)) + bdztail * (cdx * ady - cdy * adx) +\n        cdz * (adx * bdytail + bdy * adxtail - (ady * bdxtail + bdx * adytail)) + cdztail * (adx * bdy - ady * bdx);\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    const at_len = tailinit(adxtail, adytail, bdx, bdy, cdx, cdy, at_b, at_c);\n    const bt_len = tailinit(bdxtail, bdytail, cdx, cdy, adx, ady, bt_c, bt_a);\n    const ct_len = tailinit(cdxtail, cdytail, adx, ady, bdx, bdy, ct_a, ct_b);\n\n    const bctlen = sum(bt_len, bt_c, ct_len, ct_b, bct);\n    finlen = finadd(finlen, scale(bctlen, bct, adz, _16), _16);\n\n    const catlen = sum(ct_len, ct_a, at_len, at_c, cat);\n    finlen = finadd(finlen, scale(catlen, cat, bdz, _16), _16);\n\n    const abtlen = sum(at_len, at_b, bt_len, bt_a, abt);\n    finlen = finadd(finlen, scale(abtlen, abt, cdz, _16), _16);\n\n    if (adztail !== 0) {\n        finlen = finadd(finlen, scale(4, bc, adztail, _12), _12);\n        finlen = finadd(finlen, scale(bctlen, bct, adztail, _16), _16);\n    }\n    if (bdztail !== 0) {\n        finlen = finadd(finlen, scale(4, ca, bdztail, _12), _12);\n        finlen = finadd(finlen, scale(catlen, cat, bdztail, _16), _16);\n    }\n    if (cdztail !== 0) {\n        finlen = finadd(finlen, scale(4, ab, cdztail, _12), _12);\n        finlen = finadd(finlen, scale(abtlen, abt, cdztail, _16), _16);\n    }\n\n    if (adxtail !== 0) {\n        if (bdytail !== 0) {\n            finlen = tailadd(finlen, adxtail, bdytail, cdz, cdztail);\n        }\n        if (cdytail !== 0) {\n            finlen = tailadd(finlen, -adxtail, cdytail, bdz, bdztail);\n        }\n    }\n    if (bdxtail !== 0) {\n        if (cdytail !== 0) {\n            finlen = tailadd(finlen, bdxtail, cdytail, adz, adztail);\n        }\n        if (adytail !== 0) {\n            finlen = tailadd(finlen, -bdxtail, adytail, cdz, cdztail);\n        }\n    }\n    if (cdxtail !== 0) {\n        if (adytail !== 0) {\n            finlen = tailadd(finlen, cdxtail, adytail, bdz, bdztail);\n        }\n        if (bdytail !== 0) {\n            finlen = tailadd(finlen, -cdxtail, bdytail, adz, adztail);\n        }\n    }\n\n    return fin[finlen - 1];\n}\n\nexport function orient3d(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz) {\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n    const adz = az - dz;\n    const bdz = bz - dz;\n    const cdz = cz - dz;\n\n    const bdxcdy = bdx * cdy;\n    const cdxbdy = cdx * bdy;\n\n    const cdxady = cdx * ady;\n    const adxcdy = adx * cdy;\n\n    const adxbdy = adx * bdy;\n    const bdxady = bdx * ady;\n\n    const det =\n        adz * (bdxcdy - cdxbdy) +\n        bdz * (cdxady - adxcdy) +\n        cdz * (adxbdy - bdxady);\n\n    const permanent =\n        (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * Math.abs(adz) +\n        (Math.abs(cdxady) + Math.abs(adxcdy)) * Math.abs(bdz) +\n        (Math.abs(adxbdy) + Math.abs(bdxady)) * Math.abs(cdz);\n\n    const errbound = o3derrboundA * permanent;\n    if (det > errbound || -det > errbound) {\n        return det;\n    }\n\n    return orient3dadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, permanent);\n}\n\nexport function orient3dfast(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz) {\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n    const adz = az - dz;\n    const bdz = bz - dz;\n    const cdz = cz - dz;\n\n    return adx * (bdy * cdz - bdz * cdy) +\n        bdx * (cdy * adz - cdz * ady) +\n        cdx * (ady * bdz - adz * bdy);\n}\n"]},"metadata":{},"sourceType":"module"}