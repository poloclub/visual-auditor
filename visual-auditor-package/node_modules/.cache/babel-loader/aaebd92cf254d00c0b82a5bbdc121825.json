{"ast":null,"code":"var _jsxFileName = \"/Users/davidmunechika/Documents/Code/visual-auditor/src/components/Main/Main.js\";\nimport React from 'react';\nimport SliceBarChart from './SliceBarChart';\nimport './Main.css';\nimport logloss from '../../data/logloss.json';\nimport accuracy from '../../data/accuracy.json';\nimport precision from '../../data/precision.json';\nimport ForceLayout from './ForceLayout';\nimport StickyForceLayout from './StickyForceLayout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = ({\n  numFeatures,\n  sampleSize,\n  metric,\n  view,\n  sortBy\n}) => {\n  let data;\n  let modelMetric;\n\n  switch (metric) {\n    case 'Log Loss':\n      data = Object.values(logloss['data']).map(obj => Object.values(obj)[0]);\n      modelMetric = logloss['model'];\n      break;\n\n    case 'Accuracy':\n      data = Object.values(accuracy['data']).map(obj => Object.values(obj)[0]);\n      modelMetric = accuracy['model'];\n      break;\n\n    case 'Precision':\n      data = Object.values(precision['data']).map(obj => Object.values(obj)[0]);\n      modelMetric = precision['model'];\n      break;\n\n    default:\n      data = Object.values(logloss['data']).map(obj => Object.values(obj)[0]);\n      modelMetric = logloss['model'];\n  }\n\n  const metricArray = data.map(obj => obj.metric);\n  const sizeArray = data.map(obj => obj.size);\n  const max = Math.max(...metricArray);\n  const sizeMax = Math.max(...sizeArray);\n  let filteredData = data.filter(obj => obj.size >= sampleSize).filter(obj => obj.degree <= numFeatures).sort(function (a, b) {\n    if (sortBy === 'size') return b.size - a.size;\n    return b.metric - a.metric;\n  });\n\n  if (view === 'bar') {\n    filteredData = filteredData.slice(0, 10);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    style: {\n      display: 'block'\n    },\n    children: view === 'bar' ? /*#__PURE__*/_jsxDEV(SliceBarChart, {\n      data: filteredData,\n      model: modelMetric,\n      max: max,\n      view: view\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this) : view === 'force' ? /*#__PURE__*/_jsxDEV(ForceLayout, {\n      data: filteredData,\n      sizeMax: sizeMax,\n      degree: numFeatures,\n      view: view,\n      metric: metric\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(StickyForceLayout, {\n      data: filteredData,\n      sizeMax: sizeMax,\n      degree: numFeatures,\n      view: view,\n      metric: metric\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/davidmunechika/Documents/Code/visual-auditor/src/components/Main/Main.js"],"names":["React","SliceBarChart","logloss","accuracy","precision","ForceLayout","StickyForceLayout","Main","numFeatures","sampleSize","metric","view","sortBy","data","modelMetric","Object","values","map","obj","metricArray","sizeArray","size","max","Math","sizeMax","filteredData","filter","degree","sort","a","b","slice","display"],"mappings":"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","sourcesContent":["import React from 'react';\nimport SliceBarChart from './SliceBarChart';\nimport './Main.css';\nimport logloss from '../../data/logloss.json';\nimport accuracy from '../../data/accuracy.json';\nimport precision from '../../data/precision.json';\nimport ForceLayout from './ForceLayout';\nimport StickyForceLayout from './StickyForceLayout';\n\nconst Main = ({ numFeatures, sampleSize, metric, view, sortBy }) => {\n  let data;\n  let modelMetric;\n  switch (metric) {\n    case 'Log Loss':\n      data = Object.values(logloss['data']).map((obj) => Object.values(obj)[0]);\n      modelMetric = logloss['model'];\n      break;\n    case 'Accuracy':\n      data = Object.values(accuracy['data']).map(\n        (obj) => Object.values(obj)[0]\n      );\n      modelMetric = accuracy['model'];\n      break;\n    case 'Precision':\n      data = Object.values(precision['data']).map(\n        (obj) => Object.values(obj)[0]\n      );\n      modelMetric = precision['model'];\n      break;\n    default:\n      data = Object.values(logloss['data']).map((obj) => Object.values(obj)[0]);\n      modelMetric = logloss['model'];\n  }\n  const metricArray = data.map((obj) => obj.metric);\n  const sizeArray = data.map((obj) => obj.size);\n  const max = Math.max(...metricArray);\n  const sizeMax = Math.max(...sizeArray);\n  let filteredData = data\n    .filter((obj) => obj.size >= sampleSize)\n    .filter((obj) => obj.degree <= numFeatures)\n    .sort(function (a, b) {\n      if (sortBy === 'size') return b.size - a.size;\n      return b.metric - a.metric;\n    });\n  if (view === 'bar') {\n    filteredData = filteredData.slice(0, 10);\n  }\n  return (\n    <div className='main-container' style={{ display: 'block' }}>\n      {view === 'bar' ? (\n        <SliceBarChart\n          data={filteredData}\n          model={modelMetric}\n          max={max}\n          view={view}\n        />\n      ) : view === 'force' ? (\n        <ForceLayout\n          data={filteredData}\n          sizeMax={sizeMax}\n          degree={numFeatures}\n          view={view}\n          metric={metric}\n        />\n      ) : (\n        <StickyForceLayout\n          data={filteredData}\n          sizeMax={sizeMax}\n          degree={numFeatures}\n          view={view}\n          metric={metric}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}