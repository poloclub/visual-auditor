{"ast":null,"code":"var _jsxFileName = \"/Users/davidmunechika/Documents/Code/visual-auditor/src/components/Main/GraphLayout.js\",\n    _s = $RefreshSig$();\n\nimport { useD3 } from '../../hooks/useD3';\nimport React, { memo } from 'react';\nimport * as d3 from 'd3';\nimport Switch from '@mui/material/Switch';\nimport './GraphLayout.css';\nimport Button from '@mui/material/Button';\nimport logLossSamples from '../../data/loglosssamples.json';\nimport reverseLogLossSamples from '../../data/reverseloglosssamples.json';\nimport accuracySamples from '../../data/accuracysamples.json';\nimport precisionSamples from '../../data/precisionsamples.json';\nimport commonSamples from '../../data/commonSamples.json';\nimport commonSamplesSliceline from '../../data/commonSamplesSliceline.json';\nimport reverseCommonSamples from '../../data/reverseCommonSamples.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst convexHull = (g, opacity) => {\n  const colors = ['gray', 'green', 'yellow', 'black', 'purple', 'pink', 'red', 'orange', 'brown', 'blue', 'cyan', 'magenta', 'lime', 'navy', 'olive', 'teal', 'violet', 'wheat'];\n  let vertices = [];\n\n  for (let i = 0; i < topGroupings.length; i++) {\n    vertices = [];\n\n    for (let j = 0; j < nodes.length; j++) {\n      if (nodes[j].xFeature === topGroupings[i][0].split(', ')[0] && (degree < 2 || nodes[j].yFeature === topGroupings[i][0].split(', ')[1])) {\n        if (degree < 2) {\n          vertices.push([nodes[j].x, height / 2]);\n        } else {\n          vertices.push([nodes[j].x, nodes[j].y]);\n        }\n      }\n    }\n\n    const hull = d3.polygonHull(vertices);\n    const line = d3.line().curve(d3.curveLinearClosed);\n    if (!hull || !showConvexHull) return;\n    g.append('path').attr('class', `path${degree}`).attr('d', line(hull)).attr('fill', colors[0]).attr('stroke', colors[0]).attr('opacity', opacity);\n  }\n};\n\nfunction GraphLayout({\n  data,\n  degree,\n  metric,\n  model,\n  overperforming,\n  radiusType,\n  edgeFiltering,\n  edgeForce,\n  setDetails,\n  cursorMode,\n  algorithm\n}) {\n  _s();\n\n  const margin = {\n    top: 30,\n    right: 30,\n    bottom: 60,\n    left: 85\n  };\n  const [value, setValue] = React.useState(0);\n  const [showConvexHull, setShowConvexHull] = React.useState(false);\n  const hulls = Array.from(Array(100).keys());\n\n  function useForceUpdate() {\n    return () => setValue(value => value + 1); // update the state to force render\n  }\n\n  const forceUpdate = useForceUpdate();\n  const width = 800;\n  const height = 800;\n  const features = [];\n  const groupings = {};\n  let samples;\n  let matches = {};\n\n  switch (metric) {\n    case 'Log Loss':\n      if (overperforming) {\n        samples = reverseLogLossSamples;\n        matches = reverseCommonSamples;\n      } else {\n        if (algorithm === 'sliceline') {\n          matches = commonSamplesSliceline;\n        } else {\n          matches = commonSamples;\n        }\n\n        samples = logLossSamples;\n      }\n\n      break;\n\n    case 'Accuracy':\n      if (overperforming) samples = accuracySamples;else samples = accuracySamples;\n      break;\n\n    case 'Precision':\n      if (overperforming) samples = precisionSamples;else samples = precisionSamples;\n      break;\n\n    default:\n      if (overperforming) samples = reverseLogLossSamples;else samples = logLossSamples;\n      break;\n  }\n\n  data.forEach(obj => {\n    obj.classifiers = [];\n    let str = obj.slice;\n\n    while (str.indexOf(':') !== -1) {\n      let temp = str.substring(0, str.indexOf(':'));\n      obj.classifiers.push(temp);\n      if (!features.includes(temp)) features.push(temp);\n\n      if (degree === obj.classifiers.length) {\n        if (groupings[obj.classifiers.join(', ')]) groupings[obj.classifiers.join(', ')]++;else groupings[obj.classifiers.join(', ')] = 1;\n      }\n\n      if (str.indexOf(',') !== -1) {\n        str = str.substring(str.indexOf(',') + 2);\n      } else {\n        str = '';\n      }\n    }\n  });\n  const groupingsArray = Object.keys(groupings).map(key => [key, groupings[key]]).sort((a, b) => b[1] - a[1]);\n  const topGroupings = groupingsArray.slice(0, 15);\n  const xCenter = [];\n  const yCenter = [];\n  const xTickDistance = (width - margin.left - margin.right) / (features.length + 1);\n  const yTickDistance = (height - margin.top - margin.bottom) / (features.length + 2);\n\n  for (let i = 0; i < features.length; i++) {\n    xCenter.push(margin.left + (i + 1) * xTickDistance);\n    yCenter.push(2 * margin.top + (i + 1) * yTickDistance);\n  }\n\n  const x = d3.scaleBand().domain(features).rangeRound([margin.left, width - margin.right]).padding(0.1);\n\n  const xAxis = g => g.attr('transform', `translate(0,${height - margin.bottom})`).call(d3.axisBottom(x).tickSizeOuter(0)).selectAll('text').attr('transform', 'translate(-10,0)rotate(-45)').style('text-anchor', 'end');\n\n  const yAxis = g => g.attr('transform', `translate(${margin.left},${30 - margin.bottom})`).call(d3.axisLeft(x).tickSizeOuter(0)).selectAll('text').style('text-anchor', 'end');\n\n  const xAxisGrid = g => g.attr('transform', `translate(0,${height - margin.bottom})`).call(d3.axisBottom(x).tickSizeOuter(0).tickSizeInner(-height - margin.top + 2 * margin.bottom)).style('opacity', 0.1).selectAll('text').style('display', 'none');\n\n  const yAxisGrid = g => g.attr('transform', `translate(${margin.left},${30 - margin.bottom})`).call(d3.axisLeft(x).tickSizeOuter(0).tickSizeInner(-width - margin.right + 2 * margin.left)).style('opacity', 0.1).selectAll('text').style('display', 'none');\n\n  const nodes = data.map(obj => {\n    var _obj$classifiers$;\n\n    return {\n      radius: radiusType === 'log' ? Math.log(obj.size) : Math.sqrt(obj.size),\n      category: obj.degree,\n      xFeature: obj.classifiers[0],\n      yFeature: (_obj$classifiers$ = obj.classifiers[1]) !== null && _obj$classifiers$ !== void 0 ? _obj$classifiers$ : obj.classifiers[0],\n      slice: obj.slice,\n      size: obj.size,\n      metric: obj.metric,\n      classifiers: obj.classifiers\n    };\n  });\n\n  function countCommonSamples(slice1, slice2) {\n    let arr1 = samples[slice1];\n    let arr2 = samples[slice2];\n    if (!arr1 || !arr2) return 0;\n    arr1 = arr1.sort((a, b) => 0.5 - Math.random()).slice(0, 2000);\n    return arr1.filter(sample => arr2.includes(sample)).length;\n  }\n\n  let links = [];\n  let common = {};\n\n  for (let i = 0; i < nodes.length; i++) {\n    for (let j = i + 1; j < nodes.length; j++) {\n      const count = matches[nodes[i].slice + '-' + nodes[j].slice]; // const count = countCommonSamples(nodes[i].slice, nodes[j].slice);\n      // common[nodes[i].slice + '-' + nodes[j].slice] = count;\n      // common[nodes[j].slice + '-' + nodes[i].slice] = count;\n\n      if (count > edgeFiltering) {\n        links.push({\n          source: i,\n          target: j,\n          sliceSource: nodes[i].slice,\n          sliceTarget: nodes[j].slice,\n          count: count\n        });\n      }\n    }\n  } // console.log(JSON.stringify(common));\n  // const links = [];\n  // console.log(JSON.stringify(links));\n\n\n  const graph = {\n    nodes: nodes,\n    links: links\n  };\n\n  function clamp(x, lo, hi) {\n    return x < lo ? lo : x > hi ? hi : x;\n  }\n\n  const ref = useD3(svg => {\n    svg = d3.select('.svg').style('width', '60%').style('height', '60%');\n    let link = svg.selectAll('.link').attr('class', 'link').data(graph.links).join('line').classed('link', true);\n    const node = svg.selectAll('.node').data(graph.nodes).join('circle').attr('r', function (d) {\n      return d.radius;\n    }).style('fill', function (d) {\n      if (overperforming) return d3.interpolateBlues(Math.abs((d.metric - model) / model));\n      return d3.interpolateReds(Math.abs((d.metric - model) / model));\n    }).classed('node', true).classed('fixed', d => d.fx !== undefined).on('mouseover', function (event, d) {\n      cursorMode === 'select' ? d3.select(this).attr('r', d.radius).style('opacity', '0.7').style('cursor', 'pointer') : d3.select(this).attr('r', d.radius).style('opacity', '0.7').style('cursor', 'grab');\n      d3.select('.tooltip').transition().duration(200).style('opacity', 0.9).style('left', Math.min(Math.max(200, d.x), width - 200) + 100 + 'px').style('top', Math.min(height - 200, Math.max(0, d.y)) + 'px');\n      d3.select('.tooltip').html('<strong>Slice Description: </strong>' + '<br><div style={{margin: \"1rem\"}}> </div>' + d.slice + '<br>' + '<strong>Size: </strong>' + '<br>' + d.size + ' samples' + '<br>' + '<strong>' + metric + ': ' + '</strong>' + '<br>' + d.metric.toFixed(2) + '<br>' + `(${Math.round((d.metric - model) / model * 100)}% difference)`);\n    }).on('mouseout', function (d, i) {\n      d3.select(this).attr('r', i.radius).style('opacity', '1');\n      d3.select('.tooltip').transition().style('opacity', 0).style('left', width + 'px').style('top', 0 + 'px');\n    }).on('click', click);\n    const simulation = d3.forceSimulation().nodes(graph.nodes).force('charge', d3.forceManyBody().strength(-5)) // .force('center', d3.forceCenter(width / 2, height / 2).strength(0.1))\n    .force('x', d3.forceX().x(function (d) {\n      console.log(features);\n      console.log(xCenter);\n      return xCenter[features.indexOf(d.xFeature)];\n    })).force('y', d3.forceY().y(function (d) {\n      if (degree > 1) {\n        return yCenter[features.indexOf(d.yFeature)];\n      } else {\n        return height / 2;\n      }\n    })).force('link', d3.forceLink(graph.links).strength(d => {\n      return d.count / 10000 * edgeForce;\n    })).force('collision', d3.forceCollide().radius(function (d) {\n      return d.radius;\n    })).on('tick', tick);\n\n    if (cursorMode === 'drag') {\n      const drag = d3.drag().on('start', dragstart).on('drag', dragged);\n      node.call(drag).on('click', click);\n    }\n\n    function tick() {\n      link.attr('x1', d => Math.max(Math.min(d.source.x, width), d.source.radius + 100)).attr('y1', d => Math.max(Math.min(d.source.y, height - 75), d.source.radius)).attr('x2', d => Math.max(Math.min(d.target.x, width), d.target.radius + 100)).attr('y2', d => Math.max(Math.min(d.target.y, height - 75), d.target.radius)).style('stroke-width', d => Math.min(Math.pow(d.count / 2000, 2) * edgeForce, Math.pow(d.count / 2000, 2) * 3));\n      node.attr('cx', d => Math.max(Math.min(d.x, width), d.radius + 100)).attr('cy', d => Math.max(Math.min(d.y, height - 75), d.radius));\n    }\n\n    function click(event, d) {\n      if (cursorMode === 'select') {\n        node.style('fill', function (d) {\n          if (event.target.__data__ === d) {\n            return d3.interpolateGreys(0.5);\n          }\n\n          if (overperforming) return d3.interpolateBlues(Math.abs((d.metric - model) / model));\n          return d3.interpolateReds(Math.abs((d.metric - model) / model));\n        });\n        setDetails({\n          slice: d.slice,\n          size: d.size,\n          metric: d.metric,\n          similarSlices: links.sort((a, b) => b.count - a.count).map(link => {\n            if (link.count > edgeFiltering && link.sliceSource === d.slice) {\n              return link.sliceTarget;\n            } else if (link.count > edgeFiltering && link.sliceTarget === d.slice) {\n              return link.sliceSource;\n            }\n\n            return undefined;\n          }).filter(link => link !== undefined).slice(0, 10)\n        });\n      } else {\n        delete d.fx;\n        delete d.fy;\n        d3.select(this).classed('fixed', false);\n        d3.select(this).style('fill', () => {\n          if (overperforming) return d3.interpolateBlues(Math.abs((d.metric - model) / model));\n          return d3.interpolateReds(Math.abs((d.metric - model) / model));\n        });\n        simulation.alpha(1).restart();\n      }\n    }\n\n    function dragstart(event, d) {\n      d3.select(this).classed('fixed', true);\n      d3.select(this).style('fill', 'lightgray');\n      setDetails({\n        slice: d.slice,\n        size: d.size,\n        metric: d.metric,\n        similarSlices: links.sort((a, b) => b.count - a.count).map(link => {\n          if (link.count > edgeFiltering && link.sliceSource === d.slice) {\n            return link.sliceTarget;\n          } else if (link.count > edgeFiltering && link.sliceTarget === d.slice) {\n            return link.sliceSource;\n          }\n\n          return undefined;\n        }).filter(link => link !== undefined).slice(0, 10)\n      });\n    }\n\n    function dragged(event, d) {\n      d.fx = clamp(event.x, 0, width);\n      d.fy = clamp(event.y, 0, height);\n      simulation.alpha(1).restart();\n    }\n\n    const convexHull = (g, opacity) => {\n      const colors = ['gray', 'green', 'yellow', 'black', 'purple', 'pink', 'red', 'orange', 'brown', 'blue', 'cyan', 'magenta', 'lime', 'navy', 'olive', 'teal', 'violet', 'wheat'];\n      let vertices = [];\n\n      for (let i = 0; i < topGroupings.length; i++) {\n        vertices = [];\n\n        for (let j = 0; j < nodes.length; j++) {\n          if (nodes[j].xFeature === topGroupings[i][0].split(', ')[0] && (degree < 2 || nodes[j].yFeature === topGroupings[i][0].split(', ')[1])) {\n            if (degree < 2) {\n              vertices.push([nodes[j].x, height / 2]);\n            } else {\n              vertices.push([nodes[j].x, nodes[j].y]);\n            }\n          }\n        }\n\n        const hull = d3.polygonHull(vertices);\n        const line = d3.line().curve(d3.curveLinearClosed);\n        if (!hull || !showConvexHull) return;\n        g.append('path').attr('class', `path${degree}`).attr('d', line(hull)).attr('fill', colors[0]).attr('stroke', colors[0]).attr('opacity', opacity);\n      }\n    };\n\n    svg.select('.x-axis-grid').call(xAxisGrid);\n    svg.select('.y-axis-grid').call(yAxisGrid);\n    svg.select('.x-axis').call(xAxis);\n\n    if (degree >= 2) {\n      svg.select('.y-axis').call(yAxis).style('opacity', '1');\n    } else {\n      svg.select('.y-axis').style('opacity', '0');\n    }\n\n    const convexHullSwitch = d3.select('.switch');\n    convexHullSwitch.on('change', () => {\n      d3.select(`.hull`).style('opacity', '0').call(convexHull, 0.25).transition().duration(500).style('opacity', '1');\n    }); // if (showConvexHull) {\n    //   setTimeout(() => {\n    //     d3.select(`.hull`)\n    //       .style('opacity', '0')\n    //       .call(convexHull, 0.25)\n    //       .transition()\n    //       .duration(500)\n    //       .style('opacity', '1');\n    //   }, 4000);\n    // } else {\n    //   d3.select(`.hull`).remove();\n    //   d3.selectAll(`.hull`).transition().duration(0).style('opacity', '0');\n    // }\n  }, [data, value]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    style: {\n      overflow: 'scroll'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Show Convex Hull:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      checked: showConvexHull,\n      onChange: () => {\n        setShowConvexHull(!showConvexHull);\n        d3.select(`.hull`).style('opacity', '0').call(convexHull, 0.25).transition().duration(500).style('opacity', '1');\n      },\n      label: \"Show Convex Hull\",\n      className: \"switch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tooltip\",\n      style: {\n        position: 'absolute',\n        background: '#e6e6e6',\n        borderRadius: '0.5rem',\n        padding: '0.5rem'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \"svg\",\n      width: width,\n      height: height,\n      children: [/*#__PURE__*/_jsxDEV(\"g\", {\n        transform: \"translate(50, 200)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"x-axis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"y-axis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"x-axis-grid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"y-axis-grid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 9\n      }, this), hulls.map(hull => /*#__PURE__*/_jsxDEV(\"g\", {\n        className: 'hull'\n      }, hull, false, {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 602,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: forceUpdate,\n      style: {\n        margin: '1rem'\n      },\n      children: \"Recenter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 567,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GraphLayout, \"iLf7kQLI2NABaxsvhBNeQHn5zeA=\", false, function () {\n  return [useForceUpdate, useD3];\n});\n\n_c = GraphLayout;\nexport default _c2 = /*#__PURE__*/memo(GraphLayout);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GraphLayout\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/davidmunechika/Documents/Code/visual-auditor/src/components/Main/GraphLayout.js"],"names":["useD3","React","memo","d3","Switch","Button","logLossSamples","reverseLogLossSamples","accuracySamples","precisionSamples","commonSamples","commonSamplesSliceline","reverseCommonSamples","convexHull","g","opacity","colors","vertices","i","topGroupings","length","j","nodes","xFeature","split","degree","yFeature","push","x","height","y","hull","polygonHull","line","curve","curveLinearClosed","showConvexHull","append","attr","GraphLayout","data","metric","model","overperforming","radiusType","edgeFiltering","edgeForce","setDetails","cursorMode","algorithm","margin","top","right","bottom","left","value","setValue","useState","setShowConvexHull","hulls","Array","from","keys","useForceUpdate","forceUpdate","width","features","groupings","samples","matches","forEach","obj","classifiers","str","slice","indexOf","temp","substring","includes","join","groupingsArray","Object","map","key","sort","a","b","xCenter","yCenter","xTickDistance","yTickDistance","scaleBand","domain","rangeRound","padding","xAxis","call","axisBottom","tickSizeOuter","selectAll","style","yAxis","axisLeft","xAxisGrid","tickSizeInner","yAxisGrid","radius","Math","log","size","sqrt","category","countCommonSamples","slice1","slice2","arr1","arr2","random","filter","sample","links","common","count","source","target","sliceSource","sliceTarget","graph","clamp","lo","hi","ref","svg","select","link","classed","node","d","interpolateBlues","abs","interpolateReds","fx","undefined","on","event","transition","duration","min","max","html","toFixed","round","click","simulation","forceSimulation","force","forceManyBody","strength","forceX","console","forceY","forceLink","forceCollide","tick","drag","dragstart","dragged","pow","__data__","interpolateGreys","similarSlices","fy","alpha","restart","convexHullSwitch","overflow","position","background","borderRadius"],"mappings":"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","sourcesContent":["import { useD3 } from '../../hooks/useD3';\nimport React, { memo } from 'react';\nimport * as d3 from 'd3';\nimport Switch from '@mui/material/Switch';\nimport './GraphLayout.css';\nimport Button from '@mui/material/Button';\nimport logLossSamples from '../../data/loglosssamples.json';\nimport reverseLogLossSamples from '../../data/reverseloglosssamples.json';\nimport accuracySamples from '../../data/accuracysamples.json';\nimport precisionSamples from '../../data/precisionsamples.json';\nimport commonSamples from '../../data/commonSamples.json';\nimport commonSamplesSliceline from '../../data/commonSamplesSliceline.json';\nimport reverseCommonSamples from '../../data/reverseCommonSamples.json';\n\nconst convexHull = (g, opacity) => {\n  const colors = [\n    'gray',\n    'green',\n    'yellow',\n    'black',\n    'purple',\n    'pink',\n    'red',\n    'orange',\n    'brown',\n    'blue',\n    'cyan',\n    'magenta',\n    'lime',\n    'navy',\n    'olive',\n    'teal',\n    'violet',\n    'wheat',\n  ];\n  let vertices = [];\n\n  for (let i = 0; i < topGroupings.length; i++) {\n    vertices = [];\n    for (let j = 0; j < nodes.length; j++) {\n      if (\n        nodes[j].xFeature === topGroupings[i][0].split(', ')[0] &&\n        (degree < 2 || nodes[j].yFeature === topGroupings[i][0].split(', ')[1])\n      ) {\n        if (degree < 2) {\n          vertices.push([nodes[j].x, height / 2]);\n        } else {\n          vertices.push([nodes[j].x, nodes[j].y]);\n        }\n      }\n    }\n    const hull = d3.polygonHull(vertices);\n    const line = d3.line().curve(d3.curveLinearClosed);\n    if (!hull || !showConvexHull) return;\n    g.append('path')\n      .attr('class', `path${degree}`)\n      .attr('d', line(hull))\n      .attr('fill', colors[0])\n      .attr('stroke', colors[0])\n      .attr('opacity', opacity);\n  }\n};\n\nfunction GraphLayout({\n  data,\n  degree,\n  metric,\n  model,\n  overperforming,\n  radiusType,\n  edgeFiltering,\n  edgeForce,\n  setDetails,\n  cursorMode,\n  algorithm,\n}) {\n  const margin = { top: 30, right: 30, bottom: 60, left: 85 };\n  const [value, setValue] = React.useState(0);\n  const [showConvexHull, setShowConvexHull] = React.useState(false);\n  const hulls = Array.from(Array(100).keys());\n  function useForceUpdate() {\n    return () => setValue((value) => value + 1); // update the state to force render\n  }\n  const forceUpdate = useForceUpdate();\n\n  const width = 800;\n  const height = 800;\n\n  const features = [];\n  const groupings = {};\n\n  let samples;\n  let matches = {};\n\n  switch (metric) {\n    case 'Log Loss':\n      if (overperforming) {\n        samples = reverseLogLossSamples;\n        matches = reverseCommonSamples;\n      } else {\n        if (algorithm === 'sliceline') {\n          matches = commonSamplesSliceline;\n        } else {\n          matches = commonSamples;\n        }\n        samples = logLossSamples;\n      }\n      break;\n    case 'Accuracy':\n      if (overperforming) samples = accuracySamples;\n      else samples = accuracySamples;\n      break;\n    case 'Precision':\n      if (overperforming) samples = precisionSamples;\n      else samples = precisionSamples;\n      break;\n    default:\n      if (overperforming) samples = reverseLogLossSamples;\n      else samples = logLossSamples;\n      break;\n  }\n\n  data.forEach((obj) => {\n    obj.classifiers = [];\n    let str = obj.slice;\n    while (str.indexOf(':') !== -1) {\n      let temp = str.substring(0, str.indexOf(':'));\n      obj.classifiers.push(temp);\n      if (!features.includes(temp)) features.push(temp);\n      if (degree === obj.classifiers.length) {\n        if (groupings[obj.classifiers.join(', ')])\n          groupings[obj.classifiers.join(', ')]++;\n        else groupings[obj.classifiers.join(', ')] = 1;\n      }\n      if (str.indexOf(',') !== -1) {\n        str = str.substring(str.indexOf(',') + 2);\n      } else {\n        str = '';\n      }\n    }\n  });\n\n  const groupingsArray = Object.keys(groupings)\n    .map((key) => [key, groupings[key]])\n    .sort((a, b) => b[1] - a[1]);\n\n  const topGroupings = groupingsArray.slice(0, 15);\n\n  const xCenter = [];\n  const yCenter = [];\n\n  const xTickDistance =\n    (width - margin.left - margin.right) / (features.length + 1);\n  const yTickDistance =\n    (height - margin.top - margin.bottom) / (features.length + 2);\n\n  for (let i = 0; i < features.length; i++) {\n    xCenter.push(margin.left + (i + 1) * xTickDistance);\n    yCenter.push(2 * margin.top + (i + 1) * yTickDistance);\n  }\n\n  const x = d3\n    .scaleBand()\n    .domain(features)\n    .rangeRound([margin.left, width - margin.right])\n    .padding(0.1);\n\n  const xAxis = (g) =>\n    g\n      .attr('transform', `translate(0,${height - margin.bottom})`)\n      .call(d3.axisBottom(x).tickSizeOuter(0))\n      .selectAll('text')\n      .attr('transform', 'translate(-10,0)rotate(-45)')\n      .style('text-anchor', 'end');\n\n  const yAxis = (g) =>\n    g\n      .attr('transform', `translate(${margin.left},${30 - margin.bottom})`)\n      .call(d3.axisLeft(x).tickSizeOuter(0))\n      .selectAll('text')\n      .style('text-anchor', 'end');\n\n  const xAxisGrid = (g) =>\n    g\n      .attr('transform', `translate(0,${height - margin.bottom})`)\n      .call(\n        d3\n          .axisBottom(x)\n          .tickSizeOuter(0)\n          .tickSizeInner(-height - margin.top + 2 * margin.bottom)\n      )\n      .style('opacity', 0.1)\n      .selectAll('text')\n      .style('display', 'none');\n  const yAxisGrid = (g) =>\n    g\n      .attr('transform', `translate(${margin.left},${30 - margin.bottom})`)\n      .call(\n        d3\n          .axisLeft(x)\n          .tickSizeOuter(0)\n          .tickSizeInner(-width - margin.right + 2 * margin.left)\n      )\n      .style('opacity', 0.1)\n      .selectAll('text')\n      .style('display', 'none');\n\n  const nodes = data.map((obj) => {\n    return {\n      radius: radiusType === 'log' ? Math.log(obj.size) : Math.sqrt(obj.size),\n      category: obj.degree,\n      xFeature: obj.classifiers[0],\n      yFeature: obj.classifiers[1] ?? obj.classifiers[0],\n      slice: obj.slice,\n      size: obj.size,\n      metric: obj.metric,\n      classifiers: obj.classifiers,\n    };\n  });\n\n  function countCommonSamples(slice1, slice2) {\n    let arr1 = samples[slice1];\n    let arr2 = samples[slice2];\n    if (!arr1 || !arr2) return 0;\n    arr1 = arr1.sort((a, b) => 0.5 - Math.random()).slice(0, 2000);\n    return arr1.filter((sample) => arr2.includes(sample)).length;\n  }\n\n  let links = [];\n  let common = {};\n\n  for (let i = 0; i < nodes.length; i++) {\n    for (let j = i + 1; j < nodes.length; j++) {\n      const count = matches[nodes[i].slice + '-' + nodes[j].slice];\n      // const count = countCommonSamples(nodes[i].slice, nodes[j].slice);\n      // common[nodes[i].slice + '-' + nodes[j].slice] = count;\n      // common[nodes[j].slice + '-' + nodes[i].slice] = count;\n      if (count > edgeFiltering) {\n        links.push({\n          source: i,\n          target: j,\n          sliceSource: nodes[i].slice,\n          sliceTarget: nodes[j].slice,\n          count: count,\n        });\n      }\n    }\n  }\n\n  // console.log(JSON.stringify(common));\n\n  // const links = [];\n  // console.log(JSON.stringify(links));\n\n  const graph = {\n    nodes: nodes,\n    links: links,\n  };\n\n  function clamp(x, lo, hi) {\n    return x < lo ? lo : x > hi ? hi : x;\n  }\n\n  const ref = useD3(\n    (svg) => {\n      svg = d3.select('.svg').style('width', '60%').style('height', '60%');\n      let link = svg\n        .selectAll('.link')\n        .attr('class', 'link')\n        .data(graph.links)\n        .join('line')\n        .classed('link', true);\n      const node = svg\n        .selectAll('.node')\n        .data(graph.nodes)\n        .join('circle')\n        .attr('r', function (d) {\n          return d.radius;\n        })\n        .style('fill', function (d) {\n          if (overperforming)\n            return d3.interpolateBlues(Math.abs((d.metric - model) / model));\n          return d3.interpolateReds(Math.abs((d.metric - model) / model));\n        })\n        .classed('node', true)\n        .classed('fixed', (d) => d.fx !== undefined)\n        .on('mouseover', function (event, d) {\n          cursorMode === 'select'\n            ? d3\n                .select(this)\n                .attr('r', d.radius)\n                .style('opacity', '0.7')\n                .style('cursor', 'pointer')\n            : d3\n                .select(this)\n                .attr('r', d.radius)\n                .style('opacity', '0.7')\n                .style('cursor', 'grab');\n          d3.select('.tooltip')\n            .transition()\n            .duration(200)\n            .style('opacity', 0.9)\n            .style(\n              'left',\n              Math.min(Math.max(200, d.x), width - 200) + 100 + 'px'\n            )\n            .style('top', Math.min(height - 200, Math.max(0, d.y)) + 'px');\n          d3.select('.tooltip').html(\n            '<strong>Slice Description: </strong>' +\n              '<br><div style={{margin: \"1rem\"}}> </div>' +\n              d.slice +\n              '<br>' +\n              '<strong>Size: </strong>' +\n              '<br>' +\n              d.size +\n              ' samples' +\n              '<br>' +\n              '<strong>' +\n              metric +\n              ': ' +\n              '</strong>' +\n              '<br>' +\n              d.metric.toFixed(2) +\n              '<br>' +\n              `(${Math.round(((d.metric - model) / model) * 100)}% difference)`\n          );\n        })\n        .on('mouseout', function (d, i) {\n          d3.select(this).attr('r', i.radius).style('opacity', '1');\n          d3.select('.tooltip')\n            .transition()\n            .style('opacity', 0)\n            .style('left', width + 'px')\n            .style('top', 0 + 'px');\n        })\n        .on('click', click);\n\n      const simulation = d3\n        .forceSimulation()\n        .nodes(graph.nodes)\n        .force('charge', d3.forceManyBody().strength(-5))\n        // .force('center', d3.forceCenter(width / 2, height / 2).strength(0.1))\n        .force(\n          'x',\n          d3.forceX().x(function (d) {\n            console.log(features);\n            console.log(xCenter);\n            return xCenter[features.indexOf(d.xFeature)];\n          })\n        )\n        .force(\n          'y',\n          d3.forceY().y(function (d) {\n            if (degree > 1) {\n              return yCenter[features.indexOf(d.yFeature)];\n            } else {\n              return height / 2;\n            }\n          })\n        )\n        .force(\n          'link',\n          d3.forceLink(graph.links).strength((d) => {\n            return (d.count / 10000) * edgeForce;\n          })\n        )\n        .force(\n          'collision',\n          d3.forceCollide().radius(function (d) {\n            return d.radius;\n          })\n        )\n        .on('tick', tick);\n      if (cursorMode === 'drag') {\n        const drag = d3.drag().on('start', dragstart).on('drag', dragged);\n\n        node.call(drag).on('click', click);\n      }\n\n      function tick() {\n        link\n          .attr('x1', (d) =>\n            Math.max(Math.min(d.source.x, width), d.source.radius + 100)\n          )\n          .attr('y1', (d) =>\n            Math.max(Math.min(d.source.y, height - 75), d.source.radius)\n          )\n          .attr('x2', (d) =>\n            Math.max(Math.min(d.target.x, width), d.target.radius + 100)\n          )\n          .attr('y2', (d) =>\n            Math.max(Math.min(d.target.y, height - 75), d.target.radius)\n          )\n          .style('stroke-width', (d) =>\n            Math.min(\n              Math.pow(d.count / 2000, 2) * edgeForce,\n              Math.pow(d.count / 2000, 2) * 3\n            )\n          );\n        node\n          .attr('cx', (d) => Math.max(Math.min(d.x, width), d.radius + 100))\n          .attr('cy', (d) => Math.max(Math.min(d.y, height - 75), d.radius));\n      }\n\n      function click(event, d) {\n        if (cursorMode === 'select') {\n          node.style('fill', function (d) {\n            if (event.target.__data__ === d) {\n              return d3.interpolateGreys(0.5);\n            }\n            if (overperforming)\n              return d3.interpolateBlues(Math.abs((d.metric - model) / model));\n            return d3.interpolateReds(Math.abs((d.metric - model) / model));\n          });\n          setDetails({\n            slice: d.slice,\n            size: d.size,\n            metric: d.metric,\n            similarSlices: links\n              .sort((a, b) => b.count - a.count)\n              .map((link) => {\n                if (\n                  link.count > edgeFiltering &&\n                  link.sliceSource === d.slice\n                ) {\n                  return link.sliceTarget;\n                } else if (\n                  link.count > edgeFiltering &&\n                  link.sliceTarget === d.slice\n                ) {\n                  return link.sliceSource;\n                }\n                return undefined;\n              })\n              .filter((link) => link !== undefined)\n              .slice(0, 10),\n          });\n        } else {\n          delete d.fx;\n          delete d.fy;\n          d3.select(this).classed('fixed', false);\n          d3.select(this).style('fill', () => {\n            if (overperforming)\n              return d3.interpolateBlues(Math.abs((d.metric - model) / model));\n            return d3.interpolateReds(Math.abs((d.metric - model) / model));\n          });\n          simulation.alpha(1).restart();\n        }\n      }\n\n      function dragstart(event, d) {\n        d3.select(this).classed('fixed', true);\n        d3.select(this).style('fill', 'lightgray');\n        setDetails({\n          slice: d.slice,\n          size: d.size,\n          metric: d.metric,\n          similarSlices: links\n            .sort((a, b) => b.count - a.count)\n            .map((link) => {\n              if (link.count > edgeFiltering && link.sliceSource === d.slice) {\n                return link.sliceTarget;\n              } else if (\n                link.count > edgeFiltering &&\n                link.sliceTarget === d.slice\n              ) {\n                return link.sliceSource;\n              }\n              return undefined;\n            })\n            .filter((link) => link !== undefined)\n            .slice(0, 10),\n        });\n      }\n\n      function dragged(event, d) {\n        d.fx = clamp(event.x, 0, width);\n        d.fy = clamp(event.y, 0, height);\n        simulation.alpha(1).restart();\n      }\n\n      const convexHull = (g, opacity) => {\n        const colors = [\n          'gray',\n          'green',\n          'yellow',\n          'black',\n          'purple',\n          'pink',\n          'red',\n          'orange',\n          'brown',\n          'blue',\n          'cyan',\n          'magenta',\n          'lime',\n          'navy',\n          'olive',\n          'teal',\n          'violet',\n          'wheat',\n        ];\n        let vertices = [];\n\n        for (let i = 0; i < topGroupings.length; i++) {\n          vertices = [];\n          for (let j = 0; j < nodes.length; j++) {\n            if (\n              nodes[j].xFeature === topGroupings[i][0].split(', ')[0] &&\n              (degree < 2 ||\n                nodes[j].yFeature === topGroupings[i][0].split(', ')[1])\n            ) {\n              if (degree < 2) {\n                vertices.push([nodes[j].x, height / 2]);\n              } else {\n                vertices.push([nodes[j].x, nodes[j].y]);\n              }\n            }\n          }\n          const hull = d3.polygonHull(vertices);\n          const line = d3.line().curve(d3.curveLinearClosed);\n          if (!hull || !showConvexHull) return;\n          g.append('path')\n            .attr('class', `path${degree}`)\n            .attr('d', line(hull))\n            .attr('fill', colors[0])\n            .attr('stroke', colors[0])\n            .attr('opacity', opacity);\n        }\n      };\n\n      svg.select('.x-axis-grid').call(xAxisGrid);\n      svg.select('.y-axis-grid').call(yAxisGrid);\n      svg.select('.x-axis').call(xAxis);\n      if (degree >= 2) {\n        svg.select('.y-axis').call(yAxis).style('opacity', '1');\n      } else {\n        svg.select('.y-axis').style('opacity', '0');\n      }\n      const convexHullSwitch = d3.select('.switch');\n      convexHullSwitch.on('change', () => {\n        d3.select(`.hull`)\n          .style('opacity', '0')\n          .call(convexHull, 0.25)\n          .transition()\n          .duration(500)\n          .style('opacity', '1');\n      });\n      // if (showConvexHull) {\n      //   setTimeout(() => {\n      //     d3.select(`.hull`)\n      //       .style('opacity', '0')\n      //       .call(convexHull, 0.25)\n      //       .transition()\n      //       .duration(500)\n      //       .style('opacity', '1');\n      //   }, 4000);\n      // } else {\n      //   d3.select(`.hull`).remove();\n      //   d3.selectAll(`.hull`).transition().duration(0).style('opacity', '0');\n      // }\n    },\n    [data, value]\n  );\n\n  return (\n    <div className='container' style={{ overflow: 'scroll' }}>\n      <h2>Show Convex Hull:</h2>\n      <Switch\n        checked={showConvexHull}\n        onChange={() => {\n          setShowConvexHull(!showConvexHull);\n          d3.select(`.hull`)\n            .style('opacity', '0')\n            .call(convexHull, 0.25)\n            .transition()\n            .duration(500)\n            .style('opacity', '1');\n        }}\n        label='Show Convex Hull'\n        className='switch'\n      />\n      <div\n        className='tooltip'\n        style={{\n          position: 'absolute',\n          background: '#e6e6e6',\n          borderRadius: '0.5rem',\n          padding: '0.5rem',\n        }}\n      ></div>\n      <svg className='svg' width={width} height={height}>\n        <g transform='translate(50, 200)'></g>\n        <g className='x-axis' />\n        <g className='y-axis' />\n        <g className='x-axis-grid' />\n        <g className='y-axis-grid' />\n        {hulls.map((hull) => (\n          <g className={'hull'} key={hull} />\n        ))}\n      </svg>\n      <br />\n      <Button\n        variant='outlined'\n        onClick={forceUpdate}\n        style={{ margin: '1rem' }}\n      >\n        Recenter\n      </Button>\n    </div>\n  );\n}\n\nexport default memo(GraphLayout);\n"]},"metadata":{},"sourceType":"module"}