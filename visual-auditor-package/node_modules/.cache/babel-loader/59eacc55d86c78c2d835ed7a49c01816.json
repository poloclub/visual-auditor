{"ast":null,"code":"import value from \"./value.js\";\nimport numberArray, { isNumberArray } from \"./numberArray.js\";\nexport default function (a, b) {\n  return (isNumberArray(b) ? numberArray : genericArray)(a, b);\n}\nexport function genericArray(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function (t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n\n    return c;\n  };\n}","map":{"version":3,"sources":["/Users/davidmunechika/Documents/Code/Research/visual-auditor/node_modules/d3-interpolate/src/array.js"],"names":["value","numberArray","isNumberArray","a","b","genericArray","nb","length","na","Math","min","x","Array","c","i","t"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,OAAOC,WAAP,IAAqBC,aAArB,QAAyC,kBAAzC;AAEA,eAAe,UAASC,CAAT,EAAYC,CAAZ,EAAe;AAC5B,SAAO,CAACF,aAAa,CAACE,CAAD,CAAb,GAAmBH,WAAnB,GAAiCI,YAAlC,EAAgDF,CAAhD,EAAmDC,CAAnD,CAAP;AACD;AAED,OAAO,SAASC,YAAT,CAAsBF,CAAtB,EAAyBC,CAAzB,EAA4B;AACjC,MAAIE,EAAE,GAAGF,CAAC,GAAGA,CAAC,CAACG,MAAL,GAAc,CAAxB;AAAA,MACIC,EAAE,GAAGL,CAAC,GAAGM,IAAI,CAACC,GAAL,CAASJ,EAAT,EAAaH,CAAC,CAACI,MAAf,CAAH,GAA4B,CADtC;AAAA,MAEII,CAAC,GAAG,IAAIC,KAAJ,CAAUJ,EAAV,CAFR;AAAA,MAGIK,CAAC,GAAG,IAAID,KAAJ,CAAUN,EAAV,CAHR;AAAA,MAIIQ,CAJJ;;AAMA,OAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGN,EAAhB,EAAoB,EAAEM,CAAtB,EAAyBH,CAAC,CAACG,CAAD,CAAD,GAAOd,KAAK,CAACG,CAAC,CAACW,CAAD,CAAF,EAAOV,CAAC,CAACU,CAAD,CAAR,CAAZ;;AACzB,SAAOA,CAAC,GAAGR,EAAX,EAAe,EAAEQ,CAAjB,EAAoBD,CAAC,CAACC,CAAD,CAAD,GAAOV,CAAC,CAACU,CAAD,CAAR;;AAEpB,SAAO,UAASC,CAAT,EAAY;AACjB,SAAKD,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGN,EAAhB,EAAoB,EAAEM,CAAtB,EAAyBD,CAAC,CAACC,CAAD,CAAD,GAAOH,CAAC,CAACG,CAAD,CAAD,CAAKC,CAAL,CAAP;;AACzB,WAAOF,CAAP;AACD,GAHD;AAID","sourcesContent":["import value from \"./value.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  return (isNumberArray(b) ? numberArray : genericArray)(a, b);\n}\n\nexport function genericArray(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n"]},"metadata":{},"sourceType":"module"}