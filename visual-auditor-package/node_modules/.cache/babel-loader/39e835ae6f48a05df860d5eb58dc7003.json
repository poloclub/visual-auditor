{"ast":null,"code":"import _slicedToArray from \"/Users/davidmunechika/Documents/Code/Research/visual-auditor/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport responsivePropType from './responsivePropType';\nimport { handleBreakpoints } from './breakpoints';\nimport { getPath } from './style';\nimport merge from './merge';\nimport memoize from './memoize';\nvar properties = {\n  m: 'margin',\n  p: 'padding'\n};\nvar directions = {\n  t: 'Top',\n  r: 'Right',\n  b: 'Bottom',\n  l: 'Left',\n  x: ['Left', 'Right'],\n  y: ['Top', 'Bottom']\n};\nvar aliases = {\n  marginX: 'mx',\n  marginY: 'my',\n  paddingX: 'px',\n  paddingY: 'py'\n}; // memoize() impact:\n// From 300,000 ops/sec\n// To 350,000 ops/sec\n\nvar getCssProperties = memoize(function (prop) {\n  // It's not a shorthand notation.\n  if (prop.length > 2) {\n    if (aliases[prop]) {\n      prop = aliases[prop];\n    } else {\n      return [prop];\n    }\n  }\n\n  var _prop$split = prop.split(''),\n      _prop$split2 = _slicedToArray(_prop$split, 2),\n      a = _prop$split2[0],\n      b = _prop$split2[1];\n\n  var property = properties[a];\n  var direction = directions[b] || '';\n  return Array.isArray(direction) ? direction.map(function (dir) {\n    return property + dir;\n  }) : [property + direction];\n});\nvar marginKeys = ['m', 'mt', 'mr', 'mb', 'ml', 'mx', 'my', 'margin', 'marginTop', 'marginRight', 'marginBottom', 'marginLeft', 'marginX', 'marginY', 'marginInline', 'marginInlineStart', 'marginInlineEnd', 'marginBlock', 'marginBlockStart', 'marginBlockEnd'];\nvar paddingKeys = ['p', 'pt', 'pr', 'pb', 'pl', 'px', 'py', 'padding', 'paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft', 'paddingX', 'paddingY', 'paddingInline', 'paddingInlineStart', 'paddingInlineEnd', 'paddingBlock', 'paddingBlockStart', 'paddingBlockEnd'];\nvar spacingKeys = [].concat(marginKeys, paddingKeys);\nexport function createUnaryUnit(theme, themeKey, defaultValue, propName) {\n  var themeSpacing = getPath(theme, themeKey) || defaultValue;\n\n  if (typeof themeSpacing === 'number') {\n    return function (abs) {\n      if (typeof abs === 'string') {\n        return abs;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (typeof abs !== 'number') {\n          console.error(\"MUI: Expected \".concat(propName, \" argument to be a number or a string, got \").concat(abs, \".\"));\n        }\n      }\n\n      return themeSpacing * abs;\n    };\n  }\n\n  if (Array.isArray(themeSpacing)) {\n    return function (abs) {\n      if (typeof abs === 'string') {\n        return abs;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (!Number.isInteger(abs)) {\n          console.error([\"MUI: The `theme.\".concat(themeKey, \"` array type cannot be combined with non integer values.\") + \"You should either use an integer value that can be used as index, or define the `theme.\".concat(themeKey, \"` as a number.\")].join('\\n'));\n        } else if (abs > themeSpacing.length - 1) {\n          console.error([\"MUI: The value provided (\".concat(abs, \") overflows.\"), \"The supported values are: \".concat(JSON.stringify(themeSpacing), \".\"), \"\".concat(abs, \" > \").concat(themeSpacing.length - 1, \", you need to add the missing values.\")].join('\\n'));\n        }\n      }\n\n      return themeSpacing[abs];\n    };\n  }\n\n  if (typeof themeSpacing === 'function') {\n    return themeSpacing;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    console.error([\"MUI: The `theme.\".concat(themeKey, \"` value (\").concat(themeSpacing, \") is invalid.\"), 'It should be a number, an array or a function.'].join('\\n'));\n  }\n\n  return function () {\n    return undefined;\n  };\n}\nexport function createUnarySpacing(theme) {\n  return createUnaryUnit(theme, 'spacing', 8, 'spacing');\n}\nexport function getValue(transformer, propValue) {\n  if (typeof propValue === 'string' || propValue == null) {\n    return propValue;\n  }\n\n  var abs = Math.abs(propValue);\n  var transformed = transformer(abs);\n\n  if (propValue >= 0) {\n    return transformed;\n  }\n\n  if (typeof transformed === 'number') {\n    return -transformed;\n  }\n\n  return \"-\".concat(transformed);\n}\nexport function getStyleFromPropValue(cssProperties, transformer) {\n  return function (propValue) {\n    return cssProperties.reduce(function (acc, cssProperty) {\n      acc[cssProperty] = getValue(transformer, propValue);\n      return acc;\n    }, {});\n  };\n}\n\nfunction resolveCssProperty(props, keys, prop, transformer) {\n  // Using a hash computation over an array iteration could be faster, but with only 28 items,\n  // it's doesn't worth the bundle size.\n  if (keys.indexOf(prop) === -1) {\n    return null;\n  }\n\n  var cssProperties = getCssProperties(prop);\n  var styleFromPropValue = getStyleFromPropValue(cssProperties, transformer);\n  var propValue = props[prop];\n  return handleBreakpoints(props, propValue, styleFromPropValue);\n}\n\nfunction style(props, keys) {\n  var transformer = createUnarySpacing(props.theme);\n  return Object.keys(props).map(function (prop) {\n    return resolveCssProperty(props, keys, prop, transformer);\n  }).reduce(merge, {});\n}\n\nexport function margin(props) {\n  return style(props, marginKeys);\n}\nmargin.propTypes = process.env.NODE_ENV !== 'production' ? marginKeys.reduce(function (obj, key) {\n  obj[key] = responsivePropType;\n  return obj;\n}, {}) : {};\nmargin.filterProps = marginKeys;\nexport function padding(props) {\n  return style(props, paddingKeys);\n}\npadding.propTypes = process.env.NODE_ENV !== 'production' ? paddingKeys.reduce(function (obj, key) {\n  obj[key] = responsivePropType;\n  return obj;\n}, {}) : {};\npadding.filterProps = paddingKeys;\n\nfunction spacing(props) {\n  return style(props, spacingKeys);\n}\n\nspacing.propTypes = process.env.NODE_ENV !== 'production' ? spacingKeys.reduce(function (obj, key) {\n  obj[key] = responsivePropType;\n  return obj;\n}, {}) : {};\nspacing.filterProps = spacingKeys;\nexport default spacing;","map":{"version":3,"sources":["/Users/davidmunechika/Documents/Code/Research/visual-auditor/node_modules/@mui/system/esm/spacing.js"],"names":["responsivePropType","handleBreakpoints","getPath","merge","memoize","properties","m","p","directions","t","r","b","l","x","y","aliases","marginX","marginY","paddingX","paddingY","getCssProperties","prop","length","split","a","property","direction","Array","isArray","map","dir","marginKeys","paddingKeys","spacingKeys","createUnaryUnit","theme","themeKey","defaultValue","propName","themeSpacing","abs","process","env","NODE_ENV","console","error","Number","isInteger","join","JSON","stringify","undefined","createUnarySpacing","getValue","transformer","propValue","Math","transformed","getStyleFromPropValue","cssProperties","reduce","acc","cssProperty","resolveCssProperty","props","keys","indexOf","styleFromPropValue","style","Object","margin","propTypes","obj","key","filterProps","padding","spacing"],"mappings":";AAAA,OAAOA,kBAAP,MAA+B,sBAA/B;AACA,SAASC,iBAAT,QAAkC,eAAlC;AACA,SAASC,OAAT,QAAwB,SAAxB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,IAAMC,UAAU,GAAG;AACjBC,EAAAA,CAAC,EAAE,QADc;AAEjBC,EAAAA,CAAC,EAAE;AAFc,CAAnB;AAIA,IAAMC,UAAU,GAAG;AACjBC,EAAAA,CAAC,EAAE,KADc;AAEjBC,EAAAA,CAAC,EAAE,OAFc;AAGjBC,EAAAA,CAAC,EAAE,QAHc;AAIjBC,EAAAA,CAAC,EAAE,MAJc;AAKjBC,EAAAA,CAAC,EAAE,CAAC,MAAD,EAAS,OAAT,CALc;AAMjBC,EAAAA,CAAC,EAAE,CAAC,KAAD,EAAQ,QAAR;AANc,CAAnB;AAQA,IAAMC,OAAO,GAAG;AACdC,EAAAA,OAAO,EAAE,IADK;AAEdC,EAAAA,OAAO,EAAE,IAFK;AAGdC,EAAAA,QAAQ,EAAE,IAHI;AAIdC,EAAAA,QAAQ,EAAE;AAJI,CAAhB,C,CAKG;AACH;AACA;;AAEA,IAAMC,gBAAgB,GAAGhB,OAAO,CAAC,UAAAiB,IAAI,EAAI;AACvC;AACA,MAAIA,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB;AACnB,QAAIP,OAAO,CAACM,IAAD,CAAX,EAAmB;AACjBA,MAAAA,IAAI,GAAGN,OAAO,CAACM,IAAD,CAAd;AACD,KAFD,MAEO;AACL,aAAO,CAACA,IAAD,CAAP;AACD;AACF;;AAED,oBAAeA,IAAI,CAACE,KAAL,CAAW,EAAX,CAAf;AAAA;AAAA,MAAOC,CAAP;AAAA,MAAUb,CAAV;;AACA,MAAMc,QAAQ,GAAGpB,UAAU,CAACmB,CAAD,CAA3B;AACA,MAAME,SAAS,GAAGlB,UAAU,CAACG,CAAD,CAAV,IAAiB,EAAnC;AACA,SAAOgB,KAAK,CAACC,OAAN,CAAcF,SAAd,IAA2BA,SAAS,CAACG,GAAV,CAAc,UAAAC,GAAG;AAAA,WAAIL,QAAQ,GAAGK,GAAf;AAAA,GAAjB,CAA3B,GAAkE,CAACL,QAAQ,GAAGC,SAAZ,CAAzE;AACD,CAd+B,CAAhC;AAeA,IAAMK,UAAU,GAAG,CAAC,GAAD,EAAM,IAAN,EAAY,IAAZ,EAAkB,IAAlB,EAAwB,IAAxB,EAA8B,IAA9B,EAAoC,IAApC,EAA0C,QAA1C,EAAoD,WAApD,EAAiE,aAAjE,EAAgF,cAAhF,EAAgG,YAAhG,EAA8G,SAA9G,EAAyH,SAAzH,EAAoI,cAApI,EAAoJ,mBAApJ,EAAyK,iBAAzK,EAA4L,aAA5L,EAA2M,kBAA3M,EAA+N,gBAA/N,CAAnB;AACA,IAAMC,WAAW,GAAG,CAAC,GAAD,EAAM,IAAN,EAAY,IAAZ,EAAkB,IAAlB,EAAwB,IAAxB,EAA8B,IAA9B,EAAoC,IAApC,EAA0C,SAA1C,EAAqD,YAArD,EAAmE,cAAnE,EAAmF,eAAnF,EAAoG,aAApG,EAAmH,UAAnH,EAA+H,UAA/H,EAA2I,eAA3I,EAA4J,oBAA5J,EAAkL,kBAAlL,EAAsM,cAAtM,EAAsN,mBAAtN,EAA2O,iBAA3O,CAApB;AACA,IAAMC,WAAW,aAAOF,UAAP,EAAsBC,WAAtB,CAAjB;AACA,OAAO,SAASE,eAAT,CAAyBC,KAAzB,EAAgCC,QAAhC,EAA0CC,YAA1C,EAAwDC,QAAxD,EAAkE;AACvE,MAAMC,YAAY,GAAGrC,OAAO,CAACiC,KAAD,EAAQC,QAAR,CAAP,IAA4BC,YAAjD;;AAEA,MAAI,OAAOE,YAAP,KAAwB,QAA5B,EAAsC;AACpC,WAAO,UAAAC,GAAG,EAAI;AACZ,UAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AAC3B,eAAOA,GAAP;AACD;;AAED,UAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,YAAI,OAAOH,GAAP,KAAe,QAAnB,EAA6B;AAC3BI,UAAAA,OAAO,CAACC,KAAR,yBAA+BP,QAA/B,uDAAoFE,GAApF;AACD;AACF;;AAED,aAAOD,YAAY,GAAGC,GAAtB;AACD,KAZD;AAaD;;AAED,MAAIb,KAAK,CAACC,OAAN,CAAcW,YAAd,CAAJ,EAAiC;AAC/B,WAAO,UAAAC,GAAG,EAAI;AACZ,UAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AAC3B,eAAOA,GAAP;AACD;;AAED,UAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,YAAI,CAACG,MAAM,CAACC,SAAP,CAAiBP,GAAjB,CAAL,EAA4B;AAC1BI,UAAAA,OAAO,CAACC,KAAR,CAAc,CAAC,0BAAoBT,QAApB,iKAAqLA,QAArL,mBAAD,EAAiNY,IAAjN,CAAsN,IAAtN,CAAd;AACD,SAFD,MAEO,IAAIR,GAAG,GAAGD,YAAY,CAACjB,MAAb,GAAsB,CAAhC,EAAmC;AACxCsB,UAAAA,OAAO,CAACC,KAAR,CAAc,oCAA6BL,GAA7B,uDAA6ES,IAAI,CAACC,SAAL,CAAeX,YAAf,CAA7E,kBAAiHC,GAAjH,gBAA0HD,YAAY,CAACjB,MAAb,GAAsB,CAAhJ,4CAA0L0B,IAA1L,CAA+L,IAA/L,CAAd;AACD;AACF;;AAED,aAAOT,YAAY,CAACC,GAAD,CAAnB;AACD,KAdD;AAeD;;AAED,MAAI,OAAOD,YAAP,KAAwB,UAA5B,EAAwC;AACtC,WAAOA,YAAP;AACD;;AAED,MAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCC,IAAAA,OAAO,CAACC,KAAR,CAAc,2BAAqBT,QAArB,sBAA0CG,YAA1C,oBAAuE,gDAAvE,EAAyHS,IAAzH,CAA8H,IAA9H,CAAd;AACD;;AAED,SAAO;AAAA,WAAMG,SAAN;AAAA,GAAP;AACD;AACD,OAAO,SAASC,kBAAT,CAA4BjB,KAA5B,EAAmC;AACxC,SAAOD,eAAe,CAACC,KAAD,EAAQ,SAAR,EAAmB,CAAnB,EAAsB,SAAtB,CAAtB;AACD;AACD,OAAO,SAASkB,QAAT,CAAkBC,WAAlB,EAA+BC,SAA/B,EAA0C;AAC/C,MAAI,OAAOA,SAAP,KAAqB,QAArB,IAAiCA,SAAS,IAAI,IAAlD,EAAwD;AACtD,WAAOA,SAAP;AACD;;AAED,MAAMf,GAAG,GAAGgB,IAAI,CAAChB,GAAL,CAASe,SAAT,CAAZ;AACA,MAAME,WAAW,GAAGH,WAAW,CAACd,GAAD,CAA/B;;AAEA,MAAIe,SAAS,IAAI,CAAjB,EAAoB;AAClB,WAAOE,WAAP;AACD;;AAED,MAAI,OAAOA,WAAP,KAAuB,QAA3B,EAAqC;AACnC,WAAO,CAACA,WAAR;AACD;;AAED,oBAAWA,WAAX;AACD;AACD,OAAO,SAASC,qBAAT,CAA+BC,aAA/B,EAA8CL,WAA9C,EAA2D;AAChE,SAAO,UAAAC,SAAS;AAAA,WAAII,aAAa,CAACC,MAAd,CAAqB,UAACC,GAAD,EAAMC,WAAN,EAAsB;AAC7DD,MAAAA,GAAG,CAACC,WAAD,CAAH,GAAmBT,QAAQ,CAACC,WAAD,EAAcC,SAAd,CAA3B;AACA,aAAOM,GAAP;AACD,KAHmB,EAGjB,EAHiB,CAAJ;AAAA,GAAhB;AAID;;AAED,SAASE,kBAAT,CAA4BC,KAA5B,EAAmCC,IAAnC,EAAyC5C,IAAzC,EAA+CiC,WAA/C,EAA4D;AAC1D;AACA;AACA,MAAIW,IAAI,CAACC,OAAL,CAAa7C,IAAb,MAAuB,CAAC,CAA5B,EAA+B;AAC7B,WAAO,IAAP;AACD;;AAED,MAAMsC,aAAa,GAAGvC,gBAAgB,CAACC,IAAD,CAAtC;AACA,MAAM8C,kBAAkB,GAAGT,qBAAqB,CAACC,aAAD,EAAgBL,WAAhB,CAAhD;AACA,MAAMC,SAAS,GAAGS,KAAK,CAAC3C,IAAD,CAAvB;AACA,SAAOpB,iBAAiB,CAAC+D,KAAD,EAAQT,SAAR,EAAmBY,kBAAnB,CAAxB;AACD;;AAED,SAASC,KAAT,CAAeJ,KAAf,EAAsBC,IAAtB,EAA4B;AAC1B,MAAMX,WAAW,GAAGF,kBAAkB,CAACY,KAAK,CAAC7B,KAAP,CAAtC;AACA,SAAOkC,MAAM,CAACJ,IAAP,CAAYD,KAAZ,EAAmBnC,GAAnB,CAAuB,UAAAR,IAAI;AAAA,WAAI0C,kBAAkB,CAACC,KAAD,EAAQC,IAAR,EAAc5C,IAAd,EAAoBiC,WAApB,CAAtB;AAAA,GAA3B,EAAmFM,MAAnF,CAA0FzD,KAA1F,EAAiG,EAAjG,CAAP;AACD;;AAED,OAAO,SAASmE,MAAT,CAAgBN,KAAhB,EAAuB;AAC5B,SAAOI,KAAK,CAACJ,KAAD,EAAQjC,UAAR,CAAZ;AACD;AACDuC,MAAM,CAACC,SAAP,GAAmB9B,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCZ,UAAU,CAAC6B,MAAX,CAAkB,UAACY,GAAD,EAAMC,GAAN,EAAc;AACzFD,EAAAA,GAAG,CAACC,GAAD,CAAH,GAAWzE,kBAAX;AACA,SAAOwE,GAAP;AACD,CAH0D,EAGxD,EAHwD,CAAxC,GAGV,EAHT;AAIAF,MAAM,CAACI,WAAP,GAAqB3C,UAArB;AACA,OAAO,SAAS4C,OAAT,CAAiBX,KAAjB,EAAwB;AAC7B,SAAOI,KAAK,CAACJ,KAAD,EAAQhC,WAAR,CAAZ;AACD;AACD2C,OAAO,CAACJ,SAAR,GAAoB9B,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCX,WAAW,CAAC4B,MAAZ,CAAmB,UAACY,GAAD,EAAMC,GAAN,EAAc;AAC3FD,EAAAA,GAAG,CAACC,GAAD,CAAH,GAAWzE,kBAAX;AACA,SAAOwE,GAAP;AACD,CAH2D,EAGzD,EAHyD,CAAxC,GAGX,EAHT;AAIAG,OAAO,CAACD,WAAR,GAAsB1C,WAAtB;;AAEA,SAAS4C,OAAT,CAAiBZ,KAAjB,EAAwB;AACtB,SAAOI,KAAK,CAACJ,KAAD,EAAQ/B,WAAR,CAAZ;AACD;;AAED2C,OAAO,CAACL,SAAR,GAAoB9B,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCV,WAAW,CAAC2B,MAAZ,CAAmB,UAACY,GAAD,EAAMC,GAAN,EAAc;AAC3FD,EAAAA,GAAG,CAACC,GAAD,CAAH,GAAWzE,kBAAX;AACA,SAAOwE,GAAP;AACD,CAH2D,EAGzD,EAHyD,CAAxC,GAGX,EAHT;AAIAI,OAAO,CAACF,WAAR,GAAsBzC,WAAtB;AACA,eAAe2C,OAAf","sourcesContent":["import responsivePropType from './responsivePropType';\nimport { handleBreakpoints } from './breakpoints';\nimport { getPath } from './style';\nimport merge from './merge';\nimport memoize from './memoize';\nconst properties = {\n  m: 'margin',\n  p: 'padding'\n};\nconst directions = {\n  t: 'Top',\n  r: 'Right',\n  b: 'Bottom',\n  l: 'Left',\n  x: ['Left', 'Right'],\n  y: ['Top', 'Bottom']\n};\nconst aliases = {\n  marginX: 'mx',\n  marginY: 'my',\n  paddingX: 'px',\n  paddingY: 'py'\n}; // memoize() impact:\n// From 300,000 ops/sec\n// To 350,000 ops/sec\n\nconst getCssProperties = memoize(prop => {\n  // It's not a shorthand notation.\n  if (prop.length > 2) {\n    if (aliases[prop]) {\n      prop = aliases[prop];\n    } else {\n      return [prop];\n    }\n  }\n\n  const [a, b] = prop.split('');\n  const property = properties[a];\n  const direction = directions[b] || '';\n  return Array.isArray(direction) ? direction.map(dir => property + dir) : [property + direction];\n});\nconst marginKeys = ['m', 'mt', 'mr', 'mb', 'ml', 'mx', 'my', 'margin', 'marginTop', 'marginRight', 'marginBottom', 'marginLeft', 'marginX', 'marginY', 'marginInline', 'marginInlineStart', 'marginInlineEnd', 'marginBlock', 'marginBlockStart', 'marginBlockEnd'];\nconst paddingKeys = ['p', 'pt', 'pr', 'pb', 'pl', 'px', 'py', 'padding', 'paddingTop', 'paddingRight', 'paddingBottom', 'paddingLeft', 'paddingX', 'paddingY', 'paddingInline', 'paddingInlineStart', 'paddingInlineEnd', 'paddingBlock', 'paddingBlockStart', 'paddingBlockEnd'];\nconst spacingKeys = [...marginKeys, ...paddingKeys];\nexport function createUnaryUnit(theme, themeKey, defaultValue, propName) {\n  const themeSpacing = getPath(theme, themeKey) || defaultValue;\n\n  if (typeof themeSpacing === 'number') {\n    return abs => {\n      if (typeof abs === 'string') {\n        return abs;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (typeof abs !== 'number') {\n          console.error(`MUI: Expected ${propName} argument to be a number or a string, got ${abs}.`);\n        }\n      }\n\n      return themeSpacing * abs;\n    };\n  }\n\n  if (Array.isArray(themeSpacing)) {\n    return abs => {\n      if (typeof abs === 'string') {\n        return abs;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (!Number.isInteger(abs)) {\n          console.error([`MUI: The \\`theme.${themeKey}\\` array type cannot be combined with non integer values.` + `You should either use an integer value that can be used as index, or define the \\`theme.${themeKey}\\` as a number.`].join('\\n'));\n        } else if (abs > themeSpacing.length - 1) {\n          console.error([`MUI: The value provided (${abs}) overflows.`, `The supported values are: ${JSON.stringify(themeSpacing)}.`, `${abs} > ${themeSpacing.length - 1}, you need to add the missing values.`].join('\\n'));\n        }\n      }\n\n      return themeSpacing[abs];\n    };\n  }\n\n  if (typeof themeSpacing === 'function') {\n    return themeSpacing;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    console.error([`MUI: The \\`theme.${themeKey}\\` value (${themeSpacing}) is invalid.`, 'It should be a number, an array or a function.'].join('\\n'));\n  }\n\n  return () => undefined;\n}\nexport function createUnarySpacing(theme) {\n  return createUnaryUnit(theme, 'spacing', 8, 'spacing');\n}\nexport function getValue(transformer, propValue) {\n  if (typeof propValue === 'string' || propValue == null) {\n    return propValue;\n  }\n\n  const abs = Math.abs(propValue);\n  const transformed = transformer(abs);\n\n  if (propValue >= 0) {\n    return transformed;\n  }\n\n  if (typeof transformed === 'number') {\n    return -transformed;\n  }\n\n  return `-${transformed}`;\n}\nexport function getStyleFromPropValue(cssProperties, transformer) {\n  return propValue => cssProperties.reduce((acc, cssProperty) => {\n    acc[cssProperty] = getValue(transformer, propValue);\n    return acc;\n  }, {});\n}\n\nfunction resolveCssProperty(props, keys, prop, transformer) {\n  // Using a hash computation over an array iteration could be faster, but with only 28 items,\n  // it's doesn't worth the bundle size.\n  if (keys.indexOf(prop) === -1) {\n    return null;\n  }\n\n  const cssProperties = getCssProperties(prop);\n  const styleFromPropValue = getStyleFromPropValue(cssProperties, transformer);\n  const propValue = props[prop];\n  return handleBreakpoints(props, propValue, styleFromPropValue);\n}\n\nfunction style(props, keys) {\n  const transformer = createUnarySpacing(props.theme);\n  return Object.keys(props).map(prop => resolveCssProperty(props, keys, prop, transformer)).reduce(merge, {});\n}\n\nexport function margin(props) {\n  return style(props, marginKeys);\n}\nmargin.propTypes = process.env.NODE_ENV !== 'production' ? marginKeys.reduce((obj, key) => {\n  obj[key] = responsivePropType;\n  return obj;\n}, {}) : {};\nmargin.filterProps = marginKeys;\nexport function padding(props) {\n  return style(props, paddingKeys);\n}\npadding.propTypes = process.env.NODE_ENV !== 'production' ? paddingKeys.reduce((obj, key) => {\n  obj[key] = responsivePropType;\n  return obj;\n}, {}) : {};\npadding.filterProps = paddingKeys;\n\nfunction spacing(props) {\n  return style(props, spacingKeys);\n}\n\nspacing.propTypes = process.env.NODE_ENV !== 'production' ? spacingKeys.reduce((obj, key) => {\n  obj[key] = responsivePropType;\n  return obj;\n}, {}) : {};\nspacing.filterProps = spacingKeys;\nexport default spacing;"]},"metadata":{},"sourceType":"module"}