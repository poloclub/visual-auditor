{"ast":null,"code":"import _slicedToArray from \"/Users/davidmunechika/Documents/Code/Research/visual-auditor/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { interpolate, interpolateRound, piecewise } from \"d3-interpolate\";\nimport { identity } from \"./continuous.js\";\nimport { initInterpolator } from \"./init.js\";\nimport { linearish } from \"./linear.js\";\nimport { loggish } from \"./log.js\";\nimport { copy } from \"./sequential.js\";\nimport { symlogish } from \"./symlog.js\";\nimport { powish } from \"./pow.js\";\n\nfunction transformer() {\n  var x0 = 0,\n      x1 = 0.5,\n      x2 = 1,\n      s = 1,\n      t0,\n      t1,\n      t2,\n      k10,\n      k21,\n      interpolator = identity,\n      transform,\n      clamp = false,\n      unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : (x = 0.5 + ((x = +transform(x)) - t1) * (s * x < s * t1 ? k10 : k21), interpolator(clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n\n  scale.domain = function (_) {\n    var _ref, _ref2;\n\n    return arguments.length ? ((_ref = _, _ref2 = _slicedToArray(_ref, 3), x0 = _ref2[0], x1 = _ref2[1], x2 = _ref2[2], _ref), t0 = transform(x0 = +x0), t1 = transform(x1 = +x1), t2 = transform(x2 = +x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), s = t1 < t0 ? -1 : 1, scale) : [x0, x1, x2];\n  };\n\n  scale.clamp = function (_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function (_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  function range(interpolate) {\n    return function (_) {\n      var _ref3, _ref4;\n\n      var r0, r1, r2;\n      return arguments.length ? ((_ref3 = _, _ref4 = _slicedToArray(_ref3, 3), r0 = _ref4[0], r1 = _ref4[1], r2 = _ref4[2], _ref3), interpolator = piecewise(interpolate, [r0, r1, r2]), scale) : [interpolator(0), interpolator(0.5), interpolator(1)];\n    };\n  }\n\n  scale.range = range(interpolate);\n  scale.rangeRound = range(interpolateRound);\n\n  scale.unknown = function (_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function (t) {\n    transform = t, t0 = t(x0), t1 = t(x1), t2 = t(x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), s = t1 < t0 ? -1 : 1;\n    return scale;\n  };\n}\n\nexport default function diverging() {\n  var scale = linearish(transformer()(identity));\n\n  scale.copy = function () {\n    return copy(scale, diverging());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\nexport function divergingLog() {\n  var scale = loggish(transformer()).domain([0.1, 1, 10]);\n\n  scale.copy = function () {\n    return copy(scale, divergingLog()).base(scale.base());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\nexport function divergingSymlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function () {\n    return copy(scale, divergingSymlog()).constant(scale.constant());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\nexport function divergingPow() {\n  var scale = powish(transformer());\n\n  scale.copy = function () {\n    return copy(scale, divergingPow()).exponent(scale.exponent());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\nexport function divergingSqrt() {\n  return divergingPow.apply(null, arguments).exponent(0.5);\n}","map":{"version":3,"sources":["/Users/davidmunechika/Documents/Code/Research/visual-auditor/node_modules/d3-scale/src/diverging.js"],"names":["interpolate","interpolateRound","piecewise","identity","initInterpolator","linearish","loggish","copy","symlogish","powish","transformer","x0","x1","x2","s","t0","t1","t2","k10","k21","interpolator","transform","clamp","unknown","scale","x","isNaN","Math","max","min","domain","_","arguments","length","range","r0","r1","r2","rangeRound","t","diverging","apply","divergingLog","base","divergingSymlog","constant","divergingPow","exponent","divergingSqrt"],"mappings":";AAAA,SAAQA,WAAR,EAAqBC,gBAArB,EAAuCC,SAAvC,QAAuD,gBAAvD;AACA,SAAQC,QAAR,QAAuB,iBAAvB;AACA,SAAQC,gBAAR,QAA+B,WAA/B;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,OAAR,QAAsB,UAAtB;AACA,SAAQC,IAAR,QAAmB,iBAAnB;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,MAAR,QAAqB,UAArB;;AAEA,SAASC,WAAT,GAAuB;AACrB,MAAIC,EAAE,GAAG,CAAT;AAAA,MACIC,EAAE,GAAG,GADT;AAAA,MAEIC,EAAE,GAAG,CAFT;AAAA,MAGIC,CAAC,GAAG,CAHR;AAAA,MAIIC,EAJJ;AAAA,MAKIC,EALJ;AAAA,MAMIC,EANJ;AAAA,MAOIC,GAPJ;AAAA,MAQIC,GARJ;AAAA,MASIC,YAAY,GAAGjB,QATnB;AAAA,MAUIkB,SAVJ;AAAA,MAWIC,KAAK,GAAG,KAXZ;AAAA,MAYIC,OAZJ;;AAcA,WAASC,KAAT,CAAeC,CAAf,EAAkB;AAChB,WAAOC,KAAK,CAACD,CAAC,GAAG,CAACA,CAAN,CAAL,GAAgBF,OAAhB,IAA2BE,CAAC,GAAG,MAAM,CAAC,CAACA,CAAC,GAAG,CAACJ,SAAS,CAACI,CAAD,CAAf,IAAsBT,EAAvB,KAA8BF,CAAC,GAAGW,CAAJ,GAAQX,CAAC,GAAGE,EAAZ,GAAiBE,GAAjB,GAAuBC,GAArD,CAAV,EAAqEC,YAAY,CAACE,KAAK,GAAGK,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYD,IAAI,CAACE,GAAL,CAAS,CAAT,EAAYJ,CAAZ,CAAZ,CAAH,GAAiCA,CAAvC,CAA5G,CAAP;AACD;;AAEDD,EAAAA,KAAK,CAACM,MAAN,GAAe,UAASC,CAAT,EAAY;AAAA;;AACzB,WAAOC,SAAS,CAACC,MAAV,IAAoB,QAAeF,CAAf,mCAACpB,EAAD,aAAKC,EAAL,aAASC,EAAT,oBAAkBE,EAAE,GAAGM,SAAS,CAACV,EAAE,GAAG,CAACA,EAAP,CAAhC,EAA4CK,EAAE,GAAGK,SAAS,CAACT,EAAE,GAAG,CAACA,EAAP,CAA1D,EAAsEK,EAAE,GAAGI,SAAS,CAACR,EAAE,GAAG,CAACA,EAAP,CAApF,EAAgGK,GAAG,GAAGH,EAAE,KAAKC,EAAP,GAAY,CAAZ,GAAgB,OAAOA,EAAE,GAAGD,EAAZ,CAAtH,EAAuII,GAAG,GAAGH,EAAE,KAAKC,EAAP,GAAY,CAAZ,GAAgB,OAAOA,EAAE,GAAGD,EAAZ,CAA7J,EAA8KF,CAAC,GAAGE,EAAE,GAAGD,EAAL,GAAU,CAAC,CAAX,GAAe,CAAjM,EAAoMS,KAAxN,IAAiO,CAACb,EAAD,EAAKC,EAAL,EAASC,EAAT,CAAxO;AACD,GAFD;;AAIAW,EAAAA,KAAK,CAACF,KAAN,GAAc,UAASS,CAAT,EAAY;AACxB,WAAOC,SAAS,CAACC,MAAV,IAAoBX,KAAK,GAAG,CAAC,CAACS,CAAV,EAAaP,KAAjC,IAA0CF,KAAjD;AACD,GAFD;;AAIAE,EAAAA,KAAK,CAACJ,YAAN,GAAqB,UAASW,CAAT,EAAY;AAC/B,WAAOC,SAAS,CAACC,MAAV,IAAoBb,YAAY,GAAGW,CAAf,EAAkBP,KAAtC,IAA+CJ,YAAtD;AACD,GAFD;;AAIA,WAASc,KAAT,CAAelC,WAAf,EAA4B;AAC1B,WAAO,UAAS+B,CAAT,EAAY;AAAA;;AACjB,UAAII,EAAJ,EAAQC,EAAR,EAAYC,EAAZ;AACA,aAAOL,SAAS,CAACC,MAAV,IAAoB,SAAeF,CAAf,oCAACI,EAAD,aAAKC,EAAL,aAASC,EAAT,qBAAkBjB,YAAY,GAAGlB,SAAS,CAACF,WAAD,EAAc,CAACmC,EAAD,EAAKC,EAAL,EAASC,EAAT,CAAd,CAA1C,EAAuEb,KAA3F,IAAoG,CAACJ,YAAY,CAAC,CAAD,CAAb,EAAkBA,YAAY,CAAC,GAAD,CAA9B,EAAqCA,YAAY,CAAC,CAAD,CAAjD,CAA3G;AACD,KAHD;AAID;;AAEDI,EAAAA,KAAK,CAACU,KAAN,GAAcA,KAAK,CAAClC,WAAD,CAAnB;AAEAwB,EAAAA,KAAK,CAACc,UAAN,GAAmBJ,KAAK,CAACjC,gBAAD,CAAxB;;AAEAuB,EAAAA,KAAK,CAACD,OAAN,GAAgB,UAASQ,CAAT,EAAY;AAC1B,WAAOC,SAAS,CAACC,MAAV,IAAoBV,OAAO,GAAGQ,CAAV,EAAaP,KAAjC,IAA0CD,OAAjD;AACD,GAFD;;AAIA,SAAO,UAASgB,CAAT,EAAY;AACjBlB,IAAAA,SAAS,GAAGkB,CAAZ,EAAexB,EAAE,GAAGwB,CAAC,CAAC5B,EAAD,CAArB,EAA2BK,EAAE,GAAGuB,CAAC,CAAC3B,EAAD,CAAjC,EAAuCK,EAAE,GAAGsB,CAAC,CAAC1B,EAAD,CAA7C,EAAmDK,GAAG,GAAGH,EAAE,KAAKC,EAAP,GAAY,CAAZ,GAAgB,OAAOA,EAAE,GAAGD,EAAZ,CAAzE,EAA0FI,GAAG,GAAGH,EAAE,KAAKC,EAAP,GAAY,CAAZ,GAAgB,OAAOA,EAAE,GAAGD,EAAZ,CAAhH,EAAiIF,CAAC,GAAGE,EAAE,GAAGD,EAAL,GAAU,CAAC,CAAX,GAAe,CAApJ;AACA,WAAOS,KAAP;AACD,GAHD;AAID;;AAED,eAAe,SAASgB,SAAT,GAAqB;AAClC,MAAIhB,KAAK,GAAGnB,SAAS,CAACK,WAAW,GAAGP,QAAH,CAAZ,CAArB;;AAEAqB,EAAAA,KAAK,CAACjB,IAAN,GAAa,YAAW;AACtB,WAAOA,IAAI,CAACiB,KAAD,EAAQgB,SAAS,EAAjB,CAAX;AACD,GAFD;;AAIA,SAAOpC,gBAAgB,CAACqC,KAAjB,CAAuBjB,KAAvB,EAA8BQ,SAA9B,CAAP;AACD;AAED,OAAO,SAASU,YAAT,GAAwB;AAC7B,MAAIlB,KAAK,GAAGlB,OAAO,CAACI,WAAW,EAAZ,CAAP,CAAuBoB,MAAvB,CAA8B,CAAC,GAAD,EAAM,CAAN,EAAS,EAAT,CAA9B,CAAZ;;AAEAN,EAAAA,KAAK,CAACjB,IAAN,GAAa,YAAW;AACtB,WAAOA,IAAI,CAACiB,KAAD,EAAQkB,YAAY,EAApB,CAAJ,CAA4BC,IAA5B,CAAiCnB,KAAK,CAACmB,IAAN,EAAjC,CAAP;AACD,GAFD;;AAIA,SAAOvC,gBAAgB,CAACqC,KAAjB,CAAuBjB,KAAvB,EAA8BQ,SAA9B,CAAP;AACD;AAED,OAAO,SAASY,eAAT,GAA2B;AAChC,MAAIpB,KAAK,GAAGhB,SAAS,CAACE,WAAW,EAAZ,CAArB;;AAEAc,EAAAA,KAAK,CAACjB,IAAN,GAAa,YAAW;AACtB,WAAOA,IAAI,CAACiB,KAAD,EAAQoB,eAAe,EAAvB,CAAJ,CAA+BC,QAA/B,CAAwCrB,KAAK,CAACqB,QAAN,EAAxC,CAAP;AACD,GAFD;;AAIA,SAAOzC,gBAAgB,CAACqC,KAAjB,CAAuBjB,KAAvB,EAA8BQ,SAA9B,CAAP;AACD;AAED,OAAO,SAASc,YAAT,GAAwB;AAC7B,MAAItB,KAAK,GAAGf,MAAM,CAACC,WAAW,EAAZ,CAAlB;;AAEAc,EAAAA,KAAK,CAACjB,IAAN,GAAa,YAAW;AACtB,WAAOA,IAAI,CAACiB,KAAD,EAAQsB,YAAY,EAApB,CAAJ,CAA4BC,QAA5B,CAAqCvB,KAAK,CAACuB,QAAN,EAArC,CAAP;AACD,GAFD;;AAIA,SAAO3C,gBAAgB,CAACqC,KAAjB,CAAuBjB,KAAvB,EAA8BQ,SAA9B,CAAP;AACD;AAED,OAAO,SAASgB,aAAT,GAAyB;AAC9B,SAAOF,YAAY,CAACL,KAAb,CAAmB,IAAnB,EAAyBT,SAAzB,EAAoCe,QAApC,CAA6C,GAA7C,CAAP;AACD","sourcesContent":["import {interpolate, interpolateRound, piecewise} from \"d3-interpolate\";\nimport {identity} from \"./continuous.js\";\nimport {initInterpolator} from \"./init.js\";\nimport {linearish} from \"./linear.js\";\nimport {loggish} from \"./log.js\";\nimport {copy} from \"./sequential.js\";\nimport {symlogish} from \"./symlog.js\";\nimport {powish} from \"./pow.js\";\n\nfunction transformer() {\n  var x0 = 0,\n      x1 = 0.5,\n      x2 = 1,\n      s = 1,\n      t0,\n      t1,\n      t2,\n      k10,\n      k21,\n      interpolator = identity,\n      transform,\n      clamp = false,\n      unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : (x = 0.5 + ((x = +transform(x)) - t1) * (s * x < s * t1 ? k10 : k21), interpolator(clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? ([x0, x1, x2] = _, t0 = transform(x0 = +x0), t1 = transform(x1 = +x1), t2 = transform(x2 = +x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), s = t1 < t0 ? -1 : 1, scale) : [x0, x1, x2];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  function range(interpolate) {\n    return function(_) {\n      var r0, r1, r2;\n      return arguments.length ? ([r0, r1, r2] = _, interpolator = piecewise(interpolate, [r0, r1, r2]), scale) : [interpolator(0), interpolator(0.5), interpolator(1)];\n    };\n  }\n\n  scale.range = range(interpolate);\n\n  scale.rangeRound = range(interpolateRound);\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t) {\n    transform = t, t0 = t(x0), t1 = t(x1), t2 = t(x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), s = t1 < t0 ? -1 : 1;\n    return scale;\n  };\n}\n\nexport default function diverging() {\n  var scale = linearish(transformer()(identity));\n\n  scale.copy = function() {\n    return copy(scale, diverging());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingLog() {\n  var scale = loggish(transformer()).domain([0.1, 1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, divergingLog()).base(scale.base());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingSymlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, divergingSymlog()).constant(scale.constant());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingPow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, divergingPow()).exponent(scale.exponent());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingSqrt() {\n  return divergingPow.apply(null, arguments).exponent(0.5);\n}\n"]},"metadata":{},"sourceType":"module"}