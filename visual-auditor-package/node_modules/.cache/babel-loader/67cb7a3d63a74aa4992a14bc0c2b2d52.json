{"ast":null,"code":"import { useD3 } from '../../hooks/useD3';\nimport React from 'react';\nimport * as d3 from 'd3';\n\nfunction ResponsiveChart({\n  customData\n}) {\n  // data and labels to plot\n  const data = [30, 10, 50, 20, 35, 45, 25];\n  const labels = ['1992', '1993', '1994', '1995', '1996', '1997', '1998']; // maximum width of single bar so bar doesn't look like a box\n\n  const max_bar_width = 100; // maximum height of the svg element\n  // this will include top and bottom offset\n\n  const svg_height = 600; // bg color of bars\n\n  const bar_color = '#FFCB65'; // top and bottom margins\n\n  const top_offset = 50;\n  const bottom_offset = 50;\n  /**\n   * Darked/Lighten a color\n   * Copied from https://stackoverflow.com/a/13532993/10468888\n   */\n\n  function shadeColor(color, percent) {\n    var R = parseInt(color.substring(1, 3), 16);\n    var G = parseInt(color.substring(3, 5), 16);\n    var B = parseInt(color.substring(5, 7), 16);\n    R = parseInt(R * (100 + percent) / 100);\n    G = parseInt(G * (100 + percent) / 100);\n    B = parseInt(B * (100 + percent) / 100);\n    R = R < 255 ? R : 255;\n    G = G < 255 ? G : 255;\n    B = B < 255 ? B : 255;\n    var RR = R.toString(16).length == 1 ? '0' + R.toString(16) : R.toString(16);\n    var GG = G.toString(16).length == 1 ? '0' + G.toString(16) : G.toString(16);\n    var BB = B.toString(16).length == 1 ? '0' + B.toString(16) : B.toString(16);\n    return '#' + RR + GG + BB;\n  } // append svg\n\n\n  const svg = d3.select('#chart').append('svg').attr('fill', 'red').attr('width', '100%').attr('height', svg_height); // to make graph responsive calcuate we set width 100%\n  // here we calculate width in pixels\n\n  const svg_width = svg.node().getBoundingClientRect().width; // decide bar width depending upon available space and no. of bars to plot\n\n  let bar_width = Math.round((svg_width - 60) / data.length);\n\n  if (bar_width > max_bar_width) {\n    bar_width = max_bar_width;\n  } // spacing between two bars\n  // instead of having a fixed value we set it dynamically\n\n\n  const spacing = 0.15 * bar_width; // to center align graph we move it from left to right\n  // this is applicable if there's any space left\n\n  let left_offset = Math.round((svg_width - bar_width * data.length) / 2);\n\n  if (left_offset < 0) {\n    left_offset = 0;\n  } // create scale\n\n\n  const scale = d3.scaleLinear().domain([0, Math.max(...data)]).range([0, svg_height - top_offset - bottom_offset]); // create scale for Y-Axis\n  // we could have used scale above but for Y-Axis we need domain reversed\n\n  const scale_y_axis = d3.scaleLinear().domain([Math.max(...data), 0]).range([0, svg_height - top_offset - bottom_offset]); // create tooltip element\n\n  const tooltip = d3.select('body').append('div').attr('class', 'd3-tooltip').style('position', 'absolute').style('z-index', '10').style('visibility', 'hidden').style('padding', '15px').style('background', 'rgba(0,0,0,0.6)').style('border-radius', '5px').style('color', '#fff').text('a simple tooltip'); // append rect\n\n  const rect = svg.selectAll('g').data(data).enter().append('rect').attr('fill', bar_color).attr('x', (d, i) => left_offset + bar_width * i).attr('y', d => svg_height - bottom_offset).attr('width', bar_width - spacing).on('mouseover', function (d, i) {\n    tooltip.html(`Data: ${d}`).style('visibility', 'visible');\n    d3.select(this).attr('fill', shadeColor(bar_color, -15));\n  }).on('mousemove', function () {\n    tooltip.style('top', event.pageY - 10 + 'px').style('left', event.pageX + 10 + 'px');\n  }).on('mouseout', function () {\n    tooltip.html(``).style('visibility', 'hidden');\n    d3.select(this).attr('fill', bar_color);\n  }); // append text\n\n  svg.selectAll('g').data(data).enter().append('text').attr('dominant-baseline', 'text-before-edge').attr('text-anchor', 'middle').attr('fill', '#000000').attr('x', (d, i) => left_offset + bar_width * i + bar_width / 2 - spacing / 2).attr('y', svg_height - bottom_offset + 5).attr('style', 'font-family:Verdana').text((d, i) => labels[i]); // append X-Axis\n\n  svg.append('line').attr('stroke', '#000000').attr('stroke-width', 2).attr('x1', left_offset).attr('y1', svg_height - bottom_offset).attr('x2', bar_width * data.length + left_offset - spacing).attr('y2', svg_height - bottom_offset); // appen Y-Axis\n\n  svg.append('g').attr('transform', 'translate(0,' + top_offset + ')').call(d3.axisRight(scale_y_axis));\n\n  window.onload = () => {\n    // set animation\n    rect.transition().ease(d3.easeLinear).duration(1000).attr('y', d => svg_height - bottom_offset - scale(d)).attr('height', d => scale(d));\n  };\n\n  return svg;\n}\n\n_c = ResponsiveChart;\nexport default ResponsiveChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResponsiveChart\");","map":{"version":3,"sources":["/Users/davidmunechika/Documents/Code/visual-auditor/src/components/Main/ResponsiveChart.js"],"names":["useD3","React","d3","ResponsiveChart","customData","data","labels","max_bar_width","svg_height","bar_color","top_offset","bottom_offset","shadeColor","color","percent","R","parseInt","substring","G","B","RR","toString","length","GG","BB","svg","select","append","attr","svg_width","node","getBoundingClientRect","width","bar_width","Math","round","spacing","left_offset","scale","scaleLinear","domain","max","range","scale_y_axis","tooltip","style","text","rect","selectAll","enter","d","i","on","html","event","pageY","pageX","call","axisRight","window","onload","transition","ease","easeLinear","duration"],"mappings":"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","sourcesContent":["import { useD3 } from '../../hooks/useD3';\nimport React from 'react';\nimport * as d3 from 'd3';\n\nfunction ResponsiveChart({ customData }) {\n  // data and labels to plot\n  const data = [30, 10, 50, 20, 35, 45, 25];\n  const labels = ['1992', '1993', '1994', '1995', '1996', '1997', '1998'];\n\n  // maximum width of single bar so bar doesn't look like a box\n  const max_bar_width = 100;\n\n  // maximum height of the svg element\n  // this will include top and bottom offset\n  const svg_height = 600;\n\n  // bg color of bars\n  const bar_color = '#FFCB65';\n\n  // top and bottom margins\n  const top_offset = 50;\n  const bottom_offset = 50;\n\n  /**\n   * Darked/Lighten a color\n   * Copied from https://stackoverflow.com/a/13532993/10468888\n   */\n  function shadeColor(color, percent) {\n    var R = parseInt(color.substring(1, 3), 16);\n    var G = parseInt(color.substring(3, 5), 16);\n    var B = parseInt(color.substring(5, 7), 16);\n\n    R = parseInt((R * (100 + percent)) / 100);\n    G = parseInt((G * (100 + percent)) / 100);\n    B = parseInt((B * (100 + percent)) / 100);\n\n    R = R < 255 ? R : 255;\n    G = G < 255 ? G : 255;\n    B = B < 255 ? B : 255;\n\n    var RR = R.toString(16).length == 1 ? '0' + R.toString(16) : R.toString(16);\n    var GG = G.toString(16).length == 1 ? '0' + G.toString(16) : G.toString(16);\n    var BB = B.toString(16).length == 1 ? '0' + B.toString(16) : B.toString(16);\n\n    return '#' + RR + GG + BB;\n  }\n\n  // append svg\n  const svg = d3\n    .select('#chart')\n    .append('svg')\n    .attr('fill', 'red')\n    .attr('width', '100%')\n    .attr('height', svg_height);\n\n  // to make graph responsive calcuate we set width 100%\n  // here we calculate width in pixels\n  const svg_width = svg.node().getBoundingClientRect().width;\n\n  // decide bar width depending upon available space and no. of bars to plot\n  let bar_width = Math.round((svg_width - 60) / data.length);\n  if (bar_width > max_bar_width) {\n    bar_width = max_bar_width;\n  }\n\n  // spacing between two bars\n  // instead of having a fixed value we set it dynamically\n  const spacing = 0.15 * bar_width;\n\n  // to center align graph we move it from left to right\n  // this is applicable if there's any space left\n  let left_offset = Math.round((svg_width - bar_width * data.length) / 2);\n  if (left_offset < 0) {\n    left_offset = 0;\n  }\n\n  // create scale\n  const scale = d3\n    .scaleLinear()\n    .domain([0, Math.max(...data)])\n    .range([0, svg_height - top_offset - bottom_offset]);\n\n  // create scale for Y-Axis\n  // we could have used scale above but for Y-Axis we need domain reversed\n  const scale_y_axis = d3\n    .scaleLinear()\n    .domain([Math.max(...data), 0])\n    .range([0, svg_height - top_offset - bottom_offset]);\n\n  // create tooltip element\n  const tooltip = d3\n    .select('body')\n    .append('div')\n    .attr('class', 'd3-tooltip')\n    .style('position', 'absolute')\n    .style('z-index', '10')\n    .style('visibility', 'hidden')\n    .style('padding', '15px')\n    .style('background', 'rgba(0,0,0,0.6)')\n    .style('border-radius', '5px')\n    .style('color', '#fff')\n    .text('a simple tooltip');\n\n  // append rect\n  const rect = svg\n    .selectAll('g')\n    .data(data)\n    .enter()\n    .append('rect')\n    .attr('fill', bar_color)\n    .attr('x', (d, i) => left_offset + bar_width * i)\n    .attr('y', (d) => svg_height - bottom_offset)\n    .attr('width', bar_width - spacing)\n    .on('mouseover', function (d, i) {\n      tooltip.html(`Data: ${d}`).style('visibility', 'visible');\n      d3.select(this).attr('fill', shadeColor(bar_color, -15));\n    })\n    .on('mousemove', function () {\n      tooltip\n        .style('top', event.pageY - 10 + 'px')\n        .style('left', event.pageX + 10 + 'px');\n    })\n    .on('mouseout', function () {\n      tooltip.html(``).style('visibility', 'hidden');\n      d3.select(this).attr('fill', bar_color);\n    });\n\n  // append text\n  svg\n    .selectAll('g')\n    .data(data)\n    .enter()\n    .append('text')\n    .attr('dominant-baseline', 'text-before-edge')\n    .attr('text-anchor', 'middle')\n    .attr('fill', '#000000')\n    .attr(\n      'x',\n      (d, i) => left_offset + bar_width * i + bar_width / 2 - spacing / 2\n    )\n    .attr('y', svg_height - bottom_offset + 5)\n    .attr('style', 'font-family:Verdana')\n    .text((d, i) => labels[i]);\n\n  // append X-Axis\n  svg\n    .append('line')\n    .attr('stroke', '#000000')\n    .attr('stroke-width', 2)\n    .attr('x1', left_offset)\n    .attr('y1', svg_height - bottom_offset)\n    .attr('x2', bar_width * data.length + left_offset - spacing)\n    .attr('y2', svg_height - bottom_offset);\n\n  // appen Y-Axis\n  svg\n    .append('g')\n    .attr('transform', 'translate(0,' + top_offset + ')')\n    .call(d3.axisRight(scale_y_axis));\n\n  window.onload = () => {\n    // set animation\n    rect\n      .transition()\n      .ease(d3.easeLinear)\n      .duration(1000)\n      .attr('y', (d) => svg_height - bottom_offset - scale(d))\n      .attr('height', (d) => scale(d));\n  };\n  return svg;\n}\n\nexport default ResponsiveChart;\n"]},"metadata":{},"sourceType":"module"}