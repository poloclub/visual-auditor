{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/davidmunechika/Documents/Code/visual-auditor/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"/Users/davidmunechika/Documents/Code/visual-auditor/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/davidmunechika/Documents/Code/visual-auditor/node_modules/@babel/runtime/helpers/esm/createClass\";\n// https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423\nexport var Adder = /*#__PURE__*/function () {\n  function Adder() {\n    _classCallCheck(this, Adder);\n\n    this._partials = new Float64Array(32);\n    this._n = 0;\n  }\n\n  _createClass(Adder, [{\n    key: \"add\",\n    value: function add(x) {\n      var p = this._partials;\n      var i = 0;\n\n      for (var j = 0; j < this._n && j < 32; j++) {\n        var y = p[j],\n            hi = x + y,\n            lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);\n        if (lo) p[i++] = lo;\n        x = hi;\n      }\n\n      p[i] = x;\n      this._n = i + 1;\n      return this;\n    }\n  }, {\n    key: \"valueOf\",\n    value: function valueOf() {\n      var p = this._partials;\n      var n = this._n,\n          x,\n          y,\n          lo,\n          hi = 0;\n\n      if (n > 0) {\n        hi = p[--n];\n\n        while (n > 0) {\n          x = hi;\n          y = p[--n];\n          hi = x + y;\n          lo = y - (hi - x);\n          if (lo) break;\n        }\n\n        if (n > 0 && (lo < 0 && p[n - 1] < 0 || lo > 0 && p[n - 1] > 0)) {\n          y = lo * 2;\n          x = hi + y;\n          if (y == x - hi) hi = x;\n        }\n      }\n\n      return hi;\n    }\n  }]);\n\n  return Adder;\n}();\nexport function fsum(values, valueof) {\n  var adder = new Adder();\n\n  if (valueof === undefined) {\n    var _iterator = _createForOfIteratorHelper(values),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var value = _step.value;\n\n        if (value = +value) {\n          adder.add(value);\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  } else {\n    var index = -1;\n\n    var _iterator2 = _createForOfIteratorHelper(values),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var _value = _step2.value;\n\n        if (_value = +valueof(_value, ++index, values)) {\n          adder.add(_value);\n        }\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  }\n\n  return +adder;\n}\nexport function fcumsum(values, valueof) {\n  var adder = new Adder();\n  var index = -1;\n  return Float64Array.from(values, valueof === undefined ? function (v) {\n    return adder.add(+v || 0);\n  } : function (v) {\n    return adder.add(+valueof(v, ++index, values) || 0);\n  });\n}","map":{"version":3,"sources":["/Users/davidmunechika/Documents/Code/visual-auditor/node_modules/d3-array/src/fsum.js"],"names":["Adder","_partials","Float64Array","_n","x","p","i","j","y","hi","lo","Math","abs","n","fsum","values","valueof","adder","undefined","value","add","index","fcumsum","from","v"],"mappings":"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","sourcesContent":["// https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423\nexport class Adder {\n  constructor() {\n    this._partials = new Float64Array(32);\n    this._n = 0;\n  }\n  add(x) {\n    const p = this._partials;\n    let i = 0;\n    for (let j = 0; j < this._n && j < 32; j++) {\n      const y = p[j],\n        hi = x + y,\n        lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);\n      if (lo) p[i++] = lo;\n      x = hi;\n    }\n    p[i] = x;\n    this._n = i + 1;\n    return this;\n  }\n  valueOf() {\n    const p = this._partials;\n    let n = this._n, x, y, lo, hi = 0;\n    if (n > 0) {\n      hi = p[--n];\n      while (n > 0) {\n        x = hi;\n        y = p[--n];\n        hi = x + y;\n        lo = y - (hi - x);\n        if (lo) break;\n      }\n      if (n > 0 && ((lo < 0 && p[n - 1] < 0) || (lo > 0 && p[n - 1] > 0))) {\n        y = lo * 2;\n        x = hi + y;\n        if (y == x - hi) hi = x;\n      }\n    }\n    return hi;\n  }\n}\n\nexport function fsum(values, valueof) {\n  const adder = new Adder();\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        adder.add(value);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        adder.add(value);\n      }\n    }\n  }\n  return +adder;\n}\n\nexport function fcumsum(values, valueof) {\n  const adder = new Adder();\n  let index = -1;\n  return Float64Array.from(values, valueof === undefined\n      ? v => adder.add(+v || 0)\n      : v => adder.add(+valueof(v, ++index, values) || 0)\n  );\n}\n"]},"metadata":{},"sourceType":"module"}