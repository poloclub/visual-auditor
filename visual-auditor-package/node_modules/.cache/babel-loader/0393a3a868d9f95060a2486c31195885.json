{"ast":null,"code":"import { path } from \"d3-path\";\nimport circle from \"./symbol/circle.js\";\nimport cross from \"./symbol/cross.js\";\nimport diamond from \"./symbol/diamond.js\";\nimport star from \"./symbol/star.js\";\nimport square from \"./symbol/square.js\";\nimport triangle from \"./symbol/triangle.js\";\nimport wye from \"./symbol/wye.js\";\nimport constant from \"./constant.js\";\nexport var symbols = [circle, cross, diamond, square, star, triangle, wye];\nexport default function (type, size) {\n  var context = null;\n  type = typeof type === \"function\" ? type : constant(type || circle);\n  size = typeof size === \"function\" ? size : constant(size === undefined ? 64 : +size);\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function (_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function (_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function (_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}","map":{"version":3,"sources":["/Users/davidmunechika/Documents/Code/Research/visual-auditor/node_modules/d3-shape/src/symbol.js"],"names":["path","circle","cross","diamond","star","square","triangle","wye","constant","symbols","type","size","context","undefined","symbol","buffer","apply","arguments","draw","_","length"],"mappings":"AAAA,SAAQA,IAAR,QAAmB,SAAnB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAOC,QAAP,MAAqB,eAArB;AAEA,OAAO,IAAIC,OAAO,GAAG,CACnBR,MADmB,EAEnBC,KAFmB,EAGnBC,OAHmB,EAInBE,MAJmB,EAKnBD,IALmB,EAMnBE,QANmB,EAOnBC,GAPmB,CAAd;AAUP,eAAe,UAASG,IAAT,EAAeC,IAAf,EAAqB;AAClC,MAAIC,OAAO,GAAG,IAAd;AACAF,EAAAA,IAAI,GAAG,OAAOA,IAAP,KAAgB,UAAhB,GAA6BA,IAA7B,GAAoCF,QAAQ,CAACE,IAAI,IAAIT,MAAT,CAAnD;AACAU,EAAAA,IAAI,GAAG,OAAOA,IAAP,KAAgB,UAAhB,GAA6BA,IAA7B,GAAoCH,QAAQ,CAACG,IAAI,KAAKE,SAAT,GAAqB,EAArB,GAA0B,CAACF,IAA5B,CAAnD;;AAEA,WAASG,MAAT,GAAkB;AAChB,QAAIC,MAAJ;AACA,QAAI,CAACH,OAAL,EAAcA,OAAO,GAAGG,MAAM,GAAGf,IAAI,EAAvB;AACdU,IAAAA,IAAI,CAACM,KAAL,CAAW,IAAX,EAAiBC,SAAjB,EAA4BC,IAA5B,CAAiCN,OAAjC,EAA0C,CAACD,IAAI,CAACK,KAAL,CAAW,IAAX,EAAiBC,SAAjB,CAA3C;AACA,QAAIF,MAAJ,EAAY,OAAOH,OAAO,GAAG,IAAV,EAAgBG,MAAM,GAAG,EAAT,IAAe,IAAtC;AACb;;AAEDD,EAAAA,MAAM,CAACJ,IAAP,GAAc,UAASS,CAAT,EAAY;AACxB,WAAOF,SAAS,CAACG,MAAV,IAAoBV,IAAI,GAAG,OAAOS,CAAP,KAAa,UAAb,GAA0BA,CAA1B,GAA8BX,QAAQ,CAACW,CAAD,CAA7C,EAAkDL,MAAtE,IAAgFJ,IAAvF;AACD,GAFD;;AAIAI,EAAAA,MAAM,CAACH,IAAP,GAAc,UAASQ,CAAT,EAAY;AACxB,WAAOF,SAAS,CAACG,MAAV,IAAoBT,IAAI,GAAG,OAAOQ,CAAP,KAAa,UAAb,GAA0BA,CAA1B,GAA8BX,QAAQ,CAAC,CAACW,CAAF,CAA7C,EAAmDL,MAAvE,IAAiFH,IAAxF;AACD,GAFD;;AAIAG,EAAAA,MAAM,CAACF,OAAP,GAAiB,UAASO,CAAT,EAAY;AAC3B,WAAOF,SAAS,CAACG,MAAV,IAAoBR,OAAO,GAAGO,CAAC,IAAI,IAAL,GAAY,IAAZ,GAAmBA,CAA7B,EAAgCL,MAApD,IAA8DF,OAArE;AACD,GAFD;;AAIA,SAAOE,MAAP;AACD","sourcesContent":["import {path} from \"d3-path\";\nimport circle from \"./symbol/circle.js\";\nimport cross from \"./symbol/cross.js\";\nimport diamond from \"./symbol/diamond.js\";\nimport star from \"./symbol/star.js\";\nimport square from \"./symbol/square.js\";\nimport triangle from \"./symbol/triangle.js\";\nimport wye from \"./symbol/wye.js\";\nimport constant from \"./constant.js\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function(type, size) {\n  var context = null;\n  type = typeof type === \"function\" ? type : constant(type || circle);\n  size = typeof size === \"function\" ? size : constant(size === undefined ? 64 : +size);\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n"]},"metadata":{},"sourceType":"module"}