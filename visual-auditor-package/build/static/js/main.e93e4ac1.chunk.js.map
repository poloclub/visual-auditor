{"version":3,"sources":["components/Nav/Nav.js","components/LeftDrawer/LeftDrawer.js","components/RightDrawer/RightDrawer.js","components/RightDrawer/RedGradient.png","components/RightDrawer/BlueGradient.png","hooks/useD3.js","components/Main/SliceBarChart.js","components/Main/ForceLayout.js","components/Main/GraphLayout.js","components/Main/Main.js","App.js","index.js"],"names":["Nav","view","setView","algorithm","setAlgorithm","className","FormControl","sx","s","minWidth","paddingRight","style","marginTop","InputLabel","Select","value","label","onChange","event","target","MenuItem","LeftDrawer","numFeatures","setNumFeatures","sampleSize","setSampleSize","metric","setMetric","sortBy","setSortBy","overperforming","setOverperforming","features","setFeatures","radius","setRadius","edgeFiltering","setEdgeFiltering","edgeForce","setEdgeForce","cursorMode","setCursorMode","showConvexHull","setShowConvexHull","React","useState","switchDisabled","setSwitchDisabled","handleCheckboxChange","checked","filter","feature","open","setOpen","Drawer","variant","anchor","display","xs","sm","boxSizing","width","onClick","position","right","top","opacity","cursor","Slider","defaultValue","valueLabelDisplay","step","marks","min","max","size","m","id","labelId","Switch","setTimeout","disabled","FormGroup","marginLeft","FormControlLabel","control","Checkbox","defaultChecked","Divider","padding","Button","left","RightDrawer","details","convexHull","handleDrawerClose","flexShrink","paddingTop","lineHeight","slice","split","map","toFixed","similarSlices","length","useD3","renderChartFn","dependencies","ref","useRef","useEffect","d3","current","SliceBarChart","data","model","setDetails","selected","setSelected","doneAnimating","setDoneAnimating","svg","height","margin","div","x","domain","d","rangeRound","y1","select","call","g","attr","tickSizeOuter","selectAll","ticks","remove","append","text","join","Math","abs","on","this","transition","duration","html","round","bandwidth","delay","i","background","marginRight","memo","ForceLayout","degree","hulls","Array","from","keys","groupings","forEach","obj","classifiers","str","indexOf","temp","substring","push","includes","topGroupings","Object","key","sort","a","b","xAxis","yAxis","xAxisGrid","tickSizeInner","yAxisGrid","xCenter","yCenter","nodes","log","sqrt","category","xFeature","yFeature","bubbles","force","strength","y","__data__","colors","vertices","j","hull","line","curve","transform","GraphLayout","radiusType","matches","reverseLogLossSamples","reverseCommonSamples","commonSamples","logLossSamples","xTickDistance","yTickDistance","links","count","source","sliceSource","sliceTarget","graph","clamp","lo","hi","link","classed","node","undefined","fx","click","simulation","pow","drag","fy","alpha","restart","overflow","borderRadius","Main","reversedata","modelMetric","values","reverselogloss","logloss","metricArray","reverseMetricArray","filteredData","sliceStr","window","onbeforeunload","scrollTo","App","setDetailsCallback","useCallback","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e93e4ac1.chunk.js","sourcesContent":["import React from 'react';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport './Nav.css';\n\nconst Nav = ({ view, setView, algorithm, setAlgorithm }) => {\n  const handleViewChange = (event) => {\n    setView(event.target.value);\n  };\n\n  return (\n    <div className='nav-container'>\n      <FormControl sx={{ s: 1, minWidth: 175, paddingRight: 1}} style={{marginTop: '1rem'}}>\n        <InputLabel>View:</InputLabel>\n        <Select value={view} label='View' onChange={handleViewChange}>\n          <MenuItem value={'bar'}>Bar Chart Layout</MenuItem>\n          <MenuItem value={'force'}>Force Layout</MenuItem>\n          <MenuItem value={'graph'}>Graph Layout</MenuItem>\n        </Select>\n      </FormControl>\n    </div>\n  );\n};\n\nexport default Nav;\n","import React from 'react';\nimport Drawer from '@mui/material/Drawer';\nimport Button from '@mui/material/Button';\nimport Slider from '@mui/material/Slider';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Select from '@mui/material/Select';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Divider from '@mui/material/Divider';\nimport Switch from '@mui/material/Switch';\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport './LeftDrawer.css';\n\nconst LeftDrawer = ({\n  numFeatures,\n  setNumFeatures,\n  sampleSize,\n  setSampleSize,\n  metric,\n  setMetric,\n  sortBy,\n  setSortBy,\n  overperforming,\n  setOverperforming,\n  features,\n  setFeatures,\n  view,\n  radius,\n  setRadius,\n  edgeFiltering,\n  setEdgeFiltering,\n  edgeForce,\n  setEdgeForce,\n  cursorMode,\n  setCursorMode,\n  showConvexHull,\n  setShowConvexHull,\n}) => {\n  const [switchDisabled, setSwitchDisabled] = React.useState(false);\n  const handleFeaturesChange = (event) => {\n    setNumFeatures(event.target.value);\n    setShowConvexHull(false);\n  };\n\n  const handleSizeChange = (event) => {\n    setSampleSize(event.target.value);\n    setShowConvexHull(false);\n  };\n\n  const handleMetricChange = (event) => {\n    setMetric(event.target.value);\n    setShowConvexHull(false);\n  };\n\n  const handleSortByChange = (event) => {\n    setSortBy(event.target.value);\n    setShowConvexHull(false);\n  };\n\n  const handleSwitchChange = (event) => {\n    setOverperforming(event.target.checked);\n    setShowConvexHull(false);\n  };\n\n  const handleCheckboxChange = (event, label) => {\n    if (event.target.checked) {\n      setFeatures([...features, label]);\n    } else {\n      setFeatures(features.filter((feature) => feature !== label));\n    }\n    setShowConvexHull(false);\n  };\n\n  const handleReset = (event) => {\n    setNumFeatures(2);\n    setSampleSize(0);\n    setMetric('Log Loss');\n    setSortBy('metric');\n    setOverperforming(false);\n    setEdgeFiltering(300);\n    setEdgeForce(1);\n    setShowConvexHull(false);\n  };\n\n  const [open, setOpen] = React.useState(true);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    open ? (\n    <Drawer\n      variant=\"persistent\"\n      anchor=\"left\"\n      open={open}\n      sx={{\n        display: { xs: 'none', sm: 'block' },\n        '& .MuiDrawer-paper': { boxSizing: 'border-box', width: '15rem' },\n      }}\n    >\n        <div className='left-container'>\n          <ArrowBackIosIcon onClick={handleDrawerClose} style={{position: 'relative', right: '-5rem', top: '1rem', opacity: '0.75', cursor: 'pointer'}}/>\n          <h1>Slice Filters</h1>\n          <h2>Number of Features:</h2>\n          <Slider\n            aria-label='Number of Features'\n            defaultValue={2}\n            value={numFeatures}\n            valueLabelDisplay='auto'\n            step={1}\n            marks\n            min={1}\n            max={4}\n            size='small'\n            onChange={handleFeaturesChange}\n          />\n          <h2>Minimum Slice Size:</h2>\n          <Slider\n            size='small'\n            defaultValue={100}\n            aria-label='Small'\n            value={sampleSize}\n            valueLabelDisplay='auto'\n            min={0}\n            max={250}\n            step={10}\n            onChange={handleSizeChange}\n          />\n          {view === 'graph' && (\n            <>\n              <h2>Edge Filtering:</h2>\n              <Slider\n                aria-label='Edge Filtering'\n                defaultValue={300}\n                value={edgeFiltering}\n                valueLabelDisplay='auto'\n                step={10}\n                min={0}\n                max={1000}\n                size='small'\n                onChange={(event) => {\n                  setEdgeFiltering(event.target.value);\n                  setShowConvexHull(false);\n                }}\n              />\n              <h2>Edge Force Strength:</h2>\n              <Slider\n                aria-label='Edge Force Strength'\n                defaultValue={1}\n                value={edgeForce}\n                valueLabelDisplay='auto'\n                step={0.01}\n                min={0}\n                max={5}\n                size='small'\n                onChange={(event) => {\n                  setEdgeForce(event.target.value);\n                  setShowConvexHull(false);\n                }}\n              />\n              <h2>Cursor Mode:</h2>\n              <FormControl sx={{ s: 1, minWidth: 175 }}>\n                <InputLabel>Mode:</InputLabel>\n                <Select\n                  value={cursorMode}\n                  label='Mode'\n                  onChange={(event) => {\n                    setCursorMode(event.target.value);\n                    setShowConvexHull(false);\n                  }}\n                >\n                  <MenuItem value={'drag'}>Drag</MenuItem>\n                  <MenuItem value={'select'}>Select</MenuItem>\n                </Select>\n              </FormControl>\n            </>\n          )}\n          {/* <h2>Fairness Metric:</h2>\n          <FormControl sx={{ m: 1, minWidth: 175 }}>\n            <InputLabel id='demo-simple-select-helper-label'>Metric</InputLabel>\n            <Select\n              labelId='demo-simple-select-helper-label'\n              id='demo-simple-select-helper'\n              value={metric}\n              label='Metric'\n              onChange={handleMetricChange}\n            >\n              <MenuItem value={'Log Loss'}>Log Loss</MenuItem>\n              <MenuItem value={'Accuracy'}>Accuracy</MenuItem>\n              <MenuItem value={'Precision'}>Precision</MenuItem>\n              <MenuItem value={'Recall'}>Recall</MenuItem>\n              <MenuItem value={'F1'}>F1</MenuItem>\n            </Select>\n          </FormControl> */}\n          {view === 'bar' ? (\n            <>\n              <h2>Order By:</h2>\n              <FormControl sx={{ m: 1, minWidth: 175 }}>\n                <InputLabel id='demo-simple-select-helper-label'>\n                  Order By:\n                </InputLabel>\n                <Select\n                  labelId='demo-simple-select-helper-label'\n                  id='demo-simple-select-helper'\n                  value={sortBy}\n                  label='Order By'\n                  onChange={handleSortByChange}\n                >\n                  <MenuItem value={'metric'}>{metric}</MenuItem>\n                  <MenuItem value={'size'}>Sample Size</MenuItem>\n                </Select>\n              </FormControl>\n            </>\n          ) : (\n            <>\n              <h2>Radius Function:</h2>\n              <FormControl sx={{ s: 1, minWidth: 175 }}>\n                <InputLabel>Radius:</InputLabel>\n                <Select\n                  value={radius}\n                  label='Radius'\n                  onChange={(event) => {\n                    setRadius(event.target.value);\n                    setShowConvexHull(false);\n                  }}\n                >\n                  <MenuItem value={'log'}>Log</MenuItem>\n                  <MenuItem value={'sqrt'}>Square Root</MenuItem>\n                </Select>\n              </FormControl>\n              <h2>Show Convex Hull:</h2>\n              <Switch\n                checked={showConvexHull}\n                onChange={(event) => {\n                  if (event.target.checked) {\n                    setSwitchDisabled(true);\n                    setTimeout(() => {\n                      setSwitchDisabled(false);\n                    }, 4000);\n                  }\n                  setShowConvexHull(event.target.checked);\n                }}\n                label='Show Convex Hull'\n                className='switch'\n                disabled={switchDisabled}\n              />\n            </>\n          )}\n          <h2>Overperforming Slices:</h2>\n          <Switch\n            checked={overperforming}\n            onChange={handleSwitchChange}\n            label='Overperforming Slices'\n          />\n          <h2>Select Features:</h2>\n          <FormGroup style={{ marginLeft: '1rem' }}>\n            <FormControlLabel\n              control={<Checkbox defaultChecked />}\n              label='Age'\n              onChange={(event) => handleCheckboxChange(event, 'Age')}\n            />\n            <FormControlLabel\n              control={<Checkbox defaultChecked />}\n              label='Workclass'\n              onChange={(event) => handleCheckboxChange(event, 'Workclass')}\n            />\n            <FormControlLabel\n              control={<Checkbox defaultChecked />}\n              label='Education'\n              onChange={(event) => handleCheckboxChange(event, 'Education')}\n            />\n            <FormControlLabel\n              control={<Checkbox defaultChecked />}\n              label='Education-Num'\n              onChange={(event) => handleCheckboxChange(event, 'Education-Num')}\n            />\n            <FormControlLabel\n              control={<Checkbox defaultChecked />}\n              label='Marital Status'\n              onChange={(event) => handleCheckboxChange(event, 'Marital Status')}\n            />\n            <FormControlLabel\n              control={<Checkbox defaultChecked />}\n              label='Occupation'\n              onChange={(event) => handleCheckboxChange(event, 'Occupation')}\n            />\n            <FormControlLabel\n              control={<Checkbox defaultChecked />}\n              label='Relationship'\n              onChange={(event) => handleCheckboxChange(event, 'Relationship')}\n            />\n            <FormControlLabel\n              control={<Checkbox defaultChecked />}\n              label='Race'\n              onChange={(event) => handleCheckboxChange(event, 'Race')}\n            />\n            <FormControlLabel\n              control={<Checkbox defaultChecked />}\n              label='Sex'\n              onChange={(event) => handleCheckboxChange(event, 'Sex')}\n            />\n            <FormControlLabel\n              control={<Checkbox defaultChecked />}\n              label='Capital Gain'\n              onChange={(event) => handleCheckboxChange(event, 'Capital Gain')}\n            />\n            <FormControlLabel\n              control={<Checkbox defaultChecked />}\n              label='Capital Loss'\n              onChange={(event) => handleCheckboxChange(event, 'Capital Loss')}\n            />\n            <FormControlLabel\n              control={<Checkbox defaultChecked />}\n              label='Hours Per Week'\n              onChange={(event) => handleCheckboxChange(event, 'Hours Per Week')}\n            />\n            <FormControlLabel\n              control={<Checkbox defaultChecked />}\n              label='Country'\n              onChange={(event) => handleCheckboxChange(event, 'Country')}\n            />\n          </FormGroup>\n          <Divider style={{ padding: '1rem' }} />\n          <Button\n            variant='outlined'\n            onClick={handleReset}\n            style={{ marginTop: '1rem' }}\n          >\n            Reset\n          </Button>\n      </div>\n      </Drawer>)\n      : <ArrowForwardIosIcon onClick={handleDrawerOpen} style={{position: 'absolute', left: '2rem', top: '2rem', cursor: 'pointer', opacity: '0.75'}}>Open</ArrowForwardIosIcon>\n  );\n};\n\nexport default LeftDrawer;\n","import React from 'react';\nimport Drawer from '@mui/material/Drawer';\nimport './RightDrawer.css';\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport RedGradient from './RedGradient.png';\nimport BlueGradient from './BlueGradient.png';\n\nconst RightDrawer = ({ details, metric, overperforming, view, convexHull }) => {\n  const [open, setOpen] = React.useState(true);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    open ? (\n    <Drawer\n      sx={{\n        width: '15rem',\n        flexShrink: 0,\n        '& .MuiDrawer-paper': {\n          width: '15rem',\n          boxSizing: 'border-box',\n        },\n      }}\n      variant='persistent'\n      anchor='right'\n      open={open}\n    >\n      {' '}\n      {view === 'bar' ? (\n          <div className='right-container'>\n            <ArrowForwardIosIcon onClick={handleDrawerClose} style={{position: 'relative', left: '-5rem', top: '1rem', opacity: '0.75', cursor: 'pointer'}}/>\n            <h1>Legend</h1>\n            <div style={{ paddingTop: '0.25rem', lineHeight: '0.5rem' }}>\n              <p>\n                <strong>Bar Color:</strong>\n              </p>\n              <p>Performance</p>\n            </div>\n            {/* <img\n              src={overperforming ? BlueGradient : RedGradient}\n              alt='Gradient'\n              style={{\n                width: '13rem',\n                padding: '0',\n                margin: '0',\n                paddingLeft: '0.9rem',\n              }}\n            /> */}\n          </div>\n        ) : (\n            <div className='right-container'>\n            <ArrowForwardIosIcon onClick={handleDrawerClose} style={{position: 'relative', left: '-5rem', top: '1rem', opacity: '0.75', cursor: 'pointer'}}/>\n            <h1>Legend</h1>\n            <div style={{ paddingTop: '0.25rem', lineHeight: '0.5rem' }}>\n              <p>\n                <strong>Node Color:</strong>\n              </p>\n              <p>Performance</p>\n            </div>\n            <div style={{ paddingTop: '0.25rem', lineHeight: '0.5rem' }}>\n              <p>\n                <strong>Node Size:</strong>\n              </p>\n              <p>Slice Sample Size</p>\n            </div>\n            {view === 'graph' && (\n              <div style={{ paddingTop: '0.25rem', lineHeight: '0.5rem' }}>\n                <p>\n                  <strong>Graph Edges:</strong>\n                </p>\n                <p>Overlapping Samples</p>\n              </div>\n            )}\n            {convexHull && (\n              <div style={{ paddingTop: '0.25rem', lineHeight: '0.5rem' }}>\n                <p>\n                  <strong>Convex Hull:</strong>\n                </p>\n                <p>Same Features</p>\n              </div>\n            )}\n          </div>\n        )}\n        {details === null ? (\n          <div className='right-container'>\n            <h1>Selected Slice</h1>\n            <p className='thin'>Click on a slice to view the slice details</p>\n          </div>\n        ) : (\n          <div className='right-container'>\n            <h1>Selected Slice</h1>\n            <div style={{ paddingTop: '0.25rem', lineHeight: '0.5rem' }}>\n              <p>\n                <strong>Slice Definition:</strong>\n              </p>\n              {details.slice.split(', ').map((feature) => {\n                return <p>{feature}</p>;\n              })}\n            </div>\n            <div style={{ paddingTop: '0.25rem', lineHeight: '0.5rem' }}>\n              <p>\n                <strong>Slice Size:</strong>\n              </p>\n              <p> {details?.size} samples</p>\n            </div>\n            <div style={{ paddingTop: '0.25rem', lineHeight: '0.5rem' }}>\n              <p>\n                <strong>Slice {metric}:</strong>\n              </p>\n              <p>{details?.metric?.toFixed(3)}</p>\n            </div>\n            {details?.similarSlices?.length > 0 ? (\n              <div style={{ paddingTop: '0.25rem', lineHeight: '1.25rem' }}>\n                <p>\n                  <strong>Similar Slices:</strong>\n                </p>\n                <ul className='similar-slices-list'>\n                  {details?.similarSlices.map((slice) => (\n                    <li className='similar-slice'>{slice}</li>\n                  ))}\n                </ul>\n              </div>\n            ) : null}\n        </div>\n      )}\n      </Drawer>) :\n      <ArrowBackIosIcon onClick={handleDrawerOpen} style={{position: 'absolute', right: '2rem', top: '2rem', cursor: 'pointer', opacity: '0.75'}}>Open</ArrowBackIosIcon>\n  );\n};\n\nexport default RightDrawer;\n","export default __webpack_public_path__ + \"static/media/RedGradient.fcc885e6.png\";","export default __webpack_public_path__ + \"static/media/BlueGradient.64b1fe13.png\";","import React from 'react';\nimport * as d3 from 'd3';\n\nexport const useD3 = (renderChartFn, dependencies) => {\n  const ref = React.useRef();\n\n  React.useEffect(() => {\n    renderChartFn(d3.select(ref.current));\n    return () => {};\n  }, dependencies);\n  return ref;\n};\n","import { useD3 } from '../../hooks/useD3';\nimport React, { memo } from 'react';\nimport * as d3 from 'd3';\n\nfunction SliceBarChart({\n  data,\n  model,\n  max,\n  overperforming,\n  metric,\n  setDetails,\n}) {\n  const [selected, setSelected] = React.useState(null);\n  const [doneAnimating, setDoneAnimating] = React.useState(false);\n  React.useEffect(() => {\n    setDoneAnimating(false);\n  }, [data]);\n\n  const ref = useD3(\n    (svg) => {\n      const height = 600;\n      const width = 875;\n      const margin = { top: 60, right: 30, bottom: 50, left: 90 };\n\n      let div = d3\n        .select('.tooltip')\n        .style('opacity', 0)\n        .style('width', '200px')\n        .style('height', '150px')\n        .style('padding', '1rem 0.75rem')\n        .style('border-radius', '20px');\n\n      const x = d3\n        .scaleBand()\n        .domain(data.map((d) => d.slice))\n        .rangeRound([margin.left, width - margin.right])\n        .padding(0.1);\n\n      const y1 = d3\n        .scaleLinear()\n        .domain([0, max])\n        .rangeRound([height - margin.bottom, margin.top]);\n\n      const xAxis = (g) =>\n        g\n          .attr('transform', `translate(0,${height - margin.bottom})`)\n          .call(d3.axisBottom(x).tickSizeOuter(0))\n          .selectAll('text')\n          .attr('transform', 'translate(-10,0)rotate(-45)')\n          .style('text-anchor', 'end');\n\n      const y1Axis = (g) =>\n        g\n          .attr('transform', `translate(${margin.left},0)`)\n          .style('color', 'steelblue')\n          .call(d3.axisLeft(y1).ticks(null, 's'))\n          .call((g) => g.select('.domain').remove())\n          .call((g) =>\n            g\n              .append('text')\n              .attr('x', -margin.left)\n              .attr('y', 10)\n              .attr('fill', 'currentColor')\n              .attr('text-anchor', 'start')\n              .text(data.y1)\n          );\n\n      svg.select('.x-axis').call(xAxis);\n      svg.select('.y-axis').call(y1Axis);\n\n      svg\n        .select('.plot-area')\n        .selectAll('.bar')\n        .data(data)\n        .join('rect')\n        .attr('class', 'bar')\n        .attr(\"style\", (d) => {\n          if (d.slice === selected) {\n            return \"outline: 3px solid #FFD600;\"\n          }\n        })\n        .style('fill', (d) => {\n          // if (d.slice === selected) {\n          //   return d3.interpolateGreys(0.5);\n          // }\n          if (overperforming)\n            return d3.interpolateBlues(Math.abs((d.metric - model) / model));\n          return d3.interpolateReds(Math.abs((d.metric - model) / model));\n        })\n        .on('mouseover', function (event, d) {\n          d3.select(this).style('opacity', '0.7').style('cursor', 'pointer');\n          div\n            .transition()\n            .duration(200)\n            .style('opacity', 0.9)\n            .style('left', width / 2 + 'px')\n            .style('top', height / 4 + 'px');\n          div.html(\n            '<strong>Slice Description: </strong>' +\n              '<br><div style={{margin: \"1rem\"}}> </div>' +\n              d.slice +\n              '<br>' +\n              '<strong>Size: </strong>' +\n              '<br>' +\n              d.size +\n              ' samples' +\n              '<br>' +\n              '<strong>Metric: </strong>' +\n              '<br>' +\n              d.metric.toFixed(2) +\n              '<br>' +\n              `(${Math.round(((d.metric - model) / model) * 100)}% difference)`\n          );\n        })\n        .on('mouseout', function (d) {\n          d3.select(this).style('opacity', '1');\n          div\n            .transition()\n            .style('opacity', 0)\n            .style('left', width + 'px')\n            .style('top', height + 'px');\n        })\n        .on('click', function (event, d) {\n          setSelected(d.slice);\n          setDetails({\n            slice: d.slice,\n            size: d.size,\n            metric: d.metric,\n            similarSlices: [],\n          });\n        })\n        .attr('x', (d) => x(d.slice))\n        .attr('width', x.bandwidth())\n        .attr('y', (d) => y1(0) - margin.bottom)\n        .attr('height', (d) => height - y1(0));\n\n      // Animation\n      if (!doneAnimating) {\n        svg\n          .selectAll('rect')\n          .transition()\n          .duration(800)\n          .attr('y', function (d) {\n            return y1(d.metric) - margin.bottom;\n          })\n          .attr('height', function (d) {\n            return height - y1(d.metric);\n          })\n          .delay(function (d, i) {\n            return i * 100;\n          });\n        setDoneAnimating(true);\n      } else {\n        svg\n          .selectAll('rect')\n          .attr('y', function (d) {\n            return y1(d.metric) - margin.bottom;\n          })\n          .attr('height', function (d) {\n            return height - y1(d.metric);\n          });\n      }\n\n      svg.selectAll('.line').remove();\n      svg.selectAll('.label').remove();\n\n      svg\n        .append('svg:line')\n        .attr('class', 'line')\n        .attr('x1', 60)\n        .attr('x2', width)\n        .attr('y1', y1(model))\n        .attr('y2', y1(model))\n        .style('stroke', '#e6e6e6');\n      svg\n        .append('text')\n        .attr('class', 'label')\n        .text('Model')\n        .attr('x', 0)\n        .attr('y', y1(model) + 5)\n        .style('fill', 'gray');\n      svg\n        .append('text')\n        .attr('class', 'label')\n        .text(metric)\n        .attr('x', 0)\n        .attr('y', y1(model) + 25)\n        .style('fill', 'gray');\n    },\n    [data, metric, selected]\n  );\n\n  return (\n    <div style={{width: '100%'}}>\n      <div\n        className='tooltip'\n        style={{ position: 'absolute', background: 'lightgray' }}\n      ></div>\n      <svg\n        ref={ref}\n        style={{\n          height: 700,\n          width: 875,\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          display: 'block',\n        }}\n      >\n        <g className='plot-area' />\n        <g className='x-axis' />\n        <g className='y-axis' />\n        <g className='label' />\n      </svg>\n    </div>\n  );\n}\n\nexport default memo(SliceBarChart);","import { useD3 } from '../../hooks/useD3';\nimport React, { memo } from 'react';\nimport * as d3 from 'd3';\nimport './ForceLayout.css';\n\nfunction ForceLayout({\n  data,\n  degree,\n  view,\n  metric,\n  model,\n  overperforming,\n  setDetails,\n  radius,\n  setShowConvexHull,\n}) {\n  const margin = { top: 20, right: 30, bottom: 70, left: 85 };\n  const width = 800;\n  const height = 800;\n  const hulls = Array.from(Array(100).keys());\n\n  const features = [];\n  const groupings = {};\n\n  data.forEach((obj) => {\n    obj.classifiers = [];\n    let str = obj.slice;\n    while (str.indexOf(':') !== -1) {\n      let temp = str.substring(0, str.indexOf(':'));\n      obj.classifiers.push(temp);\n      if (!features.includes(temp)) features.push(temp);\n      if (degree === obj.classifiers.length) {\n        if (groupings[obj.classifiers.join(', ')])\n          groupings[obj.classifiers.join(', ')]++;\n        else groupings[obj.classifiers.join(', ')] = 1;\n      }\n      if (str.indexOf(',') !== -1) {\n        str = str.substring(str.indexOf(',') + 2);\n      } else {\n        str = '';\n      }\n    }\n  });\n\n  const groupingsArray = Object.keys(groupings)\n    .map((key) => [key, groupings[key]])\n    .sort((a, b) => b[1] - a[1]);\n\n  const topGroupings = groupingsArray.slice(0, 15);\n\n  const x = d3\n    .scaleBand()\n    .domain(features)\n    .rangeRound([margin.left, width - margin.right])\n    .padding(0.1);\n\n  const xAxis = (g) =>\n    g\n      .attr('transform', `translate(0,${height - margin.bottom})`)\n      .call(d3.axisBottom(x).tickSizeOuter(0))\n      .selectAll('text')\n      .attr('transform', 'translate(-10,0)rotate(-45)')\n      .style('text-anchor', 'end');\n\n  const yAxis = (g) =>\n    g\n      .attr('transform', `translate(${margin.left},${30 - margin.bottom})`)\n      .call(d3.axisLeft(x).tickSizeOuter(0))\n      .selectAll('text')\n      .style('text-anchor', 'end');\n\n  const xAxisGrid = (g) =>\n    g\n      .attr('transform', `translate(0,${height - margin.bottom})`)\n      .call(\n        d3\n          .axisBottom(x)\n          .tickSizeOuter(0)\n          .tickSizeInner(-height - margin.top + 2 * margin.bottom)\n      )\n      .style('opacity', 0.1)\n      .selectAll('text')\n      .style('display', 'none');\n\n  const yAxisGrid = (g) =>\n    g\n      .attr('transform', `translate(${margin.left},${30 - margin.bottom})`)\n      .call(\n        d3\n          .axisLeft(x)\n          .tickSizeOuter(0)\n          .tickSizeInner(-width - margin.right + 2 * margin.left)\n      )\n      .style('opacity', 0.1)\n      .selectAll('text')\n      .style('display', 'none');\n\n  const ref = useD3(\n    (svg) => {\n      let convexHullShowing = false;\n      d3.select('.hull').remove();\n      let div = d3\n        .select('.tooltip')\n        .style('opacity', 0)\n        .style('width', '200px')\n        .style('height', '150px')\n        .style('padding', '1rem 0.5rem 0 0.5rem')\n        .style('border-radius', '20px');\n      const xCenter = [];\n      const yCenter = [];\n      for (let i = 0; i < features.length; i++) {\n        xCenter.push(((width - 150) / features.length) * i + 100);\n        yCenter.push(((height - 175) / features.length) * i - 100);\n      }\n      const nodes = data.map((obj) => {\n        return {\n          radius: radius === 'log' ? Math.log(obj.size) : Math.sqrt(obj.size),\n          category: obj.degree,\n          xFeature: obj.classifiers[0],\n          yFeature: obj.classifiers[1] ?? obj.classifiers[0],\n          slice: obj.slice,\n          size: obj.size,\n          metric: obj.metric,\n        };\n      });\n\n      const simulation = d3\n        .forceSimulation(nodes)\n        .force('charge', d3.forceManyBody().strength(-5))\n        .force(\n          'x',\n          d3.forceX().x(function (d) {\n            return xCenter[features.indexOf(d.xFeature)] - 20;\n          })\n        )\n        .force(\n          'y',\n          d3.forceY().y(function (d) {\n            if (degree > 1) {\n              return yCenter[features.indexOf(d.yFeature)];\n            } else {\n              return height / 4;\n            }\n          })\n        )\n        .force(\n          'collision',\n          d3.forceCollide().radius(function (d) {\n            return d.radius;\n          })\n        )\n        .on('tick', ticked);\n\n      let bubbles = d3\n        .select('.g')\n        .selectAll('circle')\n        .data(nodes)\n        .join('circle')\n        .attr('class', 'node')\n        .attr('r', function (d) {\n          return d.radius;\n        })\n        .style('fill', function (d) {\n          if (overperforming)\n            return d3.interpolateBlues(Math.abs((d.metric - model) / model));\n          return d3.interpolateReds(Math.abs((d.metric - model) / model));\n        })\n        .style('opacity', function (d) {\n          return '1';\n        });\n      function ticked() {\n        bubbles\n          .attr('cx', function (d) {\n            return d.x;\n          })\n          .attr('cy', function (d) {\n            return d.y;\n          })\n          .on('mouseover', function (event, d) {\n            d3.select(this)\n              .attr('r', d.radius * 1.1)\n              .style('opacity', '0.7')\n              .style('cursor', 'pointer');\n            div\n              .transition()\n              .duration(200)\n              .style('opacity', 0.9)\n              .style(\n                'left',\n                (d.x + width / 10) + 'px'\n              )\n              .style('top', height / 5 + d.y + 'px');\n            div.html(\n              '<strong>Slice Description: </strong>' +\n                '<br><div style={{margin: \"1rem\"}}> </div>' +\n                d.slice +\n                '<br>' +\n                '<strong>Size: </strong>' +\n                '<br>' +\n                d.size +\n                ' samples' +\n                '<br>' +\n                '<strong>' +\n                metric +\n                ': ' +\n                '</strong>' +\n                '<br>' +\n                d.metric.toFixed(2) +\n                '<br>' +\n                `(${Math.round(\n                  ((d.metric - model) / model) * 100\n                )}% difference)`\n            );\n          })\n          .on('mouseout', function (event, d) {\n            d3.select(this).attr('r', d.radius).style('opacity', '1');\n            div\n              .transition()\n              .style('opacity', 0)\n              .style('left', Math.min(Math.max(200, d.x), width - 200) + 100 + 'px')\n              .style('top', Math.min(height - 200, Math.max(0, d.y)) + 'px');\n          })\n          .on('click', function (event, d) {\n            bubbles.style('fill', function (d) {\n              if (event.target.__data__ === d) {\n                return \"#FFD600\"\n              }\n              if (overperforming)\n                return d3.interpolateBlues(\n                  Math.abs((d.metric - model) / model)\n                );\n              return d3.interpolateReds(Math.abs((d.metric - model) / model));\n            });\n            setDetails({\n              slice: d.slice,\n              size: d.size,\n              metric: d.metric,\n              similarSlices: [],\n            });\n          });\n      }\n\n      const convexHull = (g, opacity) => {\n        const colors = ['gray', 'green', 'yellow', 'black', 'purple'];\n        let vertices = [];\n\n        for (let i = 0; i < topGroupings.length; i++) {\n          vertices = [];\n          for (let j = 0; j < nodes.length; j++) {\n            if (\n              nodes[j].xFeature === topGroupings[i][0].split(', ')[0] &&\n              (degree < 2 ||\n                nodes[j].yFeature === topGroupings[i][0].split(', ')[1])\n            ) {\n              if (degree < 2) {\n                vertices.push([nodes[j].x + 50, height / 2]);\n              } else {\n                vertices.push([nodes[j].x + 50, nodes[j].y + 200]);\n              }\n            }\n          }\n          const hull = d3.polygonHull(vertices);\n          const line = d3.line().curve(d3.curveLinearClosed);\n          if (!hull) return;\n          g.append('path')\n            .attr('class', `path${degree}`)\n            .attr('d', line(hull))\n            .attr('fill', colors[0])\n            .attr('stroke', colors[0])\n            .attr('opacity', opacity);\n        }\n      };\n\n      d3.select('.x-axis-grid').call(xAxisGrid);\n      d3.select('.y-axis-grid').call(yAxisGrid);\n      d3.select('.x-axis').call(xAxis);\n      if (degree >= 2) {\n        d3.select('.y-axis').call(yAxis).style('opacity', '1');\n      } else {\n        d3.select('.y-axis').style('opacity', '0');\n      }\n      d3.select('.switch').on('click', (event, d) => {\n        setShowConvexHull(event.target.checked);\n        convexHullShowing = event.target.checked;\n        if (convexHullShowing)\n          d3.select(`.hull`)\n            .style('opacity', '0')\n            .call(convexHull, 0.25)\n            .transition()\n            .duration(500)\n            .style('opacity', '1');\n        else {\n          d3.select(`.hull`).remove();\n          d3.selectAll(`.hull`).transition().duration(0).style('opacity', '0');\n        }\n      });\n    },\n    [data, view]\n  );\n\n  if (view !== 'force') return null;\n\n  return (\n    <div className='force'>\n      <div\n        className='tooltip'\n        style={{ position: 'absolute', background: '#e6e6e6' }}\n      ></div>\n      <svg width={width} height={height} id='force-svg' className='svg'>\n        <g id='force-g' className='g' transform='translate(50, 200)'></g>\n        <g className='x-axis' />\n        <g className='y-axis' />\n        <g className='x-axis-grid' />\n        <g className='y-axis-grid' />\n        {/* <g className='hull1' />\n        <g className='hull2' /> */}\n        {hulls.map((hull) => (\n          <g className={'hull'} key={hull} />\n        ))}\n      </svg>\n    </div>\n  );\n}\n\nexport default memo(ForceLayout);","import { useD3 } from '../../hooks/useD3';\nimport React, { memo } from 'react';\nimport * as d3 from 'd3';\nimport './GraphLayout.css';\nimport Button from '@mui/material/Button';\nimport logLossSamples from '../../data/loglosssamples.json';\nimport reverseLogLossSamples from '../../data/reverseloglosssamples.json';\nimport commonSamples from '../../data/commonSamples.json';\nimport reverseCommonSamples from '../../data/reverseCommonSamples.json';\n\nfunction GraphLayout({\n  data,\n  degree,\n  metric,\n  model,\n  overperforming,\n  radiusType,\n  edgeFiltering,\n  edgeForce,\n  setDetails,\n  cursorMode,\n  algorithm,\n  setShowConvexHull,\n}) {\n  const margin = { top: 30, right: 30, bottom: 60, left: 85 };\n  const [value, setValue] = React.useState(0);\n  const hulls = Array.from(Array(100).keys());\n  function useForceUpdate() {\n    return () => setValue((value) => value + 1); // update the state to force render\n  }\n  const forceUpdate = useForceUpdate();\n\n  const width = 800;\n  const height = 800;\n\n  const features = [];\n  const groupings = {};\n\n  let samples;\n  let matches = {};\n\n  switch (metric) {\n    case 'Log Loss':\n      if (overperforming) {\n        samples = reverseLogLossSamples;\n        matches = reverseCommonSamples;\n      } else {\n        matches = commonSamples;\n        samples = logLossSamples;\n      }\n      break;\n    default:\n      if (overperforming) samples = reverseLogLossSamples;\n      else samples = logLossSamples;\n      break;\n  }\n\n  data.forEach((obj) => {\n    obj.classifiers = [];\n    let str = obj.slice;\n    while (str.indexOf(':') !== -1) {\n      let temp = str.substring(0, str.indexOf(':'));\n      obj.classifiers.push(temp);\n      if (!features.includes(temp)) features.push(temp);\n      if (degree === obj.classifiers.length) {\n        if (groupings[obj.classifiers.join(', ')])\n          groupings[obj.classifiers.join(', ')]++;\n        else groupings[obj.classifiers.join(', ')] = 1;\n      }\n      if (str.indexOf(',') !== -1) {\n        str = str.substring(str.indexOf(',') + 2);\n      } else {\n        str = '';\n      }\n    }\n  });\n\n  const groupingsArray = Object.keys(groupings)\n    .map((key) => [key, groupings[key]])\n    .sort((a, b) => b[1] - a[1]);\n\n  const topGroupings = groupingsArray.slice(0, 15);\n\n  const xCenter = [];\n  const yCenter = [];\n\n  const xTickDistance =\n    (width - margin.left - margin.right) / (features.length + 1);\n  const yTickDistance =\n    (height - margin.top - margin.bottom) / (features.length + 2);\n\n  for (let i = 0; i < features.length; i++) {\n    xCenter.push(margin.left + (i + 1) * xTickDistance);\n    yCenter.push(2 * margin.top + (i + 1) * yTickDistance);\n  }\n\n  const x = d3\n    .scaleBand()\n    .domain(features)\n    .rangeRound([margin.left, width - margin.right])\n    .padding(0.1);\n\n  const xAxis = (g) =>\n    g\n      .attr('transform', `translate(0,${height - margin.bottom})`)\n      .call(d3.axisBottom(x).tickSizeOuter(0))\n      .selectAll('text')\n      .attr('transform', 'translate(-10,0)rotate(-45)')\n      .style('text-anchor', 'end');\n\n  const yAxis = (g) =>\n    g\n      .attr('transform', `translate(${margin.left},${30 - margin.bottom})`)\n      .call(d3.axisLeft(x).tickSizeOuter(0))\n      .selectAll('text')\n      .style('text-anchor', 'end');\n\n  const xAxisGrid = (g) =>\n    g\n      .attr('transform', `translate(0,${height - margin.bottom})`)\n      .call(\n        d3\n          .axisBottom(x)\n          .tickSizeOuter(0)\n          .tickSizeInner(-height - margin.top + 2 * margin.bottom)\n      )\n      .style('opacity', 0.1)\n      .selectAll('text')\n      .style('display', 'none');\n  const yAxisGrid = (g) =>\n    g\n      .attr('transform', `translate(${margin.left},${30 - margin.bottom})`)\n      .call(\n        d3\n          .axisLeft(x)\n          .tickSizeOuter(0)\n          .tickSizeInner(-width - margin.right + 2 * margin.left)\n      )\n      .style('opacity', 0.1)\n      .selectAll('text')\n      .style('display', 'none');\n\n  const nodes = data.map((obj) => {\n    return {\n      radius: radiusType === 'log' ? Math.log(obj.size) : Math.sqrt(obj.size),\n      category: obj.degree,\n      xFeature: obj.classifiers[0],\n      yFeature: obj.classifiers[1] ?? obj.classifiers[0],\n      slice: obj.slice,\n      size: obj.size,\n      metric: obj.metric,\n      classifiers: obj.classifiers,\n    };\n  });\n\n  function countCommonSamples(slice1, slice2) {\n    let arr1 = samples[slice1];\n    let arr2 = samples[slice2];\n    if (!arr1 || !arr2) return 0;\n    arr1 = arr1.sort((a, b) => 0.5 - Math.random()).slice(0, 2000);\n    return arr1.filter((sample) => arr2.includes(sample)).length;\n  }\n\n  let links = [];\n  let common = {};\n\n  for (let i = 0; i < nodes.length; i++) {\n    for (let j = i + 1; j < nodes.length; j++) {\n      const count = matches[nodes[i].slice + '-' + nodes[j].slice];\n      // const count = countCommonSamples(nodes[i].slice, nodes[j].slice);\n      // common[nodes[i].slice + '-' + nodes[j].slice] = count;\n      // common[nodes[j].slice + '-' + nodes[i].slice] = count;\n      if (count > edgeFiltering) {\n        links.push({\n          source: i,\n          target: j,\n          sliceSource: nodes[i].slice,\n          sliceTarget: nodes[j].slice,\n          count: count,\n        });\n      }\n    }\n  }\n\n  // console.log(JSON.stringify(common));\n\n  // const links = [];\n  // console.log(JSON.stringify(links));\n\n  const graph = {\n    nodes: nodes,\n    links: links,\n  };\n\n  function clamp(x, lo, hi) {\n    return x < lo ? lo : x > hi ? hi : x;\n  }\n\n  const ref = useD3(\n    (svg) => {\n      let convexHullShowing = false;\n      d3.select('.hull').remove();\n      svg = d3.select('.svg')\n      let link = svg\n        .selectAll('.link')\n        .attr('class', 'link')\n        .data(graph.links)\n        .join('line')\n        .classed('link', true);\n      const node = svg\n        .selectAll('.node')\n        .data(graph.nodes)\n        .join('circle')\n        .attr('r', function (d) {\n          return d.radius;\n        })\n        .style('fill', function (d) {\n          if (overperforming)\n            return d3.interpolateBlues(Math.abs((d.metric - model) / model));\n          return d3.interpolateReds(Math.abs((d.metric - model) / model));\n        })\n        .classed('node', true)\n        .classed('fixed', (d) => d.fx !== undefined)\n        .on('mouseover', function (event, d) {\n          cursorMode === 'select'\n            ? d3\n                .select(this)\n                .attr('r', d.radius)\n                .style('opacity', '0.7')\n                .style('cursor', 'pointer')\n            : d3\n                .select(this)\n                .attr('r', d.radius)\n                .style('opacity', '0.7')\n                .style('cursor', 'grab');\n          d3.select('.tooltip')\n            .transition()\n            .duration(200)\n            .style('opacity', 0.9)\n            .style(\n              'left',\n              Math.min(Math.max(200, d.x), width - 200) + 100 + 'px'\n            )\n            .style('top', Math.min(height - 200, Math.max(0, d.y)) + 'px');\n          d3.select('.tooltip').html(\n            '<strong>Slice Description: </strong>' +\n              '<br><div style={{margin: \"1rem\"}}> </div>' +\n              d.slice +\n              '<br>' +\n              '<strong>Size: </strong>' +\n              '<br>' +\n              d.size +\n              ' samples' +\n              '<br>' +\n              '<strong>' +\n              metric +\n              ': ' +\n              '</strong>' +\n              '<br>' +\n              d.metric.toFixed(2) +\n              '<br>' +\n              `(${Math.round(((d.metric - model) / model) * 100)}% difference)`\n          );\n        })\n        .on('mouseout', function (d, i) {\n          d3.select(this).attr('r', i.radius).style('opacity', '1');\n          d3.select('.tooltip')\n            .transition()\n            .style('opacity', 0)\n            .style('left', width + 'px')\n            .style('top', height + 'px');\n        })\n        .on('click', click);\n\n      const simulation = d3\n        .forceSimulation()\n        .nodes(graph.nodes)\n        .force('charge', d3.forceManyBody().strength(-5))\n        // .force('center', d3.forceCenter(width / 2, height / 2).strength(0.1))\n        .force(\n          'x',\n          d3.forceX().x(function (d) {\n            return xCenter[features.indexOf(d.xFeature)];\n          })\n        )\n        .force(\n          'y',\n          d3.forceY().y(function (d) {\n            if (degree > 1) {\n              return yCenter[features.indexOf(d.yFeature)];\n            } else {\n              return height / 2;\n            }\n          })\n        )\n        .force(\n          'link',\n          d3.forceLink(graph.links).strength((d) => {\n            return (d.count / 10000) * edgeForce;\n          })\n        )\n        .force(\n          'collision',\n          d3.forceCollide().radius(function (d) {\n            return d.radius;\n          })\n        )\n        .on('tick', tick);\n      if (cursorMode === 'drag') {\n        const drag = d3.drag().on('start', dragstart).on('drag', dragged);\n\n        node.call(drag).on('click', click);\n      }\n\n      function tick() {\n        link\n          .attr('x1', (d) =>\n            Math.max(Math.min(d.source.x, width), d.source.radius + 100)\n          )\n          .attr('y1', (d) =>\n            Math.max(Math.min(d.source.y, height - 75), d.source.radius)\n          )\n          .attr('x2', (d) =>\n            Math.max(Math.min(d.target.x, width), d.target.radius + 100)\n          )\n          .attr('y2', (d) =>\n            Math.max(Math.min(d.target.y, height - 75), d.target.radius)\n          )\n          .style('stroke-width', (d) =>\n            Math.min(\n              Math.pow(d.count / 2000, 2) * edgeForce,\n              Math.pow(d.count / 2000, 2) * 3\n            )\n          );\n        node\n          .attr('cx', (d) => Math.max(Math.min(d.x, width), d.radius + 100))\n          .attr('cy', (d) => Math.max(Math.min(d.y, height - 75), d.radius));\n      }\n\n      function click(event, d) {\n        if (cursorMode === 'select') {\n          node.style('fill', function (d) {\n            if (event.target.__data__ === d) {\n              return '#FFD600';\n            }\n            if (overperforming)\n              return d3.interpolateBlues(Math.abs((d.metric - model) / model));\n            return d3.interpolateReds(Math.abs((d.metric - model) / model));\n          });\n          setDetails({\n            slice: d.slice,\n            size: d.size,\n            metric: d.metric,\n            similarSlices: links\n              .sort((a, b) => b.count - a.count)\n              .map((link) => {\n                if (\n                  link.count > edgeFiltering &&\n                  link.sliceSource === d.slice\n                ) {\n                  return link.sliceTarget;\n                } else if (\n                  link.count > edgeFiltering &&\n                  link.sliceTarget === d.slice\n                ) {\n                  return link.sliceSource;\n                }\n                return undefined;\n              })\n              .filter((link) => link !== undefined)\n              .slice(0, 10),\n          });\n        } else {\n          delete d.fx;\n          delete d.fy;\n          d3.select(this).classed('fixed', false);\n          d3.select(this).style('fill', () => {\n            if (overperforming)\n              return d3.interpolateBlues(Math.abs((d.metric - model) / model));\n            return d3.interpolateReds(Math.abs((d.metric - model) / model));\n          });\n          simulation.alpha(1).restart();\n        }\n      }\n\n      function dragstart(event, d) {\n        d3.select(this).classed('fixed', true);\n        d3.select(this).style('fill', '#FFD600');\n        setDetails({\n          slice: d.slice,\n          size: d.size,\n          metric: d.metric,\n          similarSlices: links\n            .sort((a, b) => b.count - a.count)\n            .map((link) => {\n              if (link.count > edgeFiltering && link.sliceSource === d.slice) {\n                return link.sliceTarget;\n              } else if (\n                link.count > edgeFiltering &&\n                link.sliceTarget === d.slice\n              ) {\n                return link.sliceSource;\n              }\n              return undefined;\n            })\n            .filter((link) => link !== undefined)\n            .slice(0, 10),\n        });\n      }\n\n      function dragged(event, d) {\n        d.fx = clamp(event.x, 0, width);\n        d.fy = clamp(event.y, 0, height);\n        simulation.alpha(1).restart();\n      }\n\n      const convexHull = (g, opacity) => {\n        const colors = [\n          'gray',\n          'green',\n          'yellow',\n          'black',\n          'purple',\n          'pink',\n          'red',\n          'orange',\n          'brown',\n          'blue',\n          'cyan',\n          'magenta',\n          'lime',\n          'navy',\n          'olive',\n          'teal',\n          'violet',\n          'wheat',\n        ];\n        let vertices = [];\n\n        for (let i = 0; i < topGroupings.length; i++) {\n          vertices = [];\n          for (let j = 0; j < nodes.length; j++) {\n            if (\n              nodes[j].xFeature === topGroupings[i][0].split(', ')[0] &&\n              (degree < 2 ||\n                nodes[j].yFeature === topGroupings[i][0].split(', ')[1])\n            ) {\n              if (degree < 2) {\n                vertices.push([nodes[j].x, height / 2]);\n              } else {\n                vertices.push([nodes[j].x, nodes[j].y]);\n              }\n            }\n          }\n          const hull = d3.polygonHull(vertices);\n          const line = d3.line().curve(d3.curveLinearClosed);\n          if (!hull) return;\n          g.append('path')\n            .attr('class', `path${degree}`)\n            .attr('d', line(hull))\n            .attr('fill', colors[0])\n            .attr('stroke', colors[0])\n            .attr('opacity', opacity);\n        }\n      };\n\n      svg.select('.x-axis-grid').call(xAxisGrid);\n      svg.select('.y-axis-grid').call(yAxisGrid);\n      svg.select('.x-axis').call(xAxis);\n      if (degree >= 2) {\n        svg.select('.y-axis').call(yAxis).style('opacity', '1');\n      } else {\n        svg.select('.y-axis').style('opacity', '0');\n      }\n      d3.select('.switch').on('click', (event, d) => {\n        setShowConvexHull(event.target.checked);\n        convexHullShowing = event.target.checked;\n        if (convexHullShowing)\n          d3.select(`.hull`)\n            .style('opacity', '0')\n            .call(convexHull, 0.25)\n            .transition()\n            .duration(500)\n            .style('opacity', '1');\n        else {\n          d3.select('.hull').remove();\n          d3.selectAll('.hull').transition().duration(0).style('opacity', '0');\n        }\n      });\n    },\n    [data, value]\n  );\n\n  return (\n    <div className='graph' style={{ overflow: 'scroll'}}>\n      <div\n        className='tooltip'\n        style={{\n          position: 'absolute',\n          background: '#e6e6e6',\n          borderRadius: '0.5rem',\n          padding: '0.5rem',\n        }}\n      ></div>\n      <svg id='graph-svg' className='svg' width={width} height={height}>\n        <g id='graph-g' className='g' transform='translate(50, 200)'></g>\n        <g className='x-axis' />\n        <g className='y-axis' />\n        <g className='x-axis-grid' />\n        <g className='y-axis-grid' />\n        {hulls.map((hull) => (\n          <g className={'hull'} key={hull} />\n        ))}\n      </svg>\n      <br />\n      {/* <Button\n        variant='outlined'\n        onClick={forceUpdate}\n        style={{ margin: '1rem' }}\n      >\n        Recenter\n      </Button> */}\n    </div>\n  );\n}\n\nexport default memo(GraphLayout);","import React, { memo } from 'react';\nimport SliceBarChart from './SliceBarChart';\nimport './Main.css';\nimport ForceLayout from './ForceLayout';\nimport GraphLayout from './GraphLayout';\n\nimport logloss from '../../data/logloss.json';\nimport reverselogloss from '../../data/reverselogloss.json';\n\nconst Main = ({\n  numFeatures,\n  sampleSize,\n  metric,\n  view,\n  sortBy,\n  overperforming,\n  features,\n  radius,\n  edgeFiltering,\n  edgeForce,\n  setDetails,\n  cursorMode,\n  algorithm,\n  setShowConvexHull,\n}) => {\n  let data;\n  let reversedata;\n  let modelMetric;\n  if (overperforming) {\n    switch (metric) {\n      case 'Log Loss':\n        data = Object.values(reverselogloss['data']).map(\n          (obj) => Object.values(obj)[0]\n        );\n        reversedata = Object.values(logloss['data']).map(\n          (obj) => Object.values(obj)[0]\n        );\n        modelMetric = reverselogloss['model'];\n        break;\n      default:\n        data = Object.values(reverselogloss['data']).map(\n          (obj) => Object.values(obj)[0]\n        );\n        reversedata = Object.values(logloss['data']).map(\n          (obj) => Object.values(obj)[0]\n        );\n        modelMetric = reverselogloss['model'];\n    }\n  } else {\n    switch (metric) {\n      case 'Log Loss':\n        data = Object.values(\n          logloss['data']\n        ).map((obj) => Object.values(obj)[0]);\n        reversedata = Object.values(reverselogloss['data']).map(\n          (obj) => Object.values(obj)[0]\n        );\n        modelMetric = logloss['model']\n        break;\n      default:\n        data = Object.values(logloss['data']).map(\n          (obj) => Object.values(obj)[0]\n        );\n        reversedata = Object.values(reverselogloss['data']).map(\n          (obj) => Object.values(obj)[0]\n        );\n        modelMetric = logloss['model'];\n    }\n  }\n  const metricArray = data.map((obj) => obj.metric);\n  const reverseMetricArray = reversedata.map((obj) => obj.metric);\n  const max = Math.max(...metricArray, ...reverseMetricArray, modelMetric);\n  let filteredData = data\n    .filter((obj) => {\n      let sliceStr = obj.slice;\n      while (sliceStr.includes(':')) {\n        if (features.includes(sliceStr.substring(0, sliceStr.indexOf(':')))) {\n          return true;\n        }\n        sliceStr = sliceStr.substring(sliceStr.indexOf(':') + 1);\n      }\n      return false;\n    })\n    .filter((obj) => obj.size >= sampleSize)\n    .filter((obj) => obj.degree <= numFeatures)\n    .sort(function (a, b) {\n      if (sortBy === 'size') return b.size - a.size;\n      if (metric === 'Log Loss') {\n        if (overperforming) return a.metric - b.metric;\n        return b.metric - a.metric;\n      } else {\n        if (overperforming) return b.metric - a.metric;\n        return a.metric - b.metric;\n      }\n    });\n  if (view === 'bar') {\n    filteredData = filteredData.slice(0, 10);\n  } else {\n    filteredData = filteredData.slice(0, 100);\n  }\n  return (\n    <div className='main-container' style={{ display: 'block', margin: 'auto', width: '75%' }}>\n      {view === 'bar' ? (\n        <SliceBarChart\n          data={filteredData}\n          model={modelMetric}\n          max={max}\n          view={view}\n          overperforming={overperforming}\n          metric={metric}\n          setDetails={setDetails}\n        />\n      ) : view === 'force' ? (\n        <ForceLayout\n          data={filteredData}\n          degree={numFeatures}\n          view={view}\n          metric={metric}\n          model={modelMetric}\n          overperforming={overperforming}\n          setDetails={setDetails}\n          radius={radius}\n          setShowConvexHull={setShowConvexHull}\n        />\n      ) : (\n        <GraphLayout\n          data={filteredData}\n          degree={numFeatures}\n          metric={metric}\n          model={modelMetric}\n          overperforming={overperforming}\n          radiusType={radius}\n          edgeFiltering={edgeFiltering}\n          edgeForce={edgeForce}\n          setDetails={setDetails}\n          cursorMode={cursorMode}\n          algorithm={algorithm}\n          setShowConvexHull={setShowConvexHull}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(Main);","import React from 'react';\nimport Nav from './components/Nav/Nav';\nimport LeftDrawer from './components/LeftDrawer/LeftDrawer';\nimport RightDrawer from './components/RightDrawer/RightDrawer';\nimport Main from './components/Main/Main';\n\nwindow.onbeforeunload = function () {\n  window.scrollTo(0, 0);\n};\n\nfunction App() {\n  const [algorithm, setAlgorithm] = React.useState('slicefinder');\n  const [numFeatures, setNumFeatures] = React.useState(2);\n  const [sampleSize, setSampleSize] = React.useState(0);\n  const [metric, setMetric] = React.useState('Log Loss');\n  const [view, setView] = React.useState('bar');\n  const [sortBy, setSortBy] = React.useState('metric');\n  const [overperforming, setOverperforming] = React.useState(false);\n  const [radius, setRadius] = React.useState('log');\n  const [edgeFiltering, setEdgeFiltering] = React.useState(100);\n  const [edgeThickness, setEdgeThickness] = React.useState(1);\n  const [edgeForce, setEdgeForce] = React.useState(1);\n  const [cursorMode, setCursorMode] = React.useState('drag');\n  const [features, setFeatures] = React.useState([\n    'Age',\n    'Workclass',\n    'Education',\n    'Education-Num',\n    'Marital Status',\n    'Occupation',\n    'Relationship',\n    'Race',\n    'Sex',\n    'Capital Gain',\n    'Capital Loss',\n    'Hours Per Week',\n    'Country',\n  ]);\n  const [details, setDetails] = React.useState(null);\n  const setDetailsCallback = React.useCallback((details) => {\n    setDetails(details);\n  }, []);\n  const [showConvexHull, setShowConvexHull] = React.useState(false);\n\n  return (\n    <div className='App'>\n      <Nav\n        view={view}\n        setView={setView}\n        algorithm={algorithm}\n        setAlgorithm={setAlgorithm}\n      />\n      <LeftDrawer\n        numFeatures={numFeatures}\n        setNumFeatures={setNumFeatures}\n        sampleSize={sampleSize}\n        setSampleSize={setSampleSize}\n        metric={metric}\n        setMetric={setMetric}\n        sortBy={sortBy}\n        setSortBy={setSortBy}\n        overperforming={overperforming}\n        setOverperforming={setOverperforming}\n        features={features}\n        setFeatures={setFeatures}\n        view={view}\n        radius={radius}\n        setRadius={setRadius}\n        edgeFiltering={edgeFiltering}\n        setEdgeFiltering={setEdgeFiltering}\n        edgeForce={edgeForce}\n        setEdgeForce={setEdgeForce}\n        cursorMode={cursorMode}\n        setCursorMode={setCursorMode}\n        showConvexHull={showConvexHull}\n        setShowConvexHull={setShowConvexHull}\n      />\n      <RightDrawer\n        details={details}\n        metric={metric}\n        overperforming={overperforming}\n        view={view}\n        convexHull={showConvexHull}\n      />\n      <Main\n        numFeatures={numFeatures}\n        sampleSize={sampleSize}\n        metric={metric}\n        view={view}\n        sortBy={sortBy}\n        overperforming={overperforming}\n        features={features}\n        radius={radius}\n        edgeFiltering={edgeFiltering}\n        edgeForce={edgeForce}\n        setDetails={setDetailsCallback}\n        cursorMode={cursorMode}\n        algorithm={algorithm}\n        setShowConvexHull={setShowConvexHull}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}