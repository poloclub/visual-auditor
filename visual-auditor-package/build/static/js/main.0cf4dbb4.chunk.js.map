{"version":3,"sources":["components/Nav/Nav.js","components/LeftDrawer/ColorLegend.js","components/LeftDrawer/LeftDrawer.js","components/RightDrawer/RedGradient.png","components/RightDrawer/BlueGradient.png","hooks/useD3.js","components/Main/SliceBarChart.js","components/Main/ForceLayout.js","components/Main/GraphLayout.js","components/Main/Main.js","App.js","index.js"],"names":["Nav","view","setView","algorithm","setAlgorithm","className","FormControl","sx","s","minWidth","paddingRight","InputLabel","Select","value","label","onChange","event","target","MenuItem","ColorLegend","overperforming","nodeColor","style","fontSize","color","display","flexDirection","background","width","height","margin","position","left","top","memo","LeftDrawer","numFeatures","setNumFeatures","sampleSize","setSampleSize","setMetric","metric","sortBy","setSortBy","setOverperforming","features","setFeatures","edgeFiltering","radius","setRadius","setEdgeFiltering","edgeForce","setEdgeForce","nodeSize","cursorMode","setCursorMode","setNodeSize","setNodeColor","show","setShow","showConvexHull","setShowConvexHull","React","useState","switchDisabled","setSwitchDisabled","Drawer","variant","anchor","xs","sm","boxSizing","lineHeight","m","size","Divider","padding","Box","Slider","defaultValue","valueLabelDisplay","min","max","step","alignItems","Switch","checked","setTimeout","disabled","FormGroup","marginLeft","featuresData","sort","map","feature","FormControlLabel","control","Checkbox","defaultChecked","includes","filter","handleCheckboxChange","Button","onClick","marginTop","useD3","renderChartFn","dependencies","ref","useRef","useEffect","d3","current","SliceBarChart","data","model","accuracy","setDetails","selected","setSelected","doneAnimating","setDoneAnimating","svg","div","x","domain","d","slice","rangeRound","y1","select","call","g","attr","tickSizeOuter","selectAll","ticks","remove","append","text","join","Math","abs","on","this","transition","duration","html","toFixed","round","similarSlices","bandwidth","delay","i","right","viewBox","ForceLayout","degree","hulls","Array","from","keys","groupings","forEach","obj","classifiers","str","indexOf","temp","substring","push","length","topGroupings","Object","key","a","b","xAxis","yAxis","xAxisGrid","tickSizeInner","yAxisGrid","xCenter","yCenter","nodes","log","sqrt","category","xFeature","yFeature","bubbles","force","strength","y","clientX","clientY","__data__","convexHull","opacity","colors","vertices","j","split","hull","line","curve","id","transform","GraphLayout","radiusType","matches","reverseLogLossSamples","reverseCommonSamples","commonSamples","logLossSamples","xTickDistance","yTickDistance","links","count","source","sliceSource","sliceTarget","graph","clamp","lo","hi","link","classed","node","undefined","fx","click","simulation","pow","drag","fy","alpha","restart","overflow","borderRadius","Main","reversedata","modelMetric","modelAccuracy","values","reverselogloss","logloss","metricArray","reverseMetricArray","filteredData","sliceStr","window","onbeforeunload","scrollTo","App","setDetailsCallback","useCallback","details","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0cf4dbb4.chunk.js","sourcesContent":["import React from 'react';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport './Nav.css';\n\nconst Nav = ({ view, setView, algorithm, setAlgorithm }) => {\n  const handleViewChange = (event) => {\n    setView(event.target.value);\n  };\n\n  const handleAlgorithmChange = (event) => {\n    setAlgorithm(event.target.value);\n  };\n\n  return (\n    <div className='nav-container'>\n      {/* <h1>UCI Adults Dataset</h1> */}\n      <FormControl sx={{ s: 1, minWidth: 175, paddingRight: 1 }}>\n        <InputLabel>View:</InputLabel>\n        <Select value={view} label='View' onChange={handleViewChange}>\n          <MenuItem value={'force'}>Force Layout</MenuItem>\n          <MenuItem value={'graph'}>Graph Layout</MenuItem>\n          <MenuItem value={'bar'}>Bar Chart Layout</MenuItem>\n        </Select>\n      </FormControl>\n      {/* <FormControl sx={{ s: 2, minWidth: 175, paddingRight: 1 }}>\n        <InputLabel>Algorithm:</InputLabel>\n        <Select\n          value={algorithm}\n          label='Algorithm'\n          onChange={handleAlgorithmChange}\n        >\n          <MenuItem value={'slicefinder'}>Slice Finder</MenuItem>\n          <MenuItem value={'sliceline'}>Slice Line</MenuItem>\n        </Select>\n      </FormControl> */}\n    </div>\n  );\n};\n\nexport default Nav;\n","import React, { memo } from 'react';\n\nconst ColorLegend = ({\n    overperforming,\n    nodeColor,\n}) => {\n    if (!overperforming) {\n        return (\n            <div>\n                {nodeColor === 'loss' ? <p style={{ fontSize: '0.75rem', color: 'black' }}>Darker = higher loss (% worse)</p> : <p style={{ fontSize: '0.75rem', color: 'black' }}>Darker = less accurate</p> }\n                <div style={{ display: 'flex', flexDirection: 'row'}}>\n                    <div className=\"legend\" style={{\n                        background: 'linear-gradient(to right, #FFF1EC, #F99075, #E83F36, #67000E)',\n                        width: '90%',\n                        height: '25px',\n                        margin: '0 auto'\n                    }}>\n                        {nodeColor === 'loss' ? <p style={{ position: 'absolute', left: '0.75rem', top: '330px', fontSize: '0.75rem' }}>0%</p> : <p style={{ position: 'absolute', left: '0.75rem', top: '330px', fontSize: '0.75rem' }}>1.0</p>}\n                        {nodeColor === 'loss' ? <p style={{ position: 'absolute', left: '9.5rem', top: '330px', fontSize: '0.75rem', color: 'white' }}>{'>100%'}</p> : <p style={{ position: 'absolute', left: '11rem', top: '330px', fontSize: '0.75rem', color: 'white' }}>0.0</p>}\n                    </div>\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <div>\n                {nodeColor === 'loss' ? <p style={{ fontSize: '0.75rem', color: 'black' }}>Darker = lower loss (% improv.)</p> : <p style={{ fontSize: '0.75rem', color: 'black' }}>Darker = more accurate</p> }\n                <div style={{ display: 'flex', flexDirection: 'row'}}>\n                    <div className=\"legend\" style={{\n                        background: 'linear-gradient(to right, #E3EEF9, #B5D4E9, #6EAED5, #1A64AA, #092F6B)',\n                        width: '90%',\n                        height: '25px',\n                        margin: '0 auto'\n                    }}>\n                        {nodeColor === 'loss' ? <p style={{ position: 'absolute', left: '0.75rem', top: '330px', fontSize: '0.75rem' }}>0%</p> : <p style={{ position: 'absolute', left: '0.75rem', top: '330px', fontSize: '0.75rem' }}>0.0</p>}\n                        {nodeColor === 'loss' ? <p style={{ position: 'absolute', left: '9.5rem', top: '330px', fontSize: '0.75rem', color: 'white' }}>{'>100%'}</p> : <p style={{ position: 'absolute', left: '11rem', top: '330px', fontSize: '0.75rem', color: 'white' }}>1.0</p>}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default memo(ColorLegend);","import React from 'react';\nimport Drawer from '@mui/material/Drawer';\nimport Button from '@mui/material/Button';\nimport Slider from '@mui/material/Slider';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Select from '@mui/material/Select';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Divider from '@mui/material/Divider';\nimport Switch from '@mui/material/Switch';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport featuresData from '../../data/features.json'\nimport './LeftDrawer.css';\nimport ColorLegend from './ColorLegend'\n\nconst LeftDrawer = ({\n  numFeatures,\n  setNumFeatures,\n  sampleSize,\n  setSampleSize,\n  metric,\n  setMetric,\n  sortBy,\n  setSortBy,\n  overperforming,\n  setOverperforming,\n  features,\n  setFeatures,\n  view,\n  radius,\n  setRadius,\n  edgeFiltering,\n  setEdgeFiltering,\n  edgeForce,\n  setEdgeForce,\n  cursorMode,\n  setCursorMode,\n  nodeSize,\n  setNodeSize,\n  nodeColor,\n  setNodeColor,\n  show,\n  setShow,\n  showConvexHull,\n  setShowConvexHull,\n}) => {\n  const [switchDisabled, setSwitchDisabled] = React.useState(false);\n\n  const handleFeaturesChange = (event) => {\n    setNumFeatures(event.target.value);\n    setShowConvexHull(false);\n  };\n\n  const handleSizeChange = (event) => {\n    setSampleSize(event.target.value);\n    setShowConvexHull(false);\n  };\n\n  const handleShowChange = (event) => {\n    setShow(event.target.value);\n    setShowConvexHull(false);\n  };\n\n  const handleMetricChange = (event) => {\n    setMetric(event.target.value);\n    setShowConvexHull(false);\n  };\n\n  const handleSortByChange = (event) => {\n    setSortBy(event.target.value);\n    setShowConvexHull(false);\n  };\n\n  const handleSwitchChange = (event) => {\n    setOverperforming(event.target.checked);\n    setShowConvexHull(false);\n  };\n\n  const handleCheckboxChange = (event, label) => {\n    if (event.target.checked) {\n      setFeatures([...features, label]);\n    } else {\n      setFeatures(features.filter((feature) => feature !== label));\n    }\n    setShowConvexHull(false);\n  };\n\n  const handleReset = (event) => {\n    setFeatures(featuresData.features);\n    setNumFeatures(2);\n    setSampleSize(0);\n    setMetric('Log Loss');\n    setSortBy('metric');\n    setOverperforming(false);\n    setEdgeFiltering(500);\n    setEdgeForce(1);\n    setShowConvexHull(false);\n    setNodeSize('size')\n    setNodeColor('loss')\n  };\n\n  return (\n    <Drawer\n      variant=\"permanent\"\n      anchor=\"left\"\n      sx={{\n        display: { xs: 'none', sm: 'block' },\n        '& .MuiDrawer-paper': { boxSizing: 'border-box', width: '15rem' },\n      }}\n    >\n      <div className='left-container'>\n        <div style={{margin: '2rem 0', lineHeight: '0.5rem'}}>\n          <h1>Slice Settings</h1>\n          {view !== 'bar' ? (<h2>Each slice is a node</h2>) : (<h2>Each slice is a bar</h2>)}\n        </div>\n        {view === 'bar' ? (\n          <>\n            <p><strong>Sort By:</strong></p>\n            <FormControl sx={{ m: 0, minWidth: 175 }} size=\"small\">\n              <Select\n                value={sortBy}\n                onChange={handleSortByChange}\n              >\n                <MenuItem value={'loss'}>Log Loss</MenuItem>\n                <MenuItem value={'accuracy'}>Balanced Accuracy</MenuItem>\n                <MenuItem value={'size'}>Sample Size</MenuItem>\n              </Select>\n            </FormControl>\n            <p><strong>Color Represents</strong></p>\n            <FormControl sx={{ s: 1, minWidth: 175 }} size=\"small\">\n              <Select\n                value={nodeColor}\n                onChange={(event) => {\n                  setNodeColor(event.target.value);\n                  setShowConvexHull(false);\n                }}\n              >\n                <MenuItem value={'loss'}>Log Loss</MenuItem>\n                <MenuItem value={'accuracy'}>Balanced Accuracy</MenuItem>\n              </Select>\n            </FormControl>\n            <ColorLegend overperforming={overperforming} nodeColor={nodeColor}/>\n          </>\n        ) : (\n            <>\n              <p><strong>Size Represents</strong></p>\n              <FormControl sx={{ s: 1, minWidth: 175 }} size=\"small\">\n                <Select\n                  value={nodeSize}\n                  onChange={(event) => {\n                    setNodeSize(event.target.value);\n                    setShowConvexHull(false);\n                  }}\n                >\n                  <MenuItem value={'size'}>Slice Sample Size</MenuItem>\n                  <MenuItem value={'accuracy'}>Balanced Accuracy</MenuItem>\n                </Select>\n              </FormControl>\n              <p><strong>Color Represents</strong></p>\n              <FormControl sx={{ s: 1, minWidth: 175 }} size=\"small\">\n                <Select\n                  value={nodeColor}\n                  onChange={(event) => {\n                    setNodeColor(event.target.value);\n                    setShowConvexHull(false);\n                  }}\n                >\n                  <MenuItem value={'loss'}>Log Loss</MenuItem>\n                  <MenuItem value={'accuracy'}>Balanced Accuracy</MenuItem>\n                </Select>\n              </FormControl>\n              <ColorLegend overperforming={overperforming} nodeColor={nodeColor}/>\n              <Divider style={{ padding: '1rem' }} />\n              <p><strong>Show top {show} slices</strong></p>\n              <Box sx={{width: '10rem', margin: '1rem'}}>\n                <Slider\n                  size='small'\n                  defaultValue={100}\n                  aria-label='Small'\n                  value={show}\n                  valueLabelDisplay='auto'\n                  min={10}\n                  max={100}\n                  step={10}\n                  onChange={handleShowChange}\n                />\n              </Box>\n              <p><strong>sorted by</strong></p>\n              <FormControl sx={{ s: 1, minWidth: 175 }} size=\"small\">\n                <Select\n                  value={sortBy}\n                  onChange={(event) => {\n                    setSortBy(event.target.value);\n                    setShowConvexHull(false);\n                  }}\n                >\n                  <MenuItem value={'loss'}>Log Loss</MenuItem>\n                  <MenuItem value={'accuracy'}>Balanced Accuracy</MenuItem>\n                  <MenuItem value={'size'}>Sample Size</MenuItem>\n                </Select>\n              </FormControl>\n              <Divider style={{ padding: '1rem' }} />\n              <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                <div style={{width: '75%'}}>\n                  <p><strong>Convex Hull:</strong></p>\n                </div>\n              <Switch\n                checked={showConvexHull}\n                onChange={(event) => {\n                  if (event.target.checked) {\n                    setSwitchDisabled(true);\n                    setTimeout(() => {\n                      setSwitchDisabled(false);\n                    }, 4000);\n                  }\n                  setShowConvexHull(event.target.checked);\n                }}\n                label='Show Convex Hull'\n                className='switch'\n                disabled={switchDisabled}\n              />\n              </div>\n            </>\n        )}\n        <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n          <div style={{width: '75%'}}>\n            <p><strong>Overperforming:</strong></p>\n          </div>\n          <Switch\n            checked={overperforming}\n            onChange={handleSwitchChange}\n            label='Overperforming Slices'\n            />\n        </div>\n        {view === 'graph' && (\n          <div style={{lineHeight: '0.5'}}>\n            <p><strong>Edge Filtering:</strong></p>\n            <Box sx={{width: '10rem', margin: '0 1rem'}}>\n              <Slider\n                aria-label='Edge Filtering'\n                value={edgeFiltering}\n                valueLabelDisplay='auto'\n                defaultValue={500}\n                step={100}\n                min={0}\n                max={2000}\n                size='small'\n                onChange={(event) => {\n                  setEdgeFiltering(event.target.value);\n                  setShowConvexHull(false);\n                }}\n                />\n            </Box>\n            <p><strong>Edge Force Strength:</strong></p>\n            <Box sx={{width: '10rem', margin: '0 1rem'}}>\n`            <Slider\n              aria-label='Edge Force Strength'\n              defaultValue={1}\n              value={edgeForce}\n              valueLabelDisplay='auto'\n              step={0.01}\n              min={0}\n              max={5}\n              size='small'\n              onChange={(event) => {\n                setEdgeForce(event.target.value);\n                setShowConvexHull(false);\n              }}\n              />`\n            </Box>\n          </div>\n        )}\n        <p><strong>Minimum Slice Size:</strong></p>\n        <Box sx={{width: '10rem', margin: '1rem'}}>\n          <Slider\n            size='small'\n            defaultValue={100}\n            aria-label='Small'\n            value={sampleSize}\n            valueLabelDisplay='auto'\n            min={0}\n            max={250}\n            step={10}\n            onChange={handleSizeChange}\n          />\n        </Box>\n        <p><strong>Features:</strong></p>\n        <FormGroup style={{ marginLeft: '1rem' }}>\n          {featuresData.features.sort().map((feature) => {\n            return <FormControlLabel\n              control={<Checkbox defaultChecked checked={features.includes(feature)} />}\n              label={feature}\n              key={feature}\n              onChange={(event) => handleCheckboxChange(event, feature)}\n            />\n          })}\n        </FormGroup>\n        <Divider style={{ padding: '1rem' }} />\n        <Button\n          variant='outlined'\n          onClick={handleReset}\n          style={{ marginTop: '1rem' }}\n        >\n          Reset\n        </Button>\n      </div>\n      </Drawer>\n  );\n};\n\nexport default LeftDrawer;\n","export default __webpack_public_path__ + \"static/media/RedGradient.fcc885e6.png\";","export default __webpack_public_path__ + \"static/media/BlueGradient.64b1fe13.png\";","import React from 'react';\nimport * as d3 from 'd3';\n\nexport const useD3 = (renderChartFn, dependencies) => {\n  const ref = React.useRef();\n\n  React.useEffect(() => {\n    renderChartFn(d3.select(ref.current));\n    return () => {};\n  }, dependencies);\n  return ref;\n};\n","import { useD3 } from '../../hooks/useD3';\nimport React, { memo } from 'react';\nimport * as d3 from 'd3';\n\nfunction SliceBarChart({\n  data,\n  model,\n  max,\n  overperforming,\n  metric,\n  accuracy,\n  setDetails,\n  nodeColor\n}) {\n  const [selected, setSelected] = React.useState(null);\n  const [doneAnimating, setDoneAnimating] = React.useState(false);\n  React.useEffect(() => {\n    setDoneAnimating(false);\n  }, [data]);\n\n  const ref = useD3(\n    (svg) => {\n      const height = 600;\n      const width = 875;\n      const margin = { top: 60, right: 30, bottom: 50, left: 90 };\n\n      let div = d3\n        .select('.tooltip')\n        .style('opacity', 0)\n        .style('width', '250px')\n        .style('height', '200px')\n        .style('padding', '1rem 1rem 0rem 1rem')\n        .style('border-radius', '20px');\n\n      const x = d3\n        .scaleBand()\n        .domain(data.map((d) => d.slice))\n        .rangeRound([margin.left, width - margin.right])\n        .padding(0.1);\n\n      const y1 = d3\n        .scaleLinear()\n        .domain([0, max])\n        .rangeRound([height - margin.bottom, margin.top]);\n\n      const xAxis = (g) =>\n        g\n          .attr('transform', `translate(0,${height - margin.bottom})`)\n          .call(d3.axisBottom(x).tickSizeOuter(0))\n          .selectAll('text')\n          .style(\"font\", \"14px\")\n          .attr('transform', 'translate(-10,0)rotate(-45)')\n          .style('text-anchor', 'end');\n\n      const y1Axis = (g) =>\n        g\n          .attr('transform', `translate(${margin.left},0)`)\n          .style('color', 'steelblue')\n          .call(d3.axisLeft(y1).ticks(null, 's'))\n          .call((g) => g.select('.domain').remove())\n          .call((g) =>\n            g\n              .append('text')\n              .attr('x', -margin.left)\n              .attr('y', 10)\n              .attr('fill', 'currentColor')\n              .attr('text-anchor', 'start')\n              .text(data.y1)\n          );\n\n      svg.select('.x-axis').call(xAxis);\n      svg.select('.y-axis').call(y1Axis);\n\n      svg\n        .select('.plot-area')\n        .selectAll('.bar')\n        .data(data)\n        .join('rect')\n        .attr('class', 'bar')\n        .attr(\"style\", (d) => {\n          if (d.slice === selected) {\n            return \"outline: 3px solid #FFD600;\"\n          }\n        })\n        .style('fill', (d) => {\n          if (overperforming)\n            return d3.interpolateBlues(Math.abs((nodeColor === 'loss' ? (d.metric - model) / model : d.accuracy)));\n          return d3.interpolateReds(Math.abs((nodeColor === 'loss' ? (d.metric - model) / model : 1 - d.accuracy)));\n        })\n        .on('mouseover', function (event, d) {\n          d3.select(this).style('opacity', '0.7').style('cursor', 'pointer');\n          div\n            .transition()\n            .duration(200)\n            .style('opacity', 0.9)\n            .style('right', '20%')\n            .style('top', '100px');\n          div.html(\n            '<strong>Description: </strong>' +\n              d.slice +\n              '<br><br>' +\n              '<strong>Size: </strong>' +\n              d.size +\n              ' samples' +\n              '<br><br>' +\n              '<strong>Log Loss: </strong>' +\n              d.metric.toFixed(2) +\n              ' ' +\n              `(${Math.round(((d.metric - model) / model) * 100)}% difference)` +\n              '<br><br>' +\n              '<strong>Accuracy: </strong>' +\n              d.accuracy?.toFixed(2) +\n              ' ' +\n              `(${Math.round(((d.accuracy - accuracy) / accuracy) * 100)}% difference)`\n          );\n        })\n        .on('mouseout', function (d) {\n          d3.select(this).style('opacity', '1');\n          div\n            .transition()\n            .style('opacity', 0)\n        })\n        .on('click', function (event, d) {\n          setSelected(d.slice);\n          setDetails({\n            slice: d.slice,\n            size: d.size,\n            metric: d.metric,\n            similarSlices: [],\n          });\n        })\n        .attr('x', (d) => x(d.slice))\n        .attr('width', x.bandwidth())\n        .attr('y', (d) => y1(0) - margin.bottom)\n        .attr('height', (d) => height - y1(0));\n\n      // Animation\n      if (!doneAnimating) {\n        svg\n          .selectAll('rect')\n          .transition()\n          .duration(800)\n          .attr('y', function (d) {\n            return y1(d.metric) - margin.bottom;\n          })\n          .attr('height', function (d) {\n            return height - y1(d.metric);\n          })\n          .delay(function (d, i) {\n            return i * 100;\n          });\n        setDoneAnimating(true);\n      } else {\n        svg\n          .selectAll('rect')\n          .attr('y', function (d) {\n            return y1(d.metric) - margin.bottom;\n          })\n          .attr('height', function (d) {\n            return height - y1(d.metric);\n          });\n      }\n\n      svg.selectAll('.line').remove();\n      svg.selectAll('.label').remove();\n\n      svg\n        .append('svg:line')\n        .attr('class', 'line')\n        .attr('x1', 60)\n        .attr('x2', width)\n        .attr('y1', y1(model))\n        .attr('y2', y1(model))\n        .style('stroke', '#e6e6e6');\n      svg\n        .append('text')\n        .attr('class', 'label')\n        .text('Model')\n        .attr('x', 0)\n        .attr('y', y1(model) + 5)\n        .style('fill', 'gray');\n      svg\n        .append('text')\n        .attr('class', 'label')\n        .text(metric)\n        .attr('x', 0)\n        .attr('y', y1(model) + 25)\n        .style('fill', 'gray');\n    },\n    [data, metric, selected]\n  );\n\n  return (\n    <div style={{width: '100%'}}>\n      <div\n        className='tooltip'\n        style={{ position: 'absolute', background: 'lightgray', right: '20%', top: '100px' }}\n      ></div>\n      <svg\n        ref={ref}\n        viewBox=\"0 0 875 875\" width=\"80%\" height=\"80%\"\n        style={{\n          margin: 'auto',\n          display: 'block',\n        }}\n      >\n        <g className='plot-area' />\n        <g className='x-axis' />\n        <g className='y-axis' />\n        <g className='label' />\n      </svg>\n    </div>\n  );\n}\n\nexport default memo(SliceBarChart);","import { useD3 } from '../../hooks/useD3';\nimport React, { memo } from 'react';\nimport * as d3 from 'd3';\nimport './ForceLayout.css';\n\nfunction ForceLayout({\n  data,\n  degree,\n  view,\n  metric,\n  model,\n  accuracy,\n  overperforming,\n  setDetails,\n  radius,\n  setShowConvexHull,\n  nodeSize,\n  nodeColor,\n}) {\n  const margin = { top: 50, right: 30, bottom: 70, left: 85 };\n  const width = 800;\n  const height = 800;\n  const hulls = Array.from(Array(100).keys());\n\n  let features = [];\n  const groupings = {};\n\n  data.forEach((obj) => {\n    obj.classifiers = [];\n    let str = obj.slice;\n    while (str.indexOf(':') !== -1) {\n      let temp = str.substring(0, str.indexOf(':'));\n      obj.classifiers.push(temp);\n      if (!features.includes(temp)) features.push(temp);\n      if (degree === obj.classifiers.length) {\n        if (groupings[obj.classifiers.join(', ')])\n          groupings[obj.classifiers.join(', ')]++;\n        else groupings[obj.classifiers.join(', ')] = 1;\n      }\n      if (str.indexOf(',') !== -1) {\n        str = str.substring(str.indexOf(',') + 2);\n      } else {\n        str = '';\n      }\n    }\n  });\n\n  features = features.sort();\n\n  const groupingsArray = Object.keys(groupings)\n    .map((key) => [key, groupings[key]])\n    .sort((a, b) => b[1] - a[1]);\n\n  const topGroupings = groupingsArray.slice(0, 15);\n\n  const x = d3\n    .scaleBand()\n    .domain(features)\n    .rangeRound([margin.left, width - margin.right])\n    .padding(0.1);\n\n  const xAxis = (g) =>\n    g\n      .attr('transform', `translate(0,${height - margin.bottom - 670})`)\n      .attr('class', 'xAxis')\n      .call(d3.axisTop(x).tickSizeOuter(0))\n      .selectAll('text')\n      .style(\"font-size\", \"14px\")\n      .attr('transform', 'translate(10,-10)rotate(-45)')\n      .style('text-anchor', 'start');\n\n  const yAxis = (g) =>\n    g\n      .attr('transform', `translate(${margin.left},${30 - margin.bottom})`)\n      .attr('class', 'xAxis')\n      .call(d3.axisLeft(x).tickSizeOuter(0))\n      .selectAll('text')\n      .style(\"font-size\", \"14px\")\n      .style('text-anchor', 'end');\n\n  const xAxisGrid = (g) =>\n    g\n      .attr('transform', `translate(0,${height - margin.bottom})`)\n      .call(\n        d3\n          .axisBottom(x)\n          .tickSizeOuter(0)\n          .tickSizeInner(-height - margin.top + 2 * margin.bottom)\n      )\n      .style('opacity', 0.1)\n      .selectAll('text')\n      .style('display', 'none');\n\n  const yAxisGrid = (g) =>\n    g\n      .attr('transform', `translate(${margin.left},${30 - margin.bottom})`)\n      .call(\n        d3\n          .axisLeft(x)\n          .tickSizeOuter(0)\n          .tickSizeInner(-width - margin.right + 2 * margin.left)\n      )\n      .style('opacity', 0.1)\n      .selectAll('text')\n      .style('display', 'none');\n\n  const ref = useD3(\n    (svg) => {\n      let convexHullShowing = false;\n      d3.select('.hull').remove();\n      let div = d3\n        .select('.tooltip')\n        .style('opacity', 0)\n        .style('width', '250px')\n        .style('height', '200px')\n        .style('padding', '1rem 1rem 0 1rem')\n        .style('border-radius', '20px');\n      const xCenter = [];\n      const yCenter = [];\n      for (let i = 0; i < features.length; i++) {\n        xCenter.push(((width - 150) / features.length) * i + 100);\n        yCenter.push(((height - 175) / features.length) * i - 100);\n      }\n      const nodes = data.map((obj) => {\n        return {\n          radius: nodeSize === 'size' ? Math.log(obj.size) * 2 : Math.sqrt(obj.accuracy) * 10,\n          category: obj.degree,\n          xFeature: obj.classifiers[0],\n          yFeature: obj.classifiers[1] ?? obj.classifiers[0],\n          slice: obj.slice,\n          size: obj.size,\n          metric: obj.metric,\n          accuracy: obj.accuracy,\n        };\n      });\n\n      const simulation = d3\n        .forceSimulation(nodes)\n        .force('charge', d3.forceManyBody().strength(-5))\n        .force(\n          'x',\n          d3.forceX().x(function (d) {\n            return xCenter[features.indexOf(d.xFeature)] - 20;\n          })\n        )\n        .force(\n          'y',\n          d3.forceY().y(function (d) {\n            if (degree > 1) {\n              return yCenter[features.indexOf(d.yFeature)];\n            } else {\n              return height / 4;\n            }\n          })\n        )\n        .force(\n          'collision',\n          d3.forceCollide().radius(function (d) {\n            return d.radius;\n          })\n        )\n        .on('tick', ticked);\n\n      let bubbles = d3\n        .select('.g')\n        .selectAll('circle')\n        .data(nodes)\n        .join('circle')\n        .attr('class', 'node')\n        .attr('r', function (d) {\n          return d.radius;\n        })\n        .style('fill', function (d) {\n          if (overperforming)\n            return d3.interpolateBlues(Math.abs((nodeColor === 'loss' ? (d.metric - model) / model : d.accuracy)));\n          return d3.interpolateReds(Math.abs((nodeColor === 'loss' ? (d.metric - model) / model : 1 - d.accuracy)));\n        })\n        .style('opacity', function (d) {\n          return '1';\n        });\n      function ticked() {\n        bubbles\n          .attr('cx', function (d) {\n            return d.x;\n          })\n          .attr('cy', function (d) {\n            return d.y;\n          })\n          .on('mouseover', function (event, d) {\n            d3.select(this)\n              .attr('r', d.radius * 1.1)\n              .style('opacity', '0.7')\n              .style('cursor', 'pointer');\n            div\n              .transition()\n              .duration(0)\n              .style('display', 'block')\n              .style('opacity', 0.9)\n              .style('left', (event.clientX + 50) + 'px')\n              .style('top', (event.clientY) + 'px')\n            div.html(\n              '<strong>Description: </strong>' +\n              d.slice +\n              '<br><br>' +\n              '<strong>Size: </strong>' +\n              d.size +\n              ' samples' +\n              '<br><br>' +\n              '<strong>Log Loss: </strong>' +\n              d.metric.toFixed(2) +\n              ' ' +\n              `(${Math.round(((d.metric - model) / model) * 100)}% difference)` +\n              '<br><br>' +\n              '<strong>Accuracy: </strong>' +\n              d.accuracy?.toFixed(2) +\n              ' ' +\n              `(${Math.round(((d.accuracy - accuracy) / accuracy) * 100)}% difference)`\n            );\n          })\n          .on('mouseout', function (event, d) {\n            d3.select(this).attr('r', d.radius).style('opacity', '1');\n            div\n              .transition()\n              .duration(50)\n              .style('opacity', 0)\n              .style('display', 'none')\n          })\n          .on('click', function (event, d) {\n            bubbles.style('fill', function (d) {\n              if (event.target.__data__ === d) {\n                return \"#FFD600\"\n              }\n              if (overperforming)\n                return d3.interpolateBlues(Math.abs((nodeColor === 'loss' ? (d.metric - model) / model : d.accuracy)))\n              return d3.interpolateReds(Math.abs((nodeColor === 'loss' ? (d.metric - model) / model : 1 - d.accuracy)))\n            });\n            setDetails({\n              slice: d.slice,\n              size: d.size,\n              metric: d.metric,\n              similarSlices: [],\n            });\n          });\n      }\n\n      const convexHull = (g, opacity) => {\n        const colors = ['gray', 'green', 'yellow', 'black', 'purple'];\n        let vertices = [];\n\n        for (let i = 0; i < topGroupings.length; i++) {\n          vertices = [];\n          for (let j = 0; j < nodes.length; j++) {\n            if (\n              nodes[j].xFeature === topGroupings[i][0].split(', ')[0] &&\n              (degree < 2 ||\n                nodes[j].yFeature === topGroupings[i][0].split(', ')[1])\n            ) {\n              if (degree < 2) {\n                vertices.push([nodes[j].x + 50, height / 2]);\n              } else {\n                vertices.push([nodes[j].x + 50, nodes[j].y + 200]);\n              }\n            }\n          }\n          const hull = d3.polygonHull(vertices);\n          const line = d3.line().curve(d3.curveLinearClosed);\n          if (!hull) return;\n          g.append('path')\n            .attr('class', `path${degree}`)\n            .attr('d', line(hull))\n            .attr('fill', colors[0])\n            .attr('stroke', colors[0])\n            .attr('opacity', opacity);\n        }\n      };\n\n      d3.select('.x-axis-grid').call(xAxisGrid);\n      d3.select('.y-axis-grid').call(yAxisGrid);\n      d3.select('.x-axis').call(xAxis);\n      if (degree >= 2) {\n        d3.select('.y-axis').call(yAxis).style('opacity', '1');\n      } else {\n        d3.select('.y-axis').style('opacity', '0');\n      }\n      d3.select('.switch').on('click', (event, d) => {\n        setShowConvexHull(event.target.checked);\n        convexHullShowing = event.target.checked;\n        if (convexHullShowing)\n          d3.select(`.hull`)\n            .style('opacity', '0')\n            .call(convexHull, 0.25)\n            .transition()\n            .duration(500)\n            .style('opacity', '1');\n        else {\n          d3.select(`.hull`).remove();\n          d3.selectAll(`.hull`).transition().duration(0).style('opacity', '0');\n        }\n      });\n    },\n    [data, view]\n  );\n\n  if (view !== 'force') return null;\n\n  return (\n    <div className='force'>\n      <div\n        className='tooltip'\n        style={{ position: 'absolute', background: '#e6e6e6', right: '20%', top: '100px', }}\n      ></div>\n      <svg viewBox=\"0 0 875 875\" width=\"80%\" height=\"100%\" id='force-svg' className='svg' style={{ margin: '0 auto', display: 'block', height: '1000px' }}>\n        <g transform=\"translate(50, 0)\">\n          <g id='force-g' className='g' transform='translate(50, 200)'></g>\n          <g className='x-axis' style={{ padding: '100px' }}/>\n          <g className='y-axis' />\n          <g className='x-axis-grid' />\n          <g className='y-axis-grid' />\n          {hulls.map((hull) => (\n            <g className={'hull'} key={hull} />\n          ))}\n        </g>\n      </svg>\n    </div>\n  );\n}\n\nexport default memo(ForceLayout);","import { useD3 } from '../../hooks/useD3';\nimport React, { memo } from 'react';\nimport * as d3 from 'd3';\nimport './GraphLayout.css';\nimport logLossSamples from '../../data/loglosssamples.json';\nimport reverseLogLossSamples from '../../data/reverseloglosssamples.json';\nimport commonSamples from '../../data/commonSamples.json';\nimport reverseCommonSamples from '../../data/reverseCommonSamples.json';\n\nfunction GraphLayout({\n  data,\n  degree,\n  metric,\n  model,\n  accuracy,\n  overperforming,\n  radiusType,\n  edgeFiltering,\n  edgeForce,\n  setDetails,\n  cursorMode,\n  algorithm,\n  setShowConvexHull,\n  nodeSize,\n  nodeColor\n}) {\n  const margin = { top: 50, right: 30, bottom: 70, left: 85 };\n  const [value, setValue] = React.useState(0);\n  const hulls = Array.from(Array(100).keys());\n  function useForceUpdate() {\n    return () => setValue((value) => value + 1); // update the state to force render\n  }\n  const forceUpdate = useForceUpdate();\n\n  const width = 800;\n  const height = 800;\n\n  let features = [];\n  const groupings = {};\n\n  let samples;\n  let matches = {};\n\n  switch (metric) {\n    case 'Log Loss':\n      if (overperforming) {\n        samples = reverseLogLossSamples;\n        matches = reverseCommonSamples;\n      } else {\n        matches = commonSamples;\n        samples = logLossSamples;\n      }\n      break;\n    default:\n      if (overperforming) samples = reverseLogLossSamples;\n      else samples = logLossSamples;\n      break;\n  }\n\n  data.forEach((obj) => {\n    obj.classifiers = [];\n    let str = obj.slice;\n    while (str.indexOf(':') !== -1) {\n      let temp = str.substring(0, str.indexOf(':'));\n      obj.classifiers.push(temp);\n      if (!features.includes(temp)) features.push(temp);\n      if (degree === obj.classifiers.length) {\n        if (groupings[obj.classifiers.join(', ')])\n          groupings[obj.classifiers.join(', ')]++;\n        else groupings[obj.classifiers.join(', ')] = 1;\n      }\n      if (str.indexOf(',') !== -1) {\n        str = str.substring(str.indexOf(',') + 2);\n      } else {\n        str = '';\n      }\n    }\n  });\n\n  features = features.sort();\n\n  const groupingsArray = Object.keys(groupings)\n    .map((key) => [key, groupings[key]])\n    .sort((a, b) => b[1] - a[1]);\n\n  const topGroupings = groupingsArray.slice(0, 15);\n\n  const xCenter = [];\n  const yCenter = [];\n\n  const xTickDistance =\n    (width - margin.left - margin.right) / (features.length + 1);\n  const yTickDistance =\n    (height - margin.top - margin.bottom) / (features.length + 2);\n\n  for (let i = 0; i < features.length; i++) {\n    xCenter.push(margin.left + (i + 1) * xTickDistance);\n    yCenter.push(2 * margin.top + (i + 1) * yTickDistance);\n  }\n\n  const x = d3\n    .scaleBand()\n    .domain(features)\n    .rangeRound([margin.left, width - margin.right])\n    .padding(0.1);\n\n  const xAxis = (g) =>\n    g\n      .attr('transform', `translate(0,${height - margin.bottom - 670})`)\n      .attr('class', 'xAxis')\n      .call(d3.axisTop(x).tickSizeOuter(0))\n      .selectAll('text')\n      .style(\"font-size\", \"14px\")\n      .attr('transform', 'translate(10,-10)rotate(-45)')\n      .style('text-anchor', 'start');\n\n  const yAxis = (g) =>\n    g\n      .attr('transform', `translate(${margin.left},${30 - margin.bottom})`)\n      .attr('class', 'xAxis')\n      .call(d3.axisLeft(x).tickSizeOuter(0))\n      .selectAll('text')\n      .style(\"font-size\", \"14px\")\n      .style('text-anchor', 'end');\n\n  const xAxisGrid = (g) =>\n    g\n      .attr('transform', `translate(0,${height - margin.bottom})`)\n      .call(\n        d3\n          .axisBottom(x)\n          .tickSizeOuter(0)\n          .tickSizeInner(-height - margin.top + 2 * margin.bottom)\n      )\n      .style('opacity', 0.1)\n      .selectAll('text')\n      .style('display', 'none');\n  const yAxisGrid = (g) =>\n    g\n      .attr('transform', `translate(${margin.left},${30 - margin.bottom})`)\n      .call(\n        d3\n          .axisLeft(x)\n          .tickSizeOuter(0)\n          .tickSizeInner(-width - margin.right + 2 * margin.left)\n      )\n      .style('opacity', 0.1)\n      .selectAll('text')\n      .style('display', 'none');\n\n  const nodes = data.map((obj) => {\n    return {\n      radius: nodeSize === 'size' ? Math.log(obj.size) * 2 : Math.sqrt(obj.accuracy) * 10,\n      category: obj.degree,\n      xFeature: obj.classifiers[0],\n      yFeature: obj.classifiers[1] ?? obj.classifiers[0],\n      slice: obj.slice,\n      size: obj.size,\n      metric: obj.metric,\n      classifiers: obj.classifiers,\n      accuracy: obj.accuracy,\n    };\n  });\n\n  function countCommonSamples(slice1, slice2) {\n    let arr1 = samples[slice1];\n    let arr2 = samples[slice2];\n    if (!arr1 || !arr2) return 0;\n    arr1 = arr1.sort((a, b) => 0.5 - Math.random()).slice(0, 2000);\n    return arr1.filter((sample) => arr2.includes(sample)).length;\n  }\n\n  let links = [];\n  let common = {};\n\n  for (let i = 0; i < nodes.length; i++) {\n    for (let j = i + 1; j < nodes.length; j++) {\n      const count = matches[nodes[i].slice + '-' + nodes[j].slice];\n      // const count = countCommonSamples(nodes[i].slice, nodes[j].slice);\n      // common[nodes[i].slice + '-' + nodes[j].slice] = count;\n      // common[nodes[j].slice + '-' + nodes[i].slice] = count;\n      if (count > edgeFiltering) {\n        links.push({\n          source: i,\n          target: j,\n          sliceSource: nodes[i].slice,\n          sliceTarget: nodes[j].slice,\n          count: count,\n        });\n      }\n    }\n  }\n\n  // console.log(JSON.stringify(common));\n\n  // const links = [];\n  // console.log(JSON.stringify(links));\n\n  const graph = {\n    nodes: nodes,\n    links: links,\n  };\n\n  function clamp(x, lo, hi) {\n    return x < lo ? lo : x > hi ? hi : x;\n  }\n\n  const ref = useD3(\n    (svg) => {\n      let convexHullShowing = false;\n      d3.select('.hull').remove();\n      svg = d3.select('.svg')\n      let link = svg\n        .selectAll('.link')\n        .attr('class', 'link')\n        .data(graph.links)\n        .join('line')\n        .classed('link', true);\n      const node = svg\n        .selectAll('.node')\n        .data(graph.nodes)\n        .join('circle')\n        .attr('r', function (d) {\n          return d.radius;\n        })\n        .style('fill', function (d) {\n          if (overperforming)\n            return d3.interpolateBlues(Math.abs((nodeColor === 'loss' ? (d.metric - model) / model : d.accuracy)));\n          return d3.interpolateReds(Math.abs((nodeColor === 'loss' ? (d.metric - model) / model : 1 - d.accuracy)));\n        })\n        .classed('node', true)\n        .classed('fixed', (d) => d.fx !== undefined)\n        .on('mouseover', function (event, d) {\n          cursorMode === 'select'\n            ? d3\n                .select(this)\n                .attr('r', d.radius)\n                .style('opacity', '0.7')\n                .style('cursor', 'pointer')\n            : d3\n                .select(this)\n                .attr('r', d.radius)\n                .style('opacity', '0.7')\n                .style('cursor', 'grab');\n          d3.select('.tooltip')\n            .transition()\n            .duration(200)\n            .attr('max-width', '100px')\n            .style('display', 'block')\n            .style('opacity', 0.9)\n            .style('left', (event.clientX + 100) + 'px')\n            .style('top', (event.clientY) + 'px')\n            .style('padding', '1rem 1rem 1rem 1rem')\n          d3.select('.tooltip').html(\n            '<strong>Description: </strong>' +\n              d.slice +\n              '<br><br>' +\n              '<strong>Size: </strong>' +\n              d.size +\n              ' samples' +\n              '<br><br>' +\n              '<strong>Log Loss: </strong>' +\n              d.metric.toFixed(2) +\n              ' ' +\n              `(${Math.round(((d.metric - model) / model) * 100)}% difference)` +\n              '<br><br>' +\n              '<strong>Accuracy: </strong>' +\n              d.accuracy?.toFixed(2) +\n              ' ' +\n              `(${Math.round(((d.accuracy - accuracy) / accuracy) * 100)}% difference)`\n          );\n        })\n        .on('mouseout', function (d, i) {\n          d3.select(this).attr('r', i.radius).style('opacity', '1');\n          d3.select('.tooltip')\n            .transition()\n            .style('opacity', 0)\n            .style('display', 'none')\n        })\n        .on('click', click);\n\n      const simulation = d3\n        .forceSimulation()\n        .nodes(graph.nodes)\n        .force('charge', d3.forceManyBody().strength(-5))\n        // .force('center', d3.forceCenter(width / 2, height / 2).strength(0.1))\n        .force(\n          'x',\n          d3.forceX().x(function (d) {\n            return xCenter[features.indexOf(d.xFeature)];\n          })\n        )\n        .force(\n          'y',\n          d3.forceY().y(function (d) {\n            if (degree > 1) {\n              return yCenter[features.indexOf(d.yFeature)];\n            } else {\n              return height / 2;\n            }\n          })\n        )\n        .force(\n          'link',\n          d3.forceLink(graph.links).strength((d) => {\n            return (d.count / 100000) * edgeForce;\n          })\n        )\n        .force(\n          'collision',\n          d3.forceCollide().radius(function (d) {\n            return d.radius;\n          })\n        )\n        .on('tick', tick);\n      if (cursorMode === 'drag') {\n        const drag = d3.drag().on('start', dragstart).on('drag', dragged);\n\n        node.call(drag).on('click', click);\n      }\n\n      function tick() {\n        link\n          .attr('x1', (d) =>\n            Math.max(Math.min(d.source.x, width), d.source.radius + 100) + 50\n          )\n          .attr('y1', (d) =>\n            Math.max(Math.min(d.source.y, height - 75), d.source.radius)\n          )\n          .attr('x2', (d) =>\n            Math.max(Math.min(d.target.x, width), d.target.radius + 100) + 50\n          )\n          .attr('y2', (d) =>\n            Math.max(Math.min(d.target.y, height - 75), d.target.radius)\n          )\n          .style('stroke-width', (d) =>\n            Math.min(\n              Math.pow(d.count / 2000, 2) * edgeForce,\n              Math.pow(d.count / 2000, 2) * 3\n            )\n          );\n        node\n          .attr('cx', (d) => Math.max(Math.min(d.x, width), d.radius + 100) + 50)\n          .attr('cy', (d) => Math.max(Math.min(d.y, height - 75), d.radius));\n      }\n\n      function click(event, d) {\n        if (cursorMode === 'select') {\n          node.style('fill', function (d) {\n            if (event.target.__data__ === d) {\n              return '#FFD600';\n            }\n            if (overperforming)\n              return d3.interpolateBlues(Math.abs((nodeColor === 'loss' ? (d.metric - model) / model : d.accuracy)));\n            return d3.interpolateReds(Math.abs((nodeColor === 'loss' ? (d.metric - model) / model : 1 - d.accuracy)));\n          });\n          setDetails({\n            slice: d.slice,\n            size: d.size,\n            metric: d.metric,\n            similarSlices: links\n              .sort((a, b) => b.count - a.count)\n              .map((link) => {\n                if (\n                  link.count > edgeFiltering &&\n                  link.sliceSource === d.slice\n                ) {\n                  return link.sliceTarget;\n                } else if (\n                  link.count > edgeFiltering &&\n                  link.sliceTarget === d.slice\n                ) {\n                  return link.sliceSource;\n                }\n                return undefined;\n              })\n              .filter((link) => link !== undefined)\n              .slice(0, 10),\n          });\n        } else {\n          delete d.fx;\n          delete d.fy;\n          d3.select(this).classed('fixed', false);\n          d3.select(this).style('fill', () => {\n            if (overperforming)\n              return d3.interpolateBlues(Math.abs((nodeColor === 'loss' ? (d.metric - model) / model : d.accuracy)));\n            return d3.interpolateReds(Math.abs((nodeColor === 'loss' ? (d.metric - model) / model : d.accuracy)));\n          });\n          simulation.alpha(1).restart();\n        }\n      }\n\n      function dragstart(event, d) {\n        d3.select(this).classed('fixed', true);\n        d3.select(this).style('fill', '#FFD600');\n        setDetails({\n          slice: d.slice,\n          size: d.size,\n          metric: d.metric,\n          similarSlices: links\n            .sort((a, b) => b.count - a.count)\n            .map((link) => {\n              if (link.count > edgeFiltering && link.sliceSource === d.slice) {\n                return link.sliceTarget;\n              } else if (\n                link.count > edgeFiltering &&\n                link.sliceTarget === d.slice\n              ) {\n                return link.sliceSource;\n              }\n              return undefined;\n            })\n            .filter((link) => link !== undefined)\n            .slice(0, 10),\n        });\n      }\n\n      function dragged(event, d) {\n        d.fx = clamp(event.x, 0, width);\n        d.fy = clamp(event.y, 0, height);\n        simulation.alpha(1).restart();\n      }\n\n      const convexHull = (g, opacity) => {\n        const colors = [\n          'gray',\n          'green',\n          'yellow',\n          'black',\n          'purple',\n          'pink',\n          'red',\n          'orange',\n          'brown',\n          'blue',\n          'cyan',\n          'magenta',\n          'lime',\n          'navy',\n          'olive',\n          'teal',\n          'violet',\n          'wheat',\n        ];\n        let vertices = [];\n\n        for (let i = 0; i < topGroupings.length; i++) {\n          vertices = [];\n          for (let j = 0; j < nodes.length; j++) {\n            if (\n              nodes[j].xFeature === topGroupings[i][0].split(', ')[0] &&\n              (degree < 2 ||\n                nodes[j].yFeature === topGroupings[i][0].split(', ')[1])\n            ) {\n              if (degree < 2) {\n                vertices.push([nodes[j].x, height / 2]);\n              } else {\n                vertices.push([nodes[j].x, nodes[j].y]);\n              }\n            }\n          }\n          const hull = d3.polygonHull(vertices);\n          const line = d3.line().curve(d3.curveLinearClosed);\n          if (!hull) return;\n          g.append('path')\n            .attr('class', `path${degree}`)\n            .attr('d', line(hull))\n            .attr('fill', colors[0])\n            .attr('stroke', colors[0])\n            .attr('opacity', opacity);\n        }\n      };\n\n      svg.select('.x-axis-grid').call(xAxisGrid);\n      svg.select('.y-axis-grid').call(yAxisGrid);\n      svg.select('.x-axis').call(xAxis);\n      if (degree >= 2) {\n        svg.select('.y-axis').call(yAxis).style('opacity', '1');\n      } else {\n        svg.select('.y-axis').style('opacity', '0');\n      }\n      d3.select('.switch').on('click', (event, d) => {\n        setShowConvexHull(event.target.checked);\n        convexHullShowing = event.target.checked;\n        if (convexHullShowing)\n          d3.select(`.hull`)\n            .style('opacity', '0')\n            .call(convexHull, 0.25)\n            .transition()\n            .duration(500)\n            .style('opacity', '1');\n        else {\n          d3.select('.hull').remove();\n          d3.selectAll('.hull').transition().duration(0).style('opacity', '0');\n        }\n      });\n    },\n    [data, value]\n  );\n\n  return (\n    <div className='graph' style={{ overflow: 'scroll'}}>\n      <div\n        className='tooltip'\n        style={{\n          position: 'absolute',\n          background: '#e6e6e6',\n          borderRadius: '20px',\n          padding: '1rem',\n        }}\n      ></div>\n      <svg id='graph-svg' className='svg' viewBox=\"0 0 875 875\" width=\"80%\" height=\"80%\" style={{ margin: '0 auto', display: 'block', height: '1000px' }}>\n        <g transform=\"translate(50, 0)\">\n          <g id='graph-g' className='g' transform='translate(50, 200)'></g>\n          <g className='x-axis' />\n          <g className='y-axis' />\n          <g className='x-axis-grid' />\n          <g className='y-axis-grid' />\n          {hulls.map((hull) => (\n            <g className={'hull'} key={hull} />\n          ))}\n        </g>\n      </svg>\n      <br />\n      {/* <Button\n        variant='outlined'\n        onClick={forceUpdate}\n        style={{ margin: '1rem' }}\n      >\n        Recenter\n      </Button> */}\n    </div>\n  );\n}\n\nexport default memo(GraphLayout);","import React, { memo } from 'react';\nimport SliceBarChart from './SliceBarChart';\nimport './Main.css';\nimport ForceLayout from './ForceLayout';\nimport GraphLayout from './GraphLayout';\n\nimport logloss from '../../data/logloss.json';\nimport reverselogloss from '../../data/reverselogloss.json';\n\nconst Main = ({\n  numFeatures,\n  sampleSize,\n  metric,\n  view,\n  sortBy,\n  overperforming,\n  features,\n  radius,\n  edgeFiltering,\n  edgeForce,\n  setDetails,\n  cursorMode,\n  show,\n  algorithm,\n  setShowConvexHull,\n  nodeSize,\n  nodeColor\n}) => {\n  let data;\n  let reversedata;\n  let modelMetric;\n  let modelAccuracy;\n  if (overperforming) {\n    data = Object.values(reverselogloss['data']).map(\n      (obj) => Object.values(obj)[0]\n    );\n    reversedata = Object.values(logloss['data']).map(\n      (obj) => Object.values(obj)[0]\n    );\n    modelMetric = reverselogloss['model'];\n    modelAccuracy = logloss['model_accuracy']\n  } else {\n    data = Object.values(logloss['data']).map(\n      (obj) => Object.values(obj)[0]);\n    reversedata = Object.values(reverselogloss['data']).map(\n      (obj) => Object.values(obj)[0]\n    );\n    modelMetric = logloss['model']\n    modelAccuracy = logloss['model_accuracy']\n  }\n  const metricArray = data.map((obj) => obj.metric);\n  const reverseMetricArray = reversedata.map((obj) => obj.metric);\n  const max = Math.max(...metricArray, ...reverseMetricArray, modelMetric);\n  let filteredData = data\n    .filter((obj) => {\n      let sliceStr = obj.slice;\n      while (sliceStr.includes(':')) {\n        if (features.includes(sliceStr.substring(0, sliceStr.indexOf(':')))) {\n          return true;\n        }\n        sliceStr = sliceStr.substring(sliceStr.indexOf(':') + 1);\n      }\n      return false;\n    })\n    .filter((obj) => obj.size >= sampleSize)\n    .filter((obj) => obj.degree <= numFeatures)\n    .sort(function (a, b) {\n      if (sortBy === 'size') return b.size - a.size;\n      if (sortBy === 'loss') {\n        if (overperforming) return a.metric - b.metric;\n        return b.metric - a.metric;\n      }\n      if (sortBy === 'accuracy') {\n        if (overperforming) return b.accuracy - a.accuracy;\n        return a.accuracy - b.accuracy;\n      }  \n      if (overperforming) return a.metric - b.metric;\n        return b.metric - a.metric;\n    });\n  if (view === 'bar') {\n    filteredData = filteredData.slice(0, 10);\n  } else {\n    filteredData = filteredData.slice(0, show);\n  }\n  return (\n    <div className='main-container' style={{ display: 'block', margin: 'auto', width: '75%'}}>\n      {view === 'bar' ? (\n        <SliceBarChart\n          data={filteredData}\n          model={modelMetric}\n          max={max}\n          view={view}\n          overperforming={overperforming}\n          metric={metric}\n          accuracy={modelAccuracy}\n          setDetails={setDetails}\n          nodeColor={nodeColor}\n        />\n      ) : view === 'force' ? (\n        <ForceLayout\n          data={filteredData}\n          degree={numFeatures}\n          view={view}\n          metric={metric}\n          model={modelMetric}\n          accuracy={modelAccuracy}\n          overperforming={overperforming}\n          setDetails={setDetails}\n          radius={radius}\n          setShowConvexHull={setShowConvexHull}\n          nodeSize={nodeSize}\n          nodeColor={nodeColor}\n        />\n      ) : (\n        <GraphLayout\n          data={filteredData}\n          degree={numFeatures}\n          metric={metric}\n          model={modelMetric}\n          accuracy={modelAccuracy}\n          overperforming={overperforming}\n          radiusType={radius}\n          edgeFiltering={edgeFiltering}\n          edgeForce={edgeForce}\n          setDetails={setDetails}\n          cursorMode={cursorMode}\n          algorithm={algorithm}\n          setShowConvexHull={setShowConvexHull}\n          nodeSize={nodeSize}\n          nodeColor={nodeColor}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(Main);\n","import React from 'react';\nimport Nav from './components/Nav/Nav';\nimport LeftDrawer from './components/LeftDrawer/LeftDrawer';\nimport RightDrawer from './components/RightDrawer/RightDrawer';\nimport Main from './components/Main/Main';\nimport featuresData from './data/features.json'\n\nwindow.onbeforeunload = function () {\n  window.scrollTo(0, 0);\n};\n\nfunction App() {\n  const [algorithm, setAlgorithm] = React.useState('slicefinder');\n  const [numFeatures, setNumFeatures] = React.useState(2);\n  const [sampleSize, setSampleSize] = React.useState(0);\n  const [metric, setMetric] = React.useState('Log Loss');\n  const [view, setView] = React.useState('force');\n  const [sortBy, setSortBy] = React.useState('loss');\n  const [overperforming, setOverperforming] = React.useState(false);\n  const [radius, setRadius] = React.useState('log');\n  const [edgeFiltering, setEdgeFiltering] = React.useState(500);\n  const [edgeThickness, setEdgeThickness] = React.useState(1);\n  const [edgeForce, setEdgeForce] = React.useState(1);\n  const [cursorMode, setCursorMode] = React.useState('select');\n  const [show, setShow] = React.useState(100);\n  const [nodeSize, setNodeSize] = React.useState('size')\n  const [nodeColor, setNodeColor] = React.useState('loss')\n  const [features, setFeatures] = React.useState(featuresData.features);\n  const [details, setDetails] = React.useState(null);\n  const setDetailsCallback = React.useCallback((details) => {\n    setDetails(details);\n  }, []);\n  const [showConvexHull, setShowConvexHull] = React.useState(false);\n\n  return (\n    <div className='App'>\n      <Nav\n        view={view}\n        setView={setView}\n        algorithm={algorithm}\n        setAlgorithm={setAlgorithm}\n      />\n      <LeftDrawer\n        numFeatures={numFeatures}\n        setNumFeatures={setNumFeatures}\n        sampleSize={sampleSize}\n        setSampleSize={setSampleSize}\n        metric={metric}\n        setMetric={setMetric}\n        sortBy={sortBy}\n        setSortBy={setSortBy}\n        overperforming={overperforming}\n        setOverperforming={setOverperforming}\n        features={features}\n        setFeatures={setFeatures}\n        view={view}\n        radius={radius}\n        setRadius={setRadius}\n        edgeFiltering={edgeFiltering}\n        setEdgeFiltering={setEdgeFiltering}\n        edgeForce={edgeForce}\n        setEdgeForce={setEdgeForce}\n        cursorMode={cursorMode}\n        setCursorMode={setCursorMode}\n        show={show}\n        setShow={setShow}\n        nodeSize={nodeSize}\n        setNodeSize={setNodeSize}\n        nodeColor={nodeColor}\n        setNodeColor={setNodeColor}\n        showConvexHull={showConvexHull}\n        setShowConvexHull={setShowConvexHull}\n      />\n      {/* <RightDrawer\n        details={details}\n        metric={metric}\n        overperforming={overperforming}\n        view={view}\n        convexHull={showConvexHull}\n      /> */}\n      <Main\n        numFeatures={numFeatures}\n        sampleSize={sampleSize}\n        metric={metric}\n        view={view}\n        sortBy={sortBy}\n        overperforming={overperforming}\n        features={features}\n        radius={radius}\n        edgeFiltering={edgeFiltering}\n        edgeForce={edgeForce}\n        setDetails={setDetailsCallback}\n        cursorMode={cursorMode}\n        show={show}\n        algorithm={algorithm}\n        setShowConvexHull={setShowConvexHull}\n        nodeSize={nodeSize}\n        nodeColor={nodeColor}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}