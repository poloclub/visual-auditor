{"version":3,"sources":["components/Nav/Nav.js","components/LeftDrawer/LeftDrawer.js","components/RightDrawer/RightDrawer.js","components/RightDrawer/RedGradient.png","components/RightDrawer/BlueGradient.png","hooks/useD3.js","components/Main/SliceBarChart.js","components/Main/ForceLayout.js","components/Main/GraphLayout.js","components/Main/Main.js","App.js","index.js"],"names":["Nav","view","setView","algorithm","setAlgorithm","className","FormControl","sx","s","minWidth","paddingRight","InputLabel","Select","value","label","onChange","event","target","MenuItem","LeftDrawer","numFeatures","setNumFeatures","sampleSize","setSampleSize","metric","setMetric","sortBy","setSortBy","overperforming","setOverperforming","features","setFeatures","edgeFiltering","radius","setRadius","setEdgeFiltering","edgeForce","setEdgeForce","nodeSize","cursorMode","setCursorMode","setNodeSize","show","setShow","showConvexHull","setShowConvexHull","React","useState","switchDisabled","setSwitchDisabled","Drawer","variant","anchor","display","xs","sm","boxSizing","width","style","margin","lineHeight","Box","Slider","valueLabelDisplay","defaultValue","step","min","max","size","flexDirection","alignItems","m","Switch","checked","setTimeout","disabled","FormGroup","marginLeft","featuresData","sort","map","feature","FormControlLabel","control","Checkbox","defaultChecked","includes","filter","handleCheckboxChange","Divider","padding","Button","onClick","marginTop","RightDrawer","details","convexHull","open","setOpen","handleDrawerClose","position","left","top","opacity","cursor","paddingTop","slice","split","toFixed","similarSlices","length","right","useD3","renderChartFn","dependencies","ref","useRef","useEffect","d3","current","SliceBarChart","data","model","setDetails","selected","setSelected","doneAnimating","setDoneAnimating","svg","height","div","x","domain","d","rangeRound","y1","select","call","g","attr","tickSizeOuter","selectAll","ticks","remove","append","text","join","Math","abs","on","this","transition","duration","html","round","bandwidth","delay","i","background","viewBox","memo","ForceLayout","degree","radiusType","hulls","Array","from","keys","groupings","forEach","obj","classifiers","str","indexOf","temp","substring","push","topGroupings","Object","key","a","b","xAxis","yAxis","xAxisGrid","tickSizeInner","yAxisGrid","xCenter","yCenter","nodes","log","accuracy","category","xFeature","yFeature","bubbles","force","strength","y","clientX","clientY","__data__","colors","vertices","j","hull","line","curve","id","transform","GraphLayout","matches","reverseLogLossSamples","reverseCommonSamples","commonSamples","logLossSamples","xTickDistance","yTickDistance","links","count","source","sliceSource","sliceTarget","graph","clamp","lo","hi","link","classed","node","undefined","fx","click","simulation","pow","drag","fy","alpha","restart","overflow","borderRadius","Main","reversedata","modelMetric","values","reverselogloss","logloss","metricArray","reverseMetricArray","filteredData","sliceStr","window","onbeforeunload","scrollTo","App","setDetailsCallback","useCallback","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7016203.chunk.js","sourcesContent":["import React from 'react';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport './Nav.css';\n\nconst Nav = ({ view, setView, algorithm, setAlgorithm }) => {\n  const handleViewChange = (event) => {\n    setView(event.target.value);\n  };\n\n  const handleAlgorithmChange = (event) => {\n    setAlgorithm(event.target.value);\n  };\n\n  return (\n    <div className='nav-container'>\n      {/* <h1>UCI Adults Dataset</h1> */}\n      <FormControl sx={{ s: 1, minWidth: 175, paddingRight: 1 }}>\n        <InputLabel>View:</InputLabel>\n        <Select value={view} label='View' onChange={handleViewChange}>\n          <MenuItem value={'force'}>Force Layout</MenuItem>\n          <MenuItem value={'graph'}>Graph Layout</MenuItem>\n          <MenuItem value={'bar'}>Bar Chart Layout</MenuItem>\n        </Select>\n      </FormControl>\n      {/* <FormControl sx={{ s: 2, minWidth: 175, paddingRight: 1 }}>\n        <InputLabel>Algorithm:</InputLabel>\n        <Select\n          value={algorithm}\n          label='Algorithm'\n          onChange={handleAlgorithmChange}\n        >\n          <MenuItem value={'slicefinder'}>Slice Finder</MenuItem>\n          <MenuItem value={'sliceline'}>Slice Line</MenuItem>\n        </Select>\n      </FormControl> */}\n    </div>\n  );\n};\n\nexport default Nav;\n","import React from 'react';\nimport Drawer from '@mui/material/Drawer';\nimport Button from '@mui/material/Button';\nimport Slider from '@mui/material/Slider';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Select from '@mui/material/Select';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Divider from '@mui/material/Divider';\nimport Switch from '@mui/material/Switch';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport featuresData from '../../data/features.json'\nimport './LeftDrawer.css';\n\nconst LeftDrawer = ({\n  numFeatures,\n  setNumFeatures,\n  sampleSize,\n  setSampleSize,\n  metric,\n  setMetric,\n  sortBy,\n  setSortBy,\n  overperforming,\n  setOverperforming,\n  features,\n  setFeatures,\n  view,\n  radius,\n  setRadius,\n  edgeFiltering,\n  setEdgeFiltering,\n  edgeForce,\n  setEdgeForce,\n  cursorMode,\n  setCursorMode,\n  nodeSize,\n  setNodeSize,\n  show,\n  setShow,\n  showConvexHull,\n  setShowConvexHull,\n}) => {\n  const [switchDisabled, setSwitchDisabled] = React.useState(false);\n\n  const handleFeaturesChange = (event) => {\n    setNumFeatures(event.target.value);\n    setShowConvexHull(false);\n  };\n\n  const handleSizeChange = (event) => {\n    setSampleSize(event.target.value);\n    setShowConvexHull(false);\n  };\n\n  const handleMetricChange = (event) => {\n    setMetric(event.target.value);\n    setShowConvexHull(false);\n  };\n\n  const handleSortByChange = (event) => {\n    setSortBy(event.target.value);\n    setShowConvexHull(false);\n  };\n\n  const handleSwitchChange = (event) => {\n    setOverperforming(event.target.checked);\n    setShowConvexHull(false);\n  };\n\n  const handleCheckboxChange = (event, label) => {\n    if (event.target.checked) {\n      setFeatures([...features, label]);\n    } else {\n      setFeatures(features.filter((feature) => feature !== label));\n    }\n    setShowConvexHull(false);\n  };\n\n  const handleReset = (event) => {\n    setFeatures(featuresData.features);\n    setNumFeatures(2);\n    setSampleSize(0);\n    setMetric('Log Loss');\n    setSortBy('metric');\n    setOverperforming(false);\n    setEdgeFiltering(500);\n    setEdgeForce(1);\n    setShowConvexHull(false);\n  };\n\n  return (\n    <Drawer\n      variant=\"permanent\"\n      anchor=\"left\"\n      sx={{\n        display: { xs: 'none', sm: 'block' },\n        '& .MuiDrawer-paper': { boxSizing: 'border-box', width: '15rem' },\n      }}\n    >\n      <div className='left-container'>\n        <div style={{margin: '2rem 0', lineHeight: '0.5rem'}}>\n          <h1>Slice Settings</h1>\n          {view !== 'bar' && (<h2>Each slice is a node</h2>)}\n        </div>\n        {view === 'graph' && (\n          <div style={{lineHeight: '0.5'}}>\n            <p><strong>Edge Filtering:</strong></p>\n            <Box sx={{width: '10rem', margin: '0 1rem'}}>\n              <Slider\n                aria-label='Edge Filtering'\n                value={edgeFiltering}\n                valueLabelDisplay='auto'\n                defaultValue={500}\n                step={100}\n                min={0}\n                max={2000}\n                size='small'\n                onChange={(event) => {\n                  setEdgeFiltering(event.target.value);\n                  setShowConvexHull(false);\n                }}\n                />\n            </Box>\n            <p><strong>Edge Force Strength:</strong></p>\n            <Box sx={{width: '10rem', margin: '0 1rem'}}>\n`            <Slider\n              aria-label='Edge Force Strength'\n              defaultValue={1}\n              value={edgeForce}\n              valueLabelDisplay='auto'\n              step={0.01}\n              min={0}\n              max={5}\n              size='small'\n              onChange={(event) => {\n                setEdgeForce(event.target.value);\n                setShowConvexHull(false);\n              }}\n              />`\n            </Box>\n          </div>\n        )}\n        {view === 'bar' ? (\n          <div style={{display: 'flex', flexDirection: 'row', alignItems: 'center'}}>\n            <p><strong>Sort:</strong></p>\n            <FormControl sx={{ m: 0, minWidth: 125 }} size=\"small\">\n              <Select\n                value={sortBy}\n                onChange={handleSortByChange}\n              >\n                <MenuItem value={'metric'}>{metric}</MenuItem>\n                <MenuItem value={'size'}>Slice Size</MenuItem>\n              </Select>\n            </FormControl>\n          </div>\n        ) : (\n            <>\n              <p><strong>Size Represents</strong></p>\n              <FormControl sx={{ s: 1, minWidth: 175 }} size=\"small\">\n                <Select\n                  value={nodeSize}\n                  onChange={(event) => {\n                    setNodeSize(event.target.value);\n                    setShowConvexHull(false);\n                  }}\n                >\n                  <MenuItem value={'size'}>Slice Sample Size</MenuItem>\n                  <MenuItem value={'accuracy'}>Balanced Accuracy</MenuItem>\n                </Select>\n              </FormControl>\n              <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                <div style={{width: '75%'}}>\n                  <p><strong>Convex Hull:</strong></p>\n                </div>\n              <Switch\n                checked={showConvexHull}\n                onChange={(event) => {\n                  if (event.target.checked) {\n                    setSwitchDisabled(true);\n                    setTimeout(() => {\n                      setSwitchDisabled(false);\n                    }, 4000);\n                  }\n                  setShowConvexHull(event.target.checked);\n                }}\n                label='Show Convex Hull'\n                className='switch'\n                disabled={switchDisabled}\n              />\n              </div>\n            </>\n        )}\n        <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n          <div style={{width: '75%'}}>\n            <p><strong>Overperforming:</strong></p>\n          </div>\n          <Switch\n            checked={overperforming}\n            onChange={handleSwitchChange}\n            label='Overperforming Slices'\n            />\n        </div>\n        <p><strong>Minimum Slice Size:</strong></p>\n        <Box sx={{width: '10rem', margin: '1rem'}}>\n          <Slider\n            size='small'\n            defaultValue={100}\n            aria-label='Small'\n            value={sampleSize}\n            valueLabelDisplay='auto'\n            min={0}\n            max={250}\n            step={10}\n            onChange={handleSizeChange}\n          />\n        </Box>\n        <div style={{display: 'flex', flexDirection: 'row', alignItems: 'center'}}>\n          <p><strong>Show</strong></p>\n          <FormControl sx={{ s: 1, minWidth: 125 }} size=\"small\">\n            <Select\n              value={show}\n              onChange={(event) => {\n                setShow(event.target.value);\n                setShowConvexHull(false);\n              }}\n            >\n              <MenuItem value={'ten'}>Top 10 Slices</MenuItem>\n              <MenuItem value={'all'}>All Slices</MenuItem>\n            </Select>\n          </FormControl>\n        </div>\n        <p><strong>Features:</strong></p>\n        <FormGroup style={{ marginLeft: '1rem' }}>\n          {featuresData.features.sort().map((feature) => {\n            return <FormControlLabel\n              control={<Checkbox defaultChecked checked={features.includes(feature)} />}\n              label={feature}\n              key={feature}\n              onChange={(event) => handleCheckboxChange(event, feature)}\n            />\n          })}\n        </FormGroup>\n        <Divider style={{ padding: '1rem' }} />\n        <Button\n          variant='outlined'\n          onClick={handleReset}\n          style={{ marginTop: '1rem' }}\n        >\n          Reset\n        </Button>\n      </div>\n      </Drawer>\n  );\n};\n\nexport default LeftDrawer;","import React from 'react';\nimport Drawer from '@mui/material/Drawer';\nimport './RightDrawer.css';\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport RedGradient from './RedGradient.png';\nimport BlueGradient from './BlueGradient.png';\n\nconst RightDrawer = ({ details, metric, overperforming, view, convexHull }) => {\n  const [open, setOpen] = React.useState(true);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    open ? (\n    <Drawer\n      sx={{\n        display: { xs: 'none', sm: 'block' },\n        '& .MuiDrawer-paper': { boxSizing: 'border-box', width: '15rem' },\n      }}\n      variant='persistent'\n      anchor='right'\n      open={open}\n    >\n      {' '}\n      {view === 'bar' ? (\n          <div className='right-container'>\n            <ArrowForwardIosIcon onClick={handleDrawerClose} style={{position: 'relative', left: '-5rem', top: '1rem', opacity: '0.75', cursor: 'pointer'}}/>\n            <h1>Legend</h1>\n            <div style={{ paddingTop: '0.25rem', lineHeight: '0.5rem' }}>\n              <p>\n                <strong>Bar Color:</strong>\n              </p>\n              <p>Performance</p>\n            </div>\n            {/* <img\n              src={overperforming ? BlueGradient : RedGradient}\n              alt='Gradient'\n              style={{\n                width: '13rem',\n                padding: '0',\n                margin: '0',\n                paddingLeft: '0.9rem',\n              }}\n            /> */}\n          </div>\n        ) : (\n            <div className='right-container'>\n            <ArrowForwardIosIcon onClick={handleDrawerClose} style={{position: 'relative', left: '-5rem', top: '1rem', opacity: '0.75', cursor: 'pointer'}}/>\n            <h1>Legend</h1>\n            <div style={{ paddingTop: '0.25rem', lineHeight: '0.5rem' }}>\n              <p>\n                <strong>Node Color:</strong>\n              </p>\n              <p>Performance</p>\n            </div>\n            <div style={{ paddingTop: '0.25rem', lineHeight: '0.5rem' }}>\n              <p>\n                <strong>Node Size:</strong>\n              </p>\n              <p>Slice Sample Size</p>\n            </div>\n            {view === 'graph' && (\n              <div style={{ paddingTop: '0.25rem', lineHeight: '0.5rem' }}>\n                <p>\n                  <strong>Graph Edges:</strong>\n                </p>\n                <p>Overlapping Samples</p>\n              </div>\n            )}\n            {convexHull && (\n              <div style={{ paddingTop: '0.25rem', lineHeight: '0.5rem' }}>\n                <p>\n                  <strong>Convex Hull:</strong>\n                </p>\n                <p>Same Features</p>\n              </div>\n            )}\n          </div>\n        )}\n        {details === null ? (\n          <div className='right-container'>\n            <h1>Selected Slice</h1>\n            <p className='thin'>Click on a slice to view the slice details</p>\n          </div>\n        ) : (\n          <div className='right-container'>\n            <h1>Selected Slice</h1>\n            <div style={{ paddingTop: '0.25rem', lineHeight: '0.5rem' }}>\n              <p>\n                <strong>Slice Definition:</strong>\n              </p>\n              {details.slice.split(', ').map((feature) => {\n                return <p>{feature}</p>;\n              })}\n            </div>\n            <div style={{ paddingTop: '0.25rem', lineHeight: '0.5rem' }}>\n              <p>\n                <strong>Slice Size:</strong>\n              </p>\n              <p> {details?.size} samples</p>\n            </div>\n            <div style={{ paddingTop: '0.25rem', lineHeight: '0.5rem' }}>\n              <p>\n                <strong>Slice {metric}:</strong>\n              </p>\n              <p>{details?.metric?.toFixed(3)}</p>\n            </div>\n            {details?.similarSlices?.length > 0 ? (\n              <div style={{ paddingTop: '0.25rem', lineHeight: '1.25rem' }}>\n                <p>\n                  <strong>Similar Slices:</strong>\n                </p>\n                <ul className='similar-slices-list'>\n                  {details?.similarSlices.map((slice) => (\n                    <li className='similar-slice'>{slice}</li>\n                  ))}\n                </ul>\n              </div>\n            ) : null}\n        </div>\n      )}\n      </Drawer>) :\n      <ArrowBackIosIcon onClick={handleDrawerOpen} style={{position: 'absolute', right: '2rem', top: '2rem', cursor: 'pointer', opacity: '0.75'}}>Open</ArrowBackIosIcon>\n  );\n};\n\nexport default RightDrawer;\n","export default __webpack_public_path__ + \"static/media/RedGradient.fcc885e6.png\";","export default __webpack_public_path__ + \"static/media/BlueGradient.64b1fe13.png\";","import React from 'react';\nimport * as d3 from 'd3';\n\nexport const useD3 = (renderChartFn, dependencies) => {\n  const ref = React.useRef();\n\n  React.useEffect(() => {\n    renderChartFn(d3.select(ref.current));\n    return () => {};\n  }, dependencies);\n  return ref;\n};\n","import { useD3 } from '../../hooks/useD3';\nimport React, { memo } from 'react';\nimport * as d3 from 'd3';\n\nfunction SliceBarChart({\n  data,\n  model,\n  max,\n  overperforming,\n  metric,\n  setDetails,\n}) {\n  const [selected, setSelected] = React.useState(null);\n  const [doneAnimating, setDoneAnimating] = React.useState(false);\n  React.useEffect(() => {\n    setDoneAnimating(false);\n  }, [data]);\n\n  const ref = useD3(\n    (svg) => {\n      const height = 600;\n      const width = 875;\n      const margin = { top: 60, right: 30, bottom: 50, left: 90 };\n\n      let div = d3\n        .select('.tooltip')\n        .style('opacity', 0)\n        .style('width', '200px')\n        .style('height', '150px')\n        .style('padding', '1rem 1rem 0rem 1rem')\n        .style('border-radius', '20px');\n\n      const x = d3\n        .scaleBand()\n        .domain(data.map((d) => d.slice))\n        .rangeRound([margin.left, width - margin.right])\n        .padding(0.1);\n\n      const y1 = d3\n        .scaleLinear()\n        .domain([0, max])\n        .rangeRound([height - margin.bottom, margin.top]);\n\n      const xAxis = (g) =>\n        g\n          .attr('transform', `translate(0,${height - margin.bottom})`)\n          .call(d3.axisBottom(x).tickSizeOuter(0))\n          .selectAll('text')\n          .style(\"font\", \"14px\")\n          .attr('transform', 'translate(-10,0)rotate(-45)')\n          .style('text-anchor', 'end');\n\n      const y1Axis = (g) =>\n        g\n          .attr('transform', `translate(${margin.left},0)`)\n          .style('color', 'steelblue')\n          .call(d3.axisLeft(y1).ticks(null, 's'))\n          .call((g) => g.select('.domain').remove())\n          .call((g) =>\n            g\n              .append('text')\n              .attr('x', -margin.left)\n              .attr('y', 10)\n              .attr('fill', 'currentColor')\n              .attr('text-anchor', 'start')\n              .text(data.y1)\n          );\n\n      svg.select('.x-axis').call(xAxis);\n      svg.select('.y-axis').call(y1Axis);\n\n      svg\n        .select('.plot-area')\n        .selectAll('.bar')\n        .data(data)\n        .join('rect')\n        .attr('class', 'bar')\n        .attr(\"style\", (d) => {\n          if (d.slice === selected) {\n            return \"outline: 3px solid #FFD600;\"\n          }\n        })\n        .style('fill', (d) => {\n          // if (d.slice === selected) {\n          //   return d3.interpolateGreys(0.5);\n          // }\n          if (overperforming)\n            return d3.interpolateBlues(Math.abs((d.metric - model) / model));\n          return d3.interpolateReds(Math.abs((d.metric - model) / model));\n        })\n        .on('mouseover', function (event, d) {\n          d3.select(this).style('opacity', '0.7').style('cursor', 'pointer');\n          div\n            .transition()\n            .duration(200)\n            .style('opacity', 0.9)\n            .style('right', '20%')\n            .style('top', '100px');\n          div.html(\n            '<strong>Slice Description: </strong>' +\n              '<br><div style={{margin: \"1rem\"}}> </div>' +\n              d.slice +\n              '<br>' +\n              '<strong>Size: </strong>' +\n              '<br>' +\n              d.size +\n              ' samples' +\n              '<br>' +\n              '<strong>' +\n              metric +\n              ': ' +\n              '</strong>' +\n              '<br>' +\n              d.metric.toFixed(2) +\n              ' ' +\n              `(${Math.round(((d.metric - model) / model) * 100)}% difference)`\n          );\n        })\n        .on('mouseout', function (d) {\n          d3.select(this).style('opacity', '1');\n          div\n            .transition()\n            .style('opacity', 0)\n        })\n        .on('click', function (event, d) {\n          setSelected(d.slice);\n          setDetails({\n            slice: d.slice,\n            size: d.size,\n            metric: d.metric,\n            similarSlices: [],\n          });\n        })\n        .attr('x', (d) => x(d.slice))\n        .attr('width', x.bandwidth())\n        .attr('y', (d) => y1(0) - margin.bottom)\n        .attr('height', (d) => height - y1(0));\n\n      // Animation\n      if (!doneAnimating) {\n        svg\n          .selectAll('rect')\n          .transition()\n          .duration(800)\n          .attr('y', function (d) {\n            return y1(d.metric) - margin.bottom;\n          })\n          .attr('height', function (d) {\n            return height - y1(d.metric);\n          })\n          .delay(function (d, i) {\n            return i * 100;\n          });\n        setDoneAnimating(true);\n      } else {\n        svg\n          .selectAll('rect')\n          .attr('y', function (d) {\n            return y1(d.metric) - margin.bottom;\n          })\n          .attr('height', function (d) {\n            return height - y1(d.metric);\n          });\n      }\n\n      svg.selectAll('.line').remove();\n      svg.selectAll('.label').remove();\n\n      svg\n        .append('svg:line')\n        .attr('class', 'line')\n        .attr('x1', 60)\n        .attr('x2', width)\n        .attr('y1', y1(model))\n        .attr('y2', y1(model))\n        .style('stroke', '#e6e6e6');\n      svg\n        .append('text')\n        .attr('class', 'label')\n        .text('Model')\n        .attr('x', 0)\n        .attr('y', y1(model) + 5)\n        .style('fill', 'gray');\n      svg\n        .append('text')\n        .attr('class', 'label')\n        .text(metric)\n        .attr('x', 0)\n        .attr('y', y1(model) + 25)\n        .style('fill', 'gray');\n    },\n    [data, metric, selected]\n  );\n\n  return (\n    <div style={{width: '100%'}}>\n      <div\n        className='tooltip'\n        style={{ position: 'absolute', background: 'lightgray', right: '20%', top: '100px' }}\n      ></div>\n      <svg\n        ref={ref}\n        viewBox=\"0 0 875 875\" width=\"80%\" height=\"80%\"\n        style={{\n          margin: 'auto',\n          display: 'block',\n        }}\n      >\n        <g className='plot-area' />\n        <g className='x-axis' />\n        <g className='y-axis' />\n        <g className='label' />\n      </svg>\n    </div>\n  );\n}\n\nexport default memo(SliceBarChart);","import { useD3 } from '../../hooks/useD3';\nimport React, { memo } from 'react';\nimport * as d3 from 'd3';\nimport './ForceLayout.css';\n\nfunction ForceLayout({\n  data,\n  degree,\n  view,\n  metric,\n  model,\n  overperforming,\n  setDetails,\n  radiusType,\n  setShowConvexHull,\n  nodeSize,\n}) {\n  const margin = { top: 50, right: 30, bottom: 70, left: 85 };\n  const width = 800;\n  const height = 800;\n  const hulls = Array.from(Array(100).keys());\n\n  let features = [];\n  const groupings = {};\n\n  data.forEach((obj) => {\n    obj.classifiers = [];\n    let str = obj.slice;\n    while (str.indexOf(':') !== -1) {\n      let temp = str.substring(0, str.indexOf(':'));\n      obj.classifiers.push(temp);\n      if (!features.includes(temp)) features.push(temp);\n      if (degree === obj.classifiers.length) {\n        if (groupings[obj.classifiers.join(', ')])\n          groupings[obj.classifiers.join(', ')]++;\n        else groupings[obj.classifiers.join(', ')] = 1;\n      }\n      if (str.indexOf(',') !== -1) {\n        str = str.substring(str.indexOf(',') + 2);\n      } else {\n        str = '';\n      }\n    }\n  });\n\n  features = features.sort();\n\n  const groupingsArray = Object.keys(groupings)\n    .map((key) => [key, groupings[key]])\n    .sort((a, b) => b[1] - a[1]);\n\n  const topGroupings = groupingsArray.slice(0, 15);\n\n  const x = d3\n    .scaleBand()\n    .domain(features)\n    .rangeRound([margin.left, width - margin.right])\n    .padding(0.1);\n\n  const xAxis = (g) =>\n    g\n      .attr('transform', `translate(0,${height - margin.bottom - 670})`)\n      .call(d3.axisTop(x).tickSizeOuter(0))\n      .selectAll('text')\n      .style(\"font-size\", \"14px\")\n      .attr('transform', 'translate(10,-10)rotate(-45)')\n      .style('text-anchor', 'start');\n\n  const yAxis = (g) =>\n    g\n      .attr('transform', `translate(${margin.left},${30 - margin.bottom})`)\n      .call(d3.axisLeft(x).tickSizeOuter(0))\n      .selectAll('text')\n      .style(\"font-size\", \"14px\")\n      .style('text-anchor', 'end');\n\n  const xAxisGrid = (g) =>\n    g\n      .attr('transform', `translate(0,${height - margin.bottom})`)\n      .call(\n        d3\n          .axisBottom(x)\n          .tickSizeOuter(0)\n          .tickSizeInner(-height - margin.top + 2 * margin.bottom)\n      )\n      .style('opacity', 0.1)\n      .selectAll('text')\n      .style('display', 'none');\n\n  const yAxisGrid = (g) =>\n    g\n      .attr('transform', `translate(${margin.left},${30 - margin.bottom})`)\n      .call(\n        d3\n          .axisLeft(x)\n          .tickSizeOuter(0)\n          .tickSizeInner(-width - margin.right + 2 * margin.left)\n      )\n      .style('opacity', 0.1)\n      .selectAll('text')\n      .style('display', 'none');\n\n  const ref = useD3(\n    (svg) => {\n      let convexHullShowing = false;\n      d3.select('.hull').remove();\n      let div = d3\n        .select('.tooltip')\n        .style('opacity', 0)\n        .style('width', '200px')\n        .style('height', '150px')\n        .style('padding', '1rem 1rem 0 1rem')\n        .style('border-radius', '20px');\n      const xCenter = [];\n      const yCenter = [];\n      for (let i = 0; i < features.length; i++) {\n        xCenter.push(((width - 150) / features.length) * i + 100);\n        yCenter.push(((height - 175) / features.length) * i - 100);\n      }\n      const nodes = data.map((obj) => {\n        return {\n          radius: nodeSize === 'size' ? Math.log(obj.size) * 2 : obj.accuracy * 10,\n          category: obj.degree,\n          xFeature: obj.classifiers[0],\n          yFeature: obj.classifiers[1] ?? obj.classifiers[0],\n          slice: obj.slice,\n          size: obj.size,\n          metric: obj.metric,\n        };\n      });\n\n      const simulation = d3\n        .forceSimulation(nodes)\n        .force('charge', d3.forceManyBody().strength(-5))\n        .force(\n          'x',\n          d3.forceX().x(function (d) {\n            return xCenter[features.indexOf(d.xFeature)] - 20;\n          })\n        )\n        .force(\n          'y',\n          d3.forceY().y(function (d) {\n            if (degree > 1) {\n              return yCenter[features.indexOf(d.yFeature)];\n            } else {\n              return height / 4;\n            }\n          })\n        )\n        .force(\n          'collision',\n          d3.forceCollide().radius(function (d) {\n            return d.radius;\n          })\n        )\n        .on('tick', ticked);\n\n      let bubbles = d3\n        .select('.g')\n        .selectAll('circle')\n        .data(nodes)\n        .join('circle')\n        .attr('class', 'node')\n        .attr('r', function (d) {\n          return d.radius;\n        })\n        .style('fill', function (d) {\n          if (overperforming)\n            return d3.interpolateBlues(Math.abs((d.metric - model) / model));\n          return d3.interpolateReds(Math.abs((d.metric - model) / model));\n        })\n        .style('opacity', function (d) {\n          return '1';\n        });\n      function ticked() {\n        bubbles\n          .attr('cx', function (d) {\n            return d.x;\n          })\n          .attr('cy', function (d) {\n            return d.y;\n          })\n          .on('mouseover', function (event, d) {\n            d3.select(this)\n              .attr('r', d.radius * 1.1)\n              .style('opacity', '0.7')\n              .style('cursor', 'pointer');\n            div\n              .transition()\n              .duration(0)\n              .style('display', 'block')\n              .style('opacity', 0.9)\n              .style('left', (event.clientX + 50) + 'px')\n              .style('top', (event.clientY) + 'px')\n            div.html(\n              '<strong>Slice Description: </strong>' +\n                '<br><div style={{margin: \"1rem\"}}> </div>' +\n                d.slice +\n                '<br>' +\n                '<strong>Size: </strong>' +\n                '<br>' +\n                d.size +\n                ' samples' +\n                '<br>' +\n                '<strong>' +\n                metric +\n                ': ' +\n                '</strong>' +\n                '<br>' +\n                d.metric.toFixed(2) +\n                ' ' +\n                `(${Math.round(\n                  ((d.metric - model) / model) * 100\n                )}% difference)`\n            );\n          })\n          .on('mouseout', function (event, d) {\n            d3.select(this).attr('r', d.radius).style('opacity', '1');\n            div\n              .transition()\n              .duration(50)\n              .style('opacity', 0)\n              .style('display', 'none')\n          })\n          .on('click', function (event, d) {\n            bubbles.style('fill', function (d) {\n              if (event.target.__data__ === d) {\n                return \"#FFD600\"\n              }\n              if (overperforming)\n                return d3.interpolateBlues(\n                  Math.abs((d.metric - model) / model)\n                );\n              return d3.interpolateReds(Math.abs((d.metric - model) / model));\n            });\n            setDetails({\n              slice: d.slice,\n              size: d.size,\n              metric: d.metric,\n              similarSlices: [],\n            });\n          });\n      }\n\n      const convexHull = (g, opacity) => {\n        const colors = ['gray', 'green', 'yellow', 'black', 'purple'];\n        let vertices = [];\n\n        for (let i = 0; i < topGroupings.length; i++) {\n          vertices = [];\n          for (let j = 0; j < nodes.length; j++) {\n            if (\n              nodes[j].xFeature === topGroupings[i][0].split(', ')[0] &&\n              (degree < 2 ||\n                nodes[j].yFeature === topGroupings[i][0].split(', ')[1])\n            ) {\n              if (degree < 2) {\n                vertices.push([nodes[j].x + 50, height / 2]);\n              } else {\n                vertices.push([nodes[j].x + 50, nodes[j].y + 200]);\n              }\n            }\n          }\n          const hull = d3.polygonHull(vertices);\n          const line = d3.line().curve(d3.curveLinearClosed);\n          if (!hull) return;\n          g.append('path')\n            .attr('class', `path${degree}`)\n            .attr('d', line(hull))\n            .attr('fill', colors[0])\n            .attr('stroke', colors[0])\n            .attr('opacity', opacity);\n        }\n      };\n\n      d3.select('.x-axis-grid').call(xAxisGrid);\n      d3.select('.y-axis-grid').call(yAxisGrid);\n      d3.select('.x-axis').call(xAxis);\n      if (degree >= 2) {\n        d3.select('.y-axis').call(yAxis).style('opacity', '1');\n      } else {\n        d3.select('.y-axis').style('opacity', '0');\n      }\n      d3.select('.switch').on('click', (event, d) => {\n        setShowConvexHull(event.target.checked);\n        convexHullShowing = event.target.checked;\n        if (convexHullShowing)\n          d3.select(`.hull`)\n            .style('opacity', '0')\n            .call(convexHull, 0.25)\n            .transition()\n            .duration(500)\n            .style('opacity', '1');\n        else {\n          d3.select(`.hull`).remove();\n          d3.selectAll(`.hull`).transition().duration(0).style('opacity', '0');\n        }\n      });\n    },\n    [data, view]\n  );\n\n  if (view !== 'force') return null;\n\n  return (\n    <div className='force'>\n      <div\n        className='tooltip'\n        style={{ position: 'absolute', background: '#e6e6e6', right: '20%', top: '100px', }}\n      ></div>\n      <svg viewBox=\"0 0 875 875\" width=\"80%\" height=\"100%\" id='force-svg' className='svg' style={{ margin: '0 auto', display: 'block', height: '1000px' }}>\n        <g transform=\"translate(50, 0)\">\n          <g id='force-g' className='g' transform='translate(50, 200)'></g>\n          <g className='x-axis' style={{ padding: '100px' }}/>\n          <g className='y-axis' />\n          <g className='x-axis-grid' />\n          <g className='y-axis-grid' />\n          {hulls.map((hull) => (\n            <g className={'hull'} key={hull} />\n          ))}\n        </g>\n      </svg>\n    </div>\n  );\n}\n\nexport default memo(ForceLayout);","import { useD3 } from '../../hooks/useD3';\nimport React, { memo } from 'react';\nimport * as d3 from 'd3';\nimport './GraphLayout.css';\nimport logLossSamples from '../../data/loglosssamples.json';\nimport reverseLogLossSamples from '../../data/reverseloglosssamples.json';\nimport commonSamples from '../../data/commonSamples.json';\nimport reverseCommonSamples from '../../data/reverseCommonSamples.json';\n\nfunction GraphLayout({\n  data,\n  degree,\n  metric,\n  model,\n  overperforming,\n  radiusType,\n  edgeFiltering,\n  edgeForce,\n  setDetails,\n  cursorMode,\n  algorithm,\n  setShowConvexHull,\n  nodeSize\n}) {\n  const margin = { top: 50, right: 30, bottom: 70, left: 85 };\n  const [value, setValue] = React.useState(0);\n  const hulls = Array.from(Array(100).keys());\n  function useForceUpdate() {\n    return () => setValue((value) => value + 1); // update the state to force render\n  }\n  const forceUpdate = useForceUpdate();\n\n  const width = 800;\n  const height = 800;\n\n  let features = [];\n  const groupings = {};\n\n  let samples;\n  let matches = {};\n\n  switch (metric) {\n    case 'Log Loss':\n      if (overperforming) {\n        samples = reverseLogLossSamples;\n        matches = reverseCommonSamples;\n      } else {\n        matches = commonSamples;\n        samples = logLossSamples;\n      }\n      break;\n    default:\n      if (overperforming) samples = reverseLogLossSamples;\n      else samples = logLossSamples;\n      break;\n  }\n\n  data.forEach((obj) => {\n    obj.classifiers = [];\n    let str = obj.slice;\n    while (str.indexOf(':') !== -1) {\n      let temp = str.substring(0, str.indexOf(':'));\n      obj.classifiers.push(temp);\n      if (!features.includes(temp)) features.push(temp);\n      if (degree === obj.classifiers.length) {\n        if (groupings[obj.classifiers.join(', ')])\n          groupings[obj.classifiers.join(', ')]++;\n        else groupings[obj.classifiers.join(', ')] = 1;\n      }\n      if (str.indexOf(',') !== -1) {\n        str = str.substring(str.indexOf(',') + 2);\n      } else {\n        str = '';\n      }\n    }\n  });\n\n  features = features.sort();\n\n  const groupingsArray = Object.keys(groupings)\n    .map((key) => [key, groupings[key]])\n    .sort((a, b) => b[1] - a[1]);\n\n  const topGroupings = groupingsArray.slice(0, 15);\n\n  const xCenter = [];\n  const yCenter = [];\n\n  const xTickDistance =\n    (width - margin.left - margin.right) / (features.length + 1);\n  const yTickDistance =\n    (height - margin.top - margin.bottom) / (features.length + 2);\n\n  for (let i = 0; i < features.length; i++) {\n    xCenter.push(margin.left + (i + 1) * xTickDistance);\n    yCenter.push(2 * margin.top + (i + 1) * yTickDistance);\n  }\n\n  const x = d3\n    .scaleBand()\n    .domain(features)\n    .rangeRound([margin.left, width - margin.right])\n    .padding(0.1);\n\n  const xAxis = (g) =>\n    g\n      .attr('transform', `translate(0,${height - margin.bottom - 670})`)\n      .call(d3.axisTop(x).tickSizeOuter(0))\n      .selectAll('text')\n      .style(\"font-size\", \"14px\")\n      .attr('transform', 'translate(10,-10)rotate(-45)')\n      .style('text-anchor', 'start');\n\n  const yAxis = (g) =>\n    g\n      .attr('transform', `translate(${margin.left},${30 - margin.bottom})`)\n      .call(d3.axisLeft(x).tickSizeOuter(0))\n      .selectAll('text')\n      .style(\"font-size\", \"14px\")\n      .style('text-anchor', 'end');\n\n  const xAxisGrid = (g) =>\n    g\n      .attr('transform', `translate(0,${height - margin.bottom})`)\n      .call(\n        d3\n          .axisBottom(x)\n          .tickSizeOuter(0)\n          .tickSizeInner(-height - margin.top + 2 * margin.bottom)\n      )\n      .style('opacity', 0.1)\n      .selectAll('text')\n      .style('display', 'none');\n  const yAxisGrid = (g) =>\n    g\n      .attr('transform', `translate(${margin.left},${30 - margin.bottom})`)\n      .call(\n        d3\n          .axisLeft(x)\n          .tickSizeOuter(0)\n          .tickSizeInner(-width - margin.right + 2 * margin.left)\n      )\n      .style('opacity', 0.1)\n      .selectAll('text')\n      .style('display', 'none');\n\n  const nodes = data.map((obj) => {\n    return {\n      radius: nodeSize === 'size' ? Math.log(obj.size) * 2 : obj.accuracy * 10,\n      category: obj.degree,\n      xFeature: obj.classifiers[0],\n      yFeature: obj.classifiers[1] ?? obj.classifiers[0],\n      slice: obj.slice,\n      size: obj.size,\n      metric: obj.metric,\n      classifiers: obj.classifiers,\n    };\n  });\n\n  function countCommonSamples(slice1, slice2) {\n    let arr1 = samples[slice1];\n    let arr2 = samples[slice2];\n    if (!arr1 || !arr2) return 0;\n    arr1 = arr1.sort((a, b) => 0.5 - Math.random()).slice(0, 2000);\n    return arr1.filter((sample) => arr2.includes(sample)).length;\n  }\n\n  let links = [];\n  let common = {};\n\n  for (let i = 0; i < nodes.length; i++) {\n    for (let j = i + 1; j < nodes.length; j++) {\n      const count = matches[nodes[i].slice + '-' + nodes[j].slice];\n      // const count = countCommonSamples(nodes[i].slice, nodes[j].slice);\n      // common[nodes[i].slice + '-' + nodes[j].slice] = count;\n      // common[nodes[j].slice + '-' + nodes[i].slice] = count;\n      if (count > edgeFiltering) {\n        links.push({\n          source: i,\n          target: j,\n          sliceSource: nodes[i].slice,\n          sliceTarget: nodes[j].slice,\n          count: count,\n        });\n      }\n    }\n  }\n\n  // console.log(JSON.stringify(common));\n\n  // const links = [];\n  // console.log(JSON.stringify(links));\n\n  const graph = {\n    nodes: nodes,\n    links: links,\n  };\n\n  function clamp(x, lo, hi) {\n    return x < lo ? lo : x > hi ? hi : x;\n  }\n\n  const ref = useD3(\n    (svg) => {\n      let convexHullShowing = false;\n      d3.select('.hull').remove();\n      svg = d3.select('.svg')\n      let link = svg\n        .selectAll('.link')\n        .attr('class', 'link')\n        .data(graph.links)\n        .join('line')\n        .classed('link', true);\n      const node = svg\n        .selectAll('.node')\n        .data(graph.nodes)\n        .join('circle')\n        .attr('r', function (d) {\n          return d.radius;\n        })\n        .style('fill', function (d) {\n          if (overperforming)\n            return d3.interpolateBlues(Math.abs((d.metric - model) / model));\n          return d3.interpolateReds(Math.abs((d.metric - model) / model));\n        })\n        .classed('node', true)\n        .classed('fixed', (d) => d.fx !== undefined)\n        .on('mouseover', function (event, d) {\n          cursorMode === 'select'\n            ? d3\n                .select(this)\n                .attr('r', d.radius)\n                .style('opacity', '0.7')\n                .style('cursor', 'pointer')\n            : d3\n                .select(this)\n                .attr('r', d.radius)\n                .style('opacity', '0.7')\n                .style('cursor', 'grab');\n          d3.select('.tooltip')\n            .transition()\n            .duration(200)\n            .attr('max-width', '200px')\n            .style('display', 'block')\n            .style('opacity', 0.9)\n            .style('left', (event.clientX + 100) + 'px')\n            .style('top', (event.clientY) + 'px')\n            .style('padding', '1rem 1rem 1rem 1rem')\n          d3.select('.tooltip').html(\n            '<strong>Slice Description: </strong>' +\n              '<br><div style={{margin: \"1rem\"}}> </div>' +\n              d.slice +\n              '<br>' +\n              '<strong>Size: </strong>' +\n              '<br>' +\n              d.size +\n              ' samples' +\n              '<br>' +\n              '<strong>' +\n              metric +\n              ': ' +\n              '</strong>' +\n              '<br>' +\n              d.metric.toFixed(2) +\n              ' ' +\n              `(${Math.round(((d.metric - model) / model) * 100)}% difference)`\n          );\n        })\n        .on('mouseout', function (d, i) {\n          d3.select(this).attr('r', i.radius).style('opacity', '1');\n          d3.select('.tooltip')\n            .transition()\n            .style('opacity', 0)\n            .style('display', 'none')\n        })\n        .on('click', click);\n\n      const simulation = d3\n        .forceSimulation()\n        .nodes(graph.nodes)\n        .force('charge', d3.forceManyBody().strength(-5))\n        // .force('center', d3.forceCenter(width / 2, height / 2).strength(0.1))\n        .force(\n          'x',\n          d3.forceX().x(function (d) {\n            return xCenter[features.indexOf(d.xFeature)];\n          })\n        )\n        .force(\n          'y',\n          d3.forceY().y(function (d) {\n            if (degree > 1) {\n              return yCenter[features.indexOf(d.yFeature)];\n            } else {\n              return height / 2;\n            }\n          })\n        )\n        .force(\n          'link',\n          d3.forceLink(graph.links).strength((d) => {\n            return (d.count / 10000) * edgeForce;\n          })\n        )\n        .force(\n          'collision',\n          d3.forceCollide().radius(function (d) {\n            return d.radius;\n          })\n        )\n        .on('tick', tick);\n      if (cursorMode === 'drag') {\n        const drag = d3.drag().on('start', dragstart).on('drag', dragged);\n\n        node.call(drag).on('click', click);\n      }\n\n      function tick() {\n        link\n          .attr('x1', (d) =>\n            Math.max(Math.min(d.source.x, width), d.source.radius + 100) + 50\n          )\n          .attr('y1', (d) =>\n            Math.max(Math.min(d.source.y, height - 75), d.source.radius)\n          )\n          .attr('x2', (d) =>\n            Math.max(Math.min(d.target.x, width), d.target.radius + 100) + 50\n          )\n          .attr('y2', (d) =>\n            Math.max(Math.min(d.target.y, height - 75), d.target.radius)\n          )\n          .style('stroke-width', (d) =>\n            Math.min(\n              Math.pow(d.count / 2000, 2) * edgeForce,\n              Math.pow(d.count / 2000, 2) * 3\n            )\n          );\n        node\n          .attr('cx', (d) => Math.max(Math.min(d.x, width), d.radius + 100) + 50)\n          .attr('cy', (d) => Math.max(Math.min(d.y, height - 75), d.radius));\n      }\n\n      function click(event, d) {\n        if (cursorMode === 'select') {\n          node.style('fill', function (d) {\n            if (event.target.__data__ === d) {\n              return '#FFD600';\n            }\n            if (overperforming)\n              return d3.interpolateBlues(Math.abs((d.metric - model) / model));\n            return d3.interpolateReds(Math.abs((d.metric - model) / model));\n          });\n          setDetails({\n            slice: d.slice,\n            size: d.size,\n            metric: d.metric,\n            similarSlices: links\n              .sort((a, b) => b.count - a.count)\n              .map((link) => {\n                if (\n                  link.count > edgeFiltering &&\n                  link.sliceSource === d.slice\n                ) {\n                  return link.sliceTarget;\n                } else if (\n                  link.count > edgeFiltering &&\n                  link.sliceTarget === d.slice\n                ) {\n                  return link.sliceSource;\n                }\n                return undefined;\n              })\n              .filter((link) => link !== undefined)\n              .slice(0, 10),\n          });\n        } else {\n          delete d.fx;\n          delete d.fy;\n          d3.select(this).classed('fixed', false);\n          d3.select(this).style('fill', () => {\n            if (overperforming)\n              return d3.interpolateBlues(Math.abs((d.metric - model) / model));\n            return d3.interpolateReds(Math.abs((d.metric - model) / model));\n          });\n          simulation.alpha(1).restart();\n        }\n      }\n\n      function dragstart(event, d) {\n        d3.select(this).classed('fixed', true);\n        d3.select(this).style('fill', '#FFD600');\n        setDetails({\n          slice: d.slice,\n          size: d.size,\n          metric: d.metric,\n          similarSlices: links\n            .sort((a, b) => b.count - a.count)\n            .map((link) => {\n              if (link.count > edgeFiltering && link.sliceSource === d.slice) {\n                return link.sliceTarget;\n              } else if (\n                link.count > edgeFiltering &&\n                link.sliceTarget === d.slice\n              ) {\n                return link.sliceSource;\n              }\n              return undefined;\n            })\n            .filter((link) => link !== undefined)\n            .slice(0, 10),\n        });\n      }\n\n      function dragged(event, d) {\n        d.fx = clamp(event.x, 0, width);\n        d.fy = clamp(event.y, 0, height);\n        simulation.alpha(1).restart();\n      }\n\n      const convexHull = (g, opacity) => {\n        const colors = [\n          'gray',\n          'green',\n          'yellow',\n          'black',\n          'purple',\n          'pink',\n          'red',\n          'orange',\n          'brown',\n          'blue',\n          'cyan',\n          'magenta',\n          'lime',\n          'navy',\n          'olive',\n          'teal',\n          'violet',\n          'wheat',\n        ];\n        let vertices = [];\n\n        for (let i = 0; i < topGroupings.length; i++) {\n          vertices = [];\n          for (let j = 0; j < nodes.length; j++) {\n            if (\n              nodes[j].xFeature === topGroupings[i][0].split(', ')[0] &&\n              (degree < 2 ||\n                nodes[j].yFeature === topGroupings[i][0].split(', ')[1])\n            ) {\n              if (degree < 2) {\n                vertices.push([nodes[j].x, height / 2]);\n              } else {\n                vertices.push([nodes[j].x, nodes[j].y]);\n              }\n            }\n          }\n          const hull = d3.polygonHull(vertices);\n          const line = d3.line().curve(d3.curveLinearClosed);\n          if (!hull) return;\n          g.append('path')\n            .attr('class', `path${degree}`)\n            .attr('d', line(hull))\n            .attr('fill', colors[0])\n            .attr('stroke', colors[0])\n            .attr('opacity', opacity);\n        }\n      };\n\n      svg.select('.x-axis-grid').call(xAxisGrid);\n      svg.select('.y-axis-grid').call(yAxisGrid);\n      svg.select('.x-axis').call(xAxis);\n      if (degree >= 2) {\n        svg.select('.y-axis').call(yAxis).style('opacity', '1');\n      } else {\n        svg.select('.y-axis').style('opacity', '0');\n      }\n      d3.select('.switch').on('click', (event, d) => {\n        setShowConvexHull(event.target.checked);\n        convexHullShowing = event.target.checked;\n        if (convexHullShowing)\n          d3.select(`.hull`)\n            .style('opacity', '0')\n            .call(convexHull, 0.25)\n            .transition()\n            .duration(500)\n            .style('opacity', '1');\n        else {\n          d3.select('.hull').remove();\n          d3.selectAll('.hull').transition().duration(0).style('opacity', '0');\n        }\n      });\n    },\n    [data, value]\n  );\n\n  return (\n    <div className='graph' style={{ overflow: 'scroll'}}>\n      <div\n        className='tooltip'\n        style={{\n          position: 'absolute',\n          background: '#e6e6e6',\n          borderRadius: '20px',\n          padding: '1rem',\n        }}\n      ></div>\n      <svg id='graph-svg' className='svg' viewBox=\"0 0 875 875\" width=\"80%\" height=\"80%\" style={{ margin: '0 auto', display: 'block', height: '1000px' }}>\n        <g transform=\"translate(50, 0)\">\n          <g id='graph-g' className='g' transform='translate(50, 200)'></g>\n          <g className='x-axis' />\n          <g className='y-axis' />\n          <g className='x-axis-grid' />\n          <g className='y-axis-grid' />\n          {hulls.map((hull) => (\n            <g className={'hull'} key={hull} />\n          ))}\n        </g>\n      </svg>\n      <br />\n      {/* <Button\n        variant='outlined'\n        onClick={forceUpdate}\n        style={{ margin: '1rem' }}\n      >\n        Recenter\n      </Button> */}\n    </div>\n  );\n}\n\nexport default memo(GraphLayout);","import React, { memo } from 'react';\nimport SliceBarChart from './SliceBarChart';\nimport './Main.css';\nimport ForceLayout from './ForceLayout';\nimport GraphLayout from './GraphLayout';\n\nimport logloss from '../../data/logloss.json';\nimport reverselogloss from '../../data/reverselogloss.json';\n\nconst Main = ({\n  numFeatures,\n  sampleSize,\n  metric,\n  view,\n  sortBy,\n  overperforming,\n  features,\n  radius,\n  edgeFiltering,\n  edgeForce,\n  setDetails,\n  cursorMode,\n  show,\n  algorithm,\n  setShowConvexHull,\n  nodeSize\n}) => {\n  let data;\n  let reversedata;\n  let modelMetric;\n  if (overperforming) {\n    data = Object.values(reverselogloss['data']).map(\n      (obj) => Object.values(obj)[0]\n    );\n    reversedata = Object.values(logloss['data']).map(\n      (obj) => Object.values(obj)[0]\n    );\n    modelMetric = reverselogloss['model'];\n  } else {\n    data = Object.values(logloss['data']).map(\n      (obj) => Object.values(obj)[0]);\n    reversedata = Object.values(reverselogloss['data']).map(\n      (obj) => Object.values(obj)[0]\n    );\n    modelMetric = logloss['model']\n  }\n  const metricArray = data.map((obj) => obj.metric);\n  const reverseMetricArray = reversedata.map((obj) => obj.metric);\n  const max = Math.max(...metricArray, ...reverseMetricArray, modelMetric);\n  let filteredData = data\n    .filter((obj) => {\n      let sliceStr = obj.slice;\n      while (sliceStr.includes(':')) {\n        if (features.includes(sliceStr.substring(0, sliceStr.indexOf(':')))) {\n          return true;\n        }\n        sliceStr = sliceStr.substring(sliceStr.indexOf(':') + 1);\n      }\n      return false;\n    })\n    .filter((obj) => obj.size >= sampleSize)\n    .filter((obj) => obj.degree <= numFeatures)\n    .sort(function (a, b) {\n      if (sortBy === 'size') return b.size - a.size;\n      if (metric === 'Log Loss') {\n        if (overperforming) return a.metric - b.metric;\n        return b.metric - a.metric;\n      } else {\n        if (overperforming) return b.metric - a.metric;\n        return a.metric - b.metric;\n      }\n    });\n  if (view === 'bar') {\n    filteredData = filteredData.slice(0, 10);\n  } else {\n    filteredData = show === 'ten' ? filteredData.slice(0, 10) : filteredData;\n  }\n  return (\n    <div className='main-container' style={{ display: 'block', margin: 'auto', width: '75%'}}>\n      {view === 'bar' ? (\n        <SliceBarChart\n          data={filteredData}\n          model={modelMetric}\n          max={max}\n          view={view}\n          overperforming={overperforming}\n          metric={metric}\n          setDetails={setDetails}\n        />\n      ) : view === 'force' ? (\n        <ForceLayout\n          data={filteredData}\n          degree={numFeatures}\n          view={view}\n          metric={metric}\n          model={modelMetric}\n          overperforming={overperforming}\n          setDetails={setDetails}\n          radius={radius}\n          setShowConvexHull={setShowConvexHull}\n          nodeSize={nodeSize}\n        />\n      ) : (\n        <GraphLayout\n          data={filteredData}\n          degree={numFeatures}\n          metric={metric}\n          model={modelMetric}\n          overperforming={overperforming}\n          radiusType={radius}\n          edgeFiltering={edgeFiltering}\n          edgeForce={edgeForce}\n          setDetails={setDetails}\n          cursorMode={cursorMode}\n          algorithm={algorithm}\n          setShowConvexHull={setShowConvexHull}\n          nodeSize={nodeSize}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(Main);\n","import React from 'react';\nimport Nav from './components/Nav/Nav';\nimport LeftDrawer from './components/LeftDrawer/LeftDrawer';\nimport RightDrawer from './components/RightDrawer/RightDrawer';\nimport Main from './components/Main/Main';\nimport featuresData from './data/features.json'\n\nwindow.onbeforeunload = function () {\n  window.scrollTo(0, 0);\n};\n\nfunction App() {\n  const [algorithm, setAlgorithm] = React.useState('slicefinder');\n  const [numFeatures, setNumFeatures] = React.useState(2);\n  const [sampleSize, setSampleSize] = React.useState(0);\n  const [metric, setMetric] = React.useState('Log Loss');\n  const [view, setView] = React.useState('force');\n  const [sortBy, setSortBy] = React.useState('metric');\n  const [overperforming, setOverperforming] = React.useState(false);\n  const [radius, setRadius] = React.useState('log');\n  const [edgeFiltering, setEdgeFiltering] = React.useState(500);\n  const [edgeThickness, setEdgeThickness] = React.useState(1);\n  const [edgeForce, setEdgeForce] = React.useState(1);\n  const [cursorMode, setCursorMode] = React.useState('select');\n  const [show, setShow] = React.useState('ten');\n  const [nodeSize, setNodeSize] = React.useState('size')\n  const [features, setFeatures] = React.useState(featuresData.features);\n  const [details, setDetails] = React.useState(null);\n  const setDetailsCallback = React.useCallback((details) => {\n    setDetails(details);\n  }, []);\n  const [showConvexHull, setShowConvexHull] = React.useState(false);\n\n  return (\n    <div className='App'>\n      <Nav\n        view={view}\n        setView={setView}\n        algorithm={algorithm}\n        setAlgorithm={setAlgorithm}\n      />\n      <LeftDrawer\n        numFeatures={numFeatures}\n        setNumFeatures={setNumFeatures}\n        sampleSize={sampleSize}\n        setSampleSize={setSampleSize}\n        metric={metric}\n        setMetric={setMetric}\n        sortBy={sortBy}\n        setSortBy={setSortBy}\n        overperforming={overperforming}\n        setOverperforming={setOverperforming}\n        features={features}\n        setFeatures={setFeatures}\n        view={view}\n        radius={radius}\n        setRadius={setRadius}\n        edgeFiltering={edgeFiltering}\n        setEdgeFiltering={setEdgeFiltering}\n        edgeForce={edgeForce}\n        setEdgeForce={setEdgeForce}\n        cursorMode={cursorMode}\n        setCursorMode={setCursorMode}\n        show={show}\n        setShow={setShow}\n        nodeSize={nodeSize}\n        setNodeSize={setNodeSize}\n        showConvexHull={showConvexHull}\n        setShowConvexHull={setShowConvexHull}\n      />\n      <RightDrawer\n        details={details}\n        metric={metric}\n        overperforming={overperforming}\n        view={view}\n        convexHull={showConvexHull}\n      />\n      <Main\n        numFeatures={numFeatures}\n        sampleSize={sampleSize}\n        metric={metric}\n        view={view}\n        sortBy={sortBy}\n        overperforming={overperforming}\n        features={features}\n        radius={radius}\n        edgeFiltering={edgeFiltering}\n        edgeForce={edgeForce}\n        setDetails={setDetailsCallback}\n        cursorMode={cursorMode}\n        show={show}\n        algorithm={algorithm}\n        setShowConvexHull={setShowConvexHull}\n        nodeSize={nodeSize}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}