{"version":3,"sources":["components/Nav/Nav.js","components/LeftDrawer/LeftDrawer.js","components/RightDrawer/RedGradient.png","components/RightDrawer/BlueGradient.png","hooks/useD3.js","components/Main/SliceBarChart.js","components/Main/ForceLayout.js","components/Main/GraphLayout.js","components/Main/Main.js","App.js","index.js"],"names":["Nav","view","setView","algorithm","setAlgorithm","className","FormControl","sx","s","minWidth","paddingRight","InputLabel","Select","value","label","onChange","event","target","MenuItem","LeftDrawer","numFeatures","setNumFeatures","sampleSize","setSampleSize","setMetric","metric","sortBy","setSortBy","overperforming","setOverperforming","features","setFeatures","edgeFiltering","radius","setRadius","setEdgeFiltering","edgeForce","setEdgeForce","nodeSize","cursorMode","setCursorMode","setNodeSize","nodeColor","setNodeColor","show","setShow","showConvexHull","setShowConvexHull","React","useState","switchDisabled","setSwitchDisabled","Drawer","variant","anchor","display","xs","sm","boxSizing","width","style","margin","lineHeight","Box","Slider","valueLabelDisplay","defaultValue","step","min","max","size","m","Divider","padding","flexDirection","alignItems","Switch","checked","setTimeout","disabled","FormGroup","marginLeft","featuresData","sort","map","feature","FormControlLabel","control","Checkbox","defaultChecked","includes","filter","handleCheckboxChange","Button","onClick","marginTop","useD3","renderChartFn","dependencies","ref","useRef","useEffect","d3","current","SliceBarChart","data","model","setDetails","selected","setSelected","doneAnimating","setDoneAnimating","svg","height","div","x","domain","d","slice","rangeRound","y1","select","call","g","attr","tickSizeOuter","selectAll","ticks","remove","append","text","join","Math","abs","accuracy","on","this","transition","duration","html","toFixed","round","similarSlices","bandwidth","delay","i","position","background","right","top","viewBox","memo","ForceLayout","degree","hulls","Array","from","keys","groupings","forEach","obj","classifiers","str","indexOf","temp","substring","push","length","topGroupings","Object","key","a","b","xAxis","yAxis","xAxisGrid","tickSizeInner","yAxisGrid","xCenter","yCenter","nodes","log","sqrt","category","xFeature","yFeature","bubbles","force","strength","y","clientX","clientY","__data__","convexHull","opacity","colors","vertices","j","split","hull","line","curve","id","transform","GraphLayout","radiusType","matches","reverseLogLossSamples","reverseCommonSamples","commonSamples","logLossSamples","xTickDistance","yTickDistance","links","count","source","sliceSource","sliceTarget","graph","clamp","lo","hi","link","classed","node","undefined","fx","click","simulation","pow","drag","fy","alpha","restart","overflow","borderRadius","Main","reversedata","modelMetric","values","reverselogloss","logloss","metricArray","reverseMetricArray","filteredData","sliceStr","window","onbeforeunload","scrollTo","App","setDetailsCallback","useCallback","details","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.610ea35c.chunk.js","sourcesContent":["import React from 'react';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport './Nav.css';\n\nconst Nav = ({ view, setView, algorithm, setAlgorithm }) => {\n  const handleViewChange = (event) => {\n    setView(event.target.value);\n  };\n\n  const handleAlgorithmChange = (event) => {\n    setAlgorithm(event.target.value);\n  };\n\n  return (\n    <div className='nav-container'>\n      {/* <h1>UCI Adults Dataset</h1> */}\n      <FormControl sx={{ s: 1, minWidth: 175, paddingRight: 1 }}>\n        <InputLabel>View:</InputLabel>\n        <Select value={view} label='View' onChange={handleViewChange}>\n          <MenuItem value={'force'}>Force Layout</MenuItem>\n          <MenuItem value={'graph'}>Graph Layout</MenuItem>\n          <MenuItem value={'bar'}>Bar Chart Layout</MenuItem>\n        </Select>\n      </FormControl>\n      {/* <FormControl sx={{ s: 2, minWidth: 175, paddingRight: 1 }}>\n        <InputLabel>Algorithm:</InputLabel>\n        <Select\n          value={algorithm}\n          label='Algorithm'\n          onChange={handleAlgorithmChange}\n        >\n          <MenuItem value={'slicefinder'}>Slice Finder</MenuItem>\n          <MenuItem value={'sliceline'}>Slice Line</MenuItem>\n        </Select>\n      </FormControl> */}\n    </div>\n  );\n};\n\nexport default Nav;\n","import React from 'react';\nimport Drawer from '@mui/material/Drawer';\nimport Button from '@mui/material/Button';\nimport Slider from '@mui/material/Slider';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Select from '@mui/material/Select';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Divider from '@mui/material/Divider';\nimport Switch from '@mui/material/Switch';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport featuresData from '../../data/features.json'\nimport './LeftDrawer.css';\n\nconst LeftDrawer = ({\n  numFeatures,\n  setNumFeatures,\n  sampleSize,\n  setSampleSize,\n  metric,\n  setMetric,\n  sortBy,\n  setSortBy,\n  overperforming,\n  setOverperforming,\n  features,\n  setFeatures,\n  view,\n  radius,\n  setRadius,\n  edgeFiltering,\n  setEdgeFiltering,\n  edgeForce,\n  setEdgeForce,\n  cursorMode,\n  setCursorMode,\n  nodeSize,\n  setNodeSize,\n  nodeColor,\n  setNodeColor,\n  show,\n  setShow,\n  showConvexHull,\n  setShowConvexHull,\n}) => {\n  const [switchDisabled, setSwitchDisabled] = React.useState(false);\n\n  const handleFeaturesChange = (event) => {\n    setNumFeatures(event.target.value);\n    setShowConvexHull(false);\n  };\n\n  const handleSizeChange = (event) => {\n    setSampleSize(event.target.value);\n    setShowConvexHull(false);\n  };\n\n  const handleShowChange = (event) => {\n    setShow(event.target.value);\n    setShowConvexHull(false);\n  };\n\n  const handleMetricChange = (event) => {\n    setMetric(event.target.value);\n    setShowConvexHull(false);\n  };\n\n  const handleSortByChange = (event) => {\n    setSortBy(event.target.value);\n    setShowConvexHull(false);\n  };\n\n  const handleSwitchChange = (event) => {\n    setOverperforming(event.target.checked);\n    setShowConvexHull(false);\n  };\n\n  const handleCheckboxChange = (event, label) => {\n    if (event.target.checked) {\n      setFeatures([...features, label]);\n    } else {\n      setFeatures(features.filter((feature) => feature !== label));\n    }\n    setShowConvexHull(false);\n  };\n\n  const handleReset = (event) => {\n    setFeatures(featuresData.features);\n    setNumFeatures(2);\n    setSampleSize(0);\n    setMetric('Log Loss');\n    setSortBy('metric');\n    setOverperforming(false);\n    setEdgeFiltering(500);\n    setEdgeForce(1);\n    setShowConvexHull(false);\n    setNodeSize('size')\n    setNodeColor('loss')\n  };\n\n  return (\n    <Drawer\n      variant=\"permanent\"\n      anchor=\"left\"\n      sx={{\n        display: { xs: 'none', sm: 'block' },\n        '& .MuiDrawer-paper': { boxSizing: 'border-box', width: '15rem' },\n      }}\n    >\n      <div className='left-container'>\n        <div style={{margin: '2rem 0', lineHeight: '0.5rem'}}>\n          <h1>Slice Settings</h1>\n          {view !== 'bar' && (<h2>Each slice is a node</h2>)}\n        </div>\n        {view === 'graph' && (\n          <div style={{lineHeight: '0.5'}}>\n            <p><strong>Edge Filtering:</strong></p>\n            <Box sx={{width: '10rem', margin: '0 1rem'}}>\n              <Slider\n                aria-label='Edge Filtering'\n                value={edgeFiltering}\n                valueLabelDisplay='auto'\n                defaultValue={500}\n                step={100}\n                min={0}\n                max={2000}\n                size='small'\n                onChange={(event) => {\n                  setEdgeFiltering(event.target.value);\n                  setShowConvexHull(false);\n                }}\n                />\n            </Box>\n            <p><strong>Edge Force Strength:</strong></p>\n            <Box sx={{width: '10rem', margin: '0 1rem'}}>\n`            <Slider\n              aria-label='Edge Force Strength'\n              defaultValue={1}\n              value={edgeForce}\n              valueLabelDisplay='auto'\n              step={0.01}\n              min={0}\n              max={5}\n              size='small'\n              onChange={(event) => {\n                setEdgeForce(event.target.value);\n                setShowConvexHull(false);\n              }}\n              />`\n            </Box>\n          </div>\n        )}\n        {view === 'bar' ? (\n          <>\n            <p><strong>Sort By:</strong></p>\n            <FormControl sx={{ m: 0, minWidth: 175 }} size=\"small\">\n              <Select\n                value={sortBy}\n                onChange={handleSortByChange}\n              >\n                <MenuItem value={'loss'}>Log Loss</MenuItem>\n                <MenuItem value={'accuracy'}>Balanced Accuracy</MenuItem>\n                <MenuItem value={'size'}>Sample Size</MenuItem>\n              </Select>\n            </FormControl>\n          </>\n        ) : (\n            <>\n              <p><strong>Size Represents</strong></p>\n              <FormControl sx={{ s: 1, minWidth: 175 }} size=\"small\">\n                <Select\n                  value={nodeSize}\n                  onChange={(event) => {\n                    setNodeSize(event.target.value);\n                    setShowConvexHull(false);\n                  }}\n                >\n                  <MenuItem value={'size'}>Slice Sample Size</MenuItem>\n                  <MenuItem value={'accuracy'}>Balanced Accuracy</MenuItem>\n                </Select>\n              </FormControl>\n              <p><strong>Color Represents</strong></p>\n              <FormControl sx={{ s: 1, minWidth: 175 }} size=\"small\">\n                <Select\n                  value={nodeColor}\n                  onChange={(event) => {\n                    setNodeColor(event.target.value);\n                    setShowConvexHull(false);\n                  }}\n                >\n                  <MenuItem value={'loss'}>Log Loss</MenuItem>\n                  <MenuItem value={'accuracy'}>Balanced Accuracy</MenuItem>\n                </Select>\n              </FormControl>\n              <Divider style={{ padding: '1rem' }} />\n              <p><strong>Show top {show} slices</strong></p>\n              <Box sx={{width: '10rem', margin: '1rem'}}>\n                <Slider\n                  size='small'\n                  defaultValue={100}\n                  aria-label='Small'\n                  value={show}\n                  valueLabelDisplay='auto'\n                  min={10}\n                  max={100}\n                  step={10}\n                  onChange={handleShowChange}\n                />\n              </Box>\n              <p><strong>sorted by</strong></p>\n              <FormControl sx={{ s: 1, minWidth: 175 }} size=\"small\">\n                <Select\n                  value={sortBy}\n                  onChange={(event) => {\n                    setSortBy(event.target.value);\n                    setShowConvexHull(false);\n                  }}\n                >\n                  <MenuItem value={'loss'}>Log Loss</MenuItem>\n                  <MenuItem value={'accuracy'}>Balanced Accuracy</MenuItem>\n                  <MenuItem value={'size'}>Sample Size</MenuItem>\n                </Select>\n              </FormControl>\n              <Divider style={{ padding: '1rem' }} />\n              <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n                <div style={{width: '75%'}}>\n                  <p><strong>Convex Hull:</strong></p>\n                </div>\n              <Switch\n                checked={showConvexHull}\n                onChange={(event) => {\n                  if (event.target.checked) {\n                    setSwitchDisabled(true);\n                    setTimeout(() => {\n                      setSwitchDisabled(false);\n                    }, 4000);\n                  }\n                  setShowConvexHull(event.target.checked);\n                }}\n                label='Show Convex Hull'\n                className='switch'\n                disabled={switchDisabled}\n              />\n              </div>\n            </>\n        )}\n        <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\n          <div style={{width: '75%'}}>\n            <p><strong>Overperforming:</strong></p>\n          </div>\n          <Switch\n            checked={overperforming}\n            onChange={handleSwitchChange}\n            label='Overperforming Slices'\n            />\n        </div>\n        <p><strong>Minimum Slice Size:</strong></p>\n        <Box sx={{width: '10rem', margin: '1rem'}}>\n          <Slider\n            size='small'\n            defaultValue={100}\n            aria-label='Small'\n            value={sampleSize}\n            valueLabelDisplay='auto'\n            min={0}\n            max={250}\n            step={10}\n            onChange={handleSizeChange}\n          />\n        </Box>\n        <p><strong>Features:</strong></p>\n        <FormGroup style={{ marginLeft: '1rem' }}>\n          {featuresData.features.sort().map((feature) => {\n            return <FormControlLabel\n              control={<Checkbox defaultChecked checked={features.includes(feature)} />}\n              label={feature}\n              key={feature}\n              onChange={(event) => handleCheckboxChange(event, feature)}\n            />\n          })}\n        </FormGroup>\n        <Divider style={{ padding: '1rem' }} />\n        <Button\n          variant='outlined'\n          onClick={handleReset}\n          style={{ marginTop: '1rem' }}\n        >\n          Reset\n        </Button>\n      </div>\n      </Drawer>\n  );\n};\n\nexport default LeftDrawer;\n","export default __webpack_public_path__ + \"static/media/RedGradient.fcc885e6.png\";","export default __webpack_public_path__ + \"static/media/BlueGradient.64b1fe13.png\";","import React from 'react';\nimport * as d3 from 'd3';\n\nexport const useD3 = (renderChartFn, dependencies) => {\n  const ref = React.useRef();\n\n  React.useEffect(() => {\n    renderChartFn(d3.select(ref.current));\n    return () => {};\n  }, dependencies);\n  return ref;\n};\n","import { useD3 } from '../../hooks/useD3';\nimport React, { memo } from 'react';\nimport * as d3 from 'd3';\n\nfunction SliceBarChart({\n  data,\n  model,\n  max,\n  overperforming,\n  metric,\n  setDetails,\n  nodeColor\n}) {\n  const [selected, setSelected] = React.useState(null);\n  const [doneAnimating, setDoneAnimating] = React.useState(false);\n  React.useEffect(() => {\n    setDoneAnimating(false);\n  }, [data]);\n\n  const ref = useD3(\n    (svg) => {\n      const height = 600;\n      const width = 875;\n      const margin = { top: 60, right: 30, bottom: 50, left: 90 };\n\n      let div = d3\n        .select('.tooltip')\n        .style('opacity', 0)\n        .style('width', '200px')\n        .style('height', '200px')\n        .style('padding', '1rem 1rem 0rem 1rem')\n        .style('border-radius', '20px');\n\n      const x = d3\n        .scaleBand()\n        .domain(data.map((d) => d.slice))\n        .rangeRound([margin.left, width - margin.right])\n        .padding(0.1);\n\n      const y1 = d3\n        .scaleLinear()\n        .domain([0, max])\n        .rangeRound([height - margin.bottom, margin.top]);\n\n      const xAxis = (g) =>\n        g\n          .attr('transform', `translate(0,${height - margin.bottom})`)\n          .call(d3.axisBottom(x).tickSizeOuter(0))\n          .selectAll('text')\n          .style(\"font\", \"14px\")\n          .attr('transform', 'translate(-10,0)rotate(-45)')\n          .style('text-anchor', 'end');\n\n      const y1Axis = (g) =>\n        g\n          .attr('transform', `translate(${margin.left},0)`)\n          .style('color', 'steelblue')\n          .call(d3.axisLeft(y1).ticks(null, 's'))\n          .call((g) => g.select('.domain').remove())\n          .call((g) =>\n            g\n              .append('text')\n              .attr('x', -margin.left)\n              .attr('y', 10)\n              .attr('fill', 'currentColor')\n              .attr('text-anchor', 'start')\n              .text(data.y1)\n          );\n\n      svg.select('.x-axis').call(xAxis);\n      svg.select('.y-axis').call(y1Axis);\n\n      svg\n        .select('.plot-area')\n        .selectAll('.bar')\n        .data(data)\n        .join('rect')\n        .attr('class', 'bar')\n        .attr(\"style\", (d) => {\n          if (d.slice === selected) {\n            return \"outline: 3px solid #FFD600;\"\n          }\n        })\n        .style('fill', (d) => {\n          // if (d.slice === selected) {\n          //   return d3.interpolateGreys(0.5);\n          // }\n          if (overperforming)\n            return d3.interpolateBlues(Math.abs(((nodeColor === 'loss' ? d.metric : d.accuracy) - model) / model));\n          return d3.interpolateReds(Math.abs(((nodeColor === 'loss' ? d.metric : d.accuracy) - model) / model));\n        })\n        .on('mouseover', function (event, d) {\n          d3.select(this).style('opacity', '0.7').style('cursor', 'pointer');\n          div\n            .transition()\n            .duration(200)\n            .style('opacity', 0.9)\n            .style('right', '20%')\n            .style('top', '100px');\n          div.html(\n            '<strong>Slice Description: </strong>' +\n              '<br><div style={{margin: \"1rem\"}}> </div>' +\n              d.slice +\n              '<br><br>' +\n              '<strong>Size: </strong>' +\n              '<br>' +\n              d.size +\n              ' samples' +\n              '<br><br>' +\n              '<strong>' +\n              metric +\n              ': ' +\n              '</strong>' +\n              '<br>' +\n              d.metric.toFixed(2) +\n              ' ' +\n              `(${Math.round(((d.metric - model) / model) * 100)}% difference)`\n          );\n        })\n        .on('mouseout', function (d) {\n          d3.select(this).style('opacity', '1');\n          div\n            .transition()\n            .style('opacity', 0)\n        })\n        .on('click', function (event, d) {\n          setSelected(d.slice);\n          setDetails({\n            slice: d.slice,\n            size: d.size,\n            metric: d.metric,\n            similarSlices: [],\n          });\n        })\n        .attr('x', (d) => x(d.slice))\n        .attr('width', x.bandwidth())\n        .attr('y', (d) => y1(0) - margin.bottom)\n        .attr('height', (d) => height - y1(0));\n\n      // Animation\n      if (!doneAnimating) {\n        svg\n          .selectAll('rect')\n          .transition()\n          .duration(800)\n          .attr('y', function (d) {\n            return y1(d.metric) - margin.bottom;\n          })\n          .attr('height', function (d) {\n            return height - y1(d.metric);\n          })\n          .delay(function (d, i) {\n            return i * 100;\n          });\n        setDoneAnimating(true);\n      } else {\n        svg\n          .selectAll('rect')\n          .attr('y', function (d) {\n            return y1(d.metric) - margin.bottom;\n          })\n          .attr('height', function (d) {\n            return height - y1(d.metric);\n          });\n      }\n\n      svg.selectAll('.line').remove();\n      svg.selectAll('.label').remove();\n\n      svg\n        .append('svg:line')\n        .attr('class', 'line')\n        .attr('x1', 60)\n        .attr('x2', width)\n        .attr('y1', y1(model))\n        .attr('y2', y1(model))\n        .style('stroke', '#e6e6e6');\n      svg\n        .append('text')\n        .attr('class', 'label')\n        .text('Model')\n        .attr('x', 0)\n        .attr('y', y1(model) + 5)\n        .style('fill', 'gray');\n      svg\n        .append('text')\n        .attr('class', 'label')\n        .text(metric)\n        .attr('x', 0)\n        .attr('y', y1(model) + 25)\n        .style('fill', 'gray');\n    },\n    [data, metric, selected]\n  );\n\n  return (\n    <div style={{width: '100%'}}>\n      <div\n        className='tooltip'\n        style={{ position: 'absolute', background: 'lightgray', right: '20%', top: '100px' }}\n      ></div>\n      <svg\n        ref={ref}\n        viewBox=\"0 0 875 875\" width=\"80%\" height=\"80%\"\n        style={{\n          margin: 'auto',\n          display: 'block',\n        }}\n      >\n        <g className='plot-area' />\n        <g className='x-axis' />\n        <g className='y-axis' />\n        <g className='label' />\n      </svg>\n    </div>\n  );\n}\n\nexport default memo(SliceBarChart);","import { useD3 } from '../../hooks/useD3';\nimport React, { memo } from 'react';\nimport * as d3 from 'd3';\nimport './ForceLayout.css';\n\nfunction ForceLayout({\n  data,\n  degree,\n  view,\n  metric,\n  model,\n  overperforming,\n  setDetails,\n  radius,\n  setShowConvexHull,\n  nodeSize,\n  nodeColor,\n}) {\n  const margin = { top: 50, right: 30, bottom: 70, left: 85 };\n  const width = 800;\n  const height = 800;\n  const hulls = Array.from(Array(100).keys());\n\n  let features = [];\n  const groupings = {};\n\n  data.forEach((obj) => {\n    obj.classifiers = [];\n    let str = obj.slice;\n    while (str.indexOf(':') !== -1) {\n      let temp = str.substring(0, str.indexOf(':'));\n      obj.classifiers.push(temp);\n      if (!features.includes(temp)) features.push(temp);\n      if (degree === obj.classifiers.length) {\n        if (groupings[obj.classifiers.join(', ')])\n          groupings[obj.classifiers.join(', ')]++;\n        else groupings[obj.classifiers.join(', ')] = 1;\n      }\n      if (str.indexOf(',') !== -1) {\n        str = str.substring(str.indexOf(',') + 2);\n      } else {\n        str = '';\n      }\n    }\n  });\n\n  features = features.sort();\n\n  const groupingsArray = Object.keys(groupings)\n    .map((key) => [key, groupings[key]])\n    .sort((a, b) => b[1] - a[1]);\n\n  const topGroupings = groupingsArray.slice(0, 15);\n\n  const x = d3\n    .scaleBand()\n    .domain(features)\n    .rangeRound([margin.left, width - margin.right])\n    .padding(0.1);\n\n  const xAxis = (g) =>\n    g\n      .attr('transform', `translate(0,${height - margin.bottom - 670})`)\n      .attr('class', 'xAxis')\n      .call(d3.axisTop(x).tickSizeOuter(0))\n      .selectAll('text')\n      .style(\"font-size\", \"14px\")\n      .attr('transform', 'translate(10,-10)rotate(-45)')\n      .style('text-anchor', 'start');\n\n  const yAxis = (g) =>\n    g\n      .attr('transform', `translate(${margin.left},${30 - margin.bottom})`)\n      .attr('class', 'xAxis')\n      .call(d3.axisLeft(x).tickSizeOuter(0))\n      .selectAll('text')\n      .style(\"font-size\", \"14px\")\n      .style('text-anchor', 'end');\n\n  const xAxisGrid = (g) =>\n    g\n      .attr('transform', `translate(0,${height - margin.bottom})`)\n      .call(\n        d3\n          .axisBottom(x)\n          .tickSizeOuter(0)\n          .tickSizeInner(-height - margin.top + 2 * margin.bottom)\n      )\n      .style('opacity', 0.1)\n      .selectAll('text')\n      .style('display', 'none');\n\n  const yAxisGrid = (g) =>\n    g\n      .attr('transform', `translate(${margin.left},${30 - margin.bottom})`)\n      .call(\n        d3\n          .axisLeft(x)\n          .tickSizeOuter(0)\n          .tickSizeInner(-width - margin.right + 2 * margin.left)\n      )\n      .style('opacity', 0.1)\n      .selectAll('text')\n      .style('display', 'none');\n\n  const ref = useD3(\n    (svg) => {\n      let convexHullShowing = false;\n      d3.select('.hull').remove();\n      let div = d3\n        .select('.tooltip')\n        .style('opacity', 0)\n        .style('width', '200px')\n        .style('height', '200px')\n        .style('padding', '1rem 1rem 0 1rem')\n        .style('border-radius', '20px');\n      const xCenter = [];\n      const yCenter = [];\n      for (let i = 0; i < features.length; i++) {\n        xCenter.push(((width - 150) / features.length) * i + 100);\n        yCenter.push(((height - 175) / features.length) * i - 100);\n      }\n      const nodes = data.map((obj) => {\n        return {\n          radius: nodeSize === 'size' ? Math.log(obj.size) * 2 : Math.sqrt(obj.accuracy) * 10,\n          category: obj.degree,\n          xFeature: obj.classifiers[0],\n          yFeature: obj.classifiers[1] ?? obj.classifiers[0],\n          slice: obj.slice,\n          size: obj.size,\n          metric: obj.metric,\n          accuracy: obj.accuracy,\n        };\n      });\n\n      const simulation = d3\n        .forceSimulation(nodes)\n        .force('charge', d3.forceManyBody().strength(-5))\n        .force(\n          'x',\n          d3.forceX().x(function (d) {\n            return xCenter[features.indexOf(d.xFeature)] - 20;\n          })\n        )\n        .force(\n          'y',\n          d3.forceY().y(function (d) {\n            if (degree > 1) {\n              return yCenter[features.indexOf(d.yFeature)];\n            } else {\n              return height / 4;\n            }\n          })\n        )\n        .force(\n          'collision',\n          d3.forceCollide().radius(function (d) {\n            return d.radius;\n          })\n        )\n        .on('tick', ticked);\n\n      let bubbles = d3\n        .select('.g')\n        .selectAll('circle')\n        .data(nodes)\n        .join('circle')\n        .attr('class', 'node')\n        .attr('r', function (d) {\n          return d.radius;\n        })\n        .style('fill', function (d) {\n          if (overperforming)\n            return d3.interpolateBlues(Math.abs((nodeColor === 'loss' ? (d.metric - model) / model : d.accuracy)));\n          return d3.interpolateReds(Math.abs((nodeColor === 'loss' ? (d.metric - model) / model : d.accuracy)));\n        })\n        .style('opacity', function (d) {\n          return '1';\n        });\n      function ticked() {\n        bubbles\n          .attr('cx', function (d) {\n            return d.x;\n          })\n          .attr('cy', function (d) {\n            return d.y;\n          })\n          .on('mouseover', function (event, d) {\n            d3.select(this)\n              .attr('r', d.radius * 1.1)\n              .style('opacity', '0.7')\n              .style('cursor', 'pointer');\n            div\n              .transition()\n              .duration(0)\n              .style('display', 'block')\n              .style('opacity', 0.9)\n              .style('left', (event.clientX + 50) + 'px')\n              .style('top', (event.clientY) + 'px')\n            div.html(\n                '<strong>Slice Description: </strong>' +\n                '<br><div style={{margin: \"1rem\"}}> </div>' +\n                d.slice +\n                '<br><br>' +\n                '<strong>Size: </strong>' +\n                '<br>' +\n                d.size +\n                ' samples' +\n                '<br><br>' +\n                '<strong>' +\n                metric +\n                ': ' +\n                '</strong>' +\n                '<br>' +\n                d.metric.toFixed(2) +\n                ' ' +\n                `(${Math.round(\n                  ((d.metric - model) / model) * 100\n                )}% difference)`\n            );\n          })\n          .on('mouseout', function (event, d) {\n            d3.select(this).attr('r', d.radius).style('opacity', '1');\n            div\n              .transition()\n              .duration(50)\n              .style('opacity', 0)\n              .style('display', 'none')\n          })\n          .on('click', function (event, d) {\n            bubbles.style('fill', function (d) {\n              if (event.target.__data__ === d) {\n                return \"#FFD600\"\n              }\n              if (overperforming)\n                return d3.interpolateBlues(Math.abs((nodeColor === 'loss' ? (d.metric - model) / model : d.accuracy)))\n              return d3.interpolateReds(Math.abs((nodeColor === 'loss' ? (d.metric - model) / model : d.accuracy)))\n            });\n            setDetails({\n              slice: d.slice,\n              size: d.size,\n              metric: d.metric,\n              similarSlices: [],\n            });\n          });\n      }\n\n      const convexHull = (g, opacity) => {\n        const colors = ['gray', 'green', 'yellow', 'black', 'purple'];\n        let vertices = [];\n\n        for (let i = 0; i < topGroupings.length; i++) {\n          vertices = [];\n          for (let j = 0; j < nodes.length; j++) {\n            if (\n              nodes[j].xFeature === topGroupings[i][0].split(', ')[0] &&\n              (degree < 2 ||\n                nodes[j].yFeature === topGroupings[i][0].split(', ')[1])\n            ) {\n              if (degree < 2) {\n                vertices.push([nodes[j].x + 50, height / 2]);\n              } else {\n                vertices.push([nodes[j].x + 50, nodes[j].y + 200]);\n              }\n            }\n          }\n          const hull = d3.polygonHull(vertices);\n          const line = d3.line().curve(d3.curveLinearClosed);\n          if (!hull) return;\n          g.append('path')\n            .attr('class', `path${degree}`)\n            .attr('d', line(hull))\n            .attr('fill', colors[0])\n            .attr('stroke', colors[0])\n            .attr('opacity', opacity);\n        }\n      };\n\n      d3.select('.x-axis-grid').call(xAxisGrid);\n      d3.select('.y-axis-grid').call(yAxisGrid);\n      d3.select('.x-axis').call(xAxis);\n      if (degree >= 2) {\n        d3.select('.y-axis').call(yAxis).style('opacity', '1');\n      } else {\n        d3.select('.y-axis').style('opacity', '0');\n      }\n      d3.select('.switch').on('click', (event, d) => {\n        setShowConvexHull(event.target.checked);\n        convexHullShowing = event.target.checked;\n        if (convexHullShowing)\n          d3.select(`.hull`)\n            .style('opacity', '0')\n            .call(convexHull, 0.25)\n            .transition()\n            .duration(500)\n            .style('opacity', '1');\n        else {\n          d3.select(`.hull`).remove();\n          d3.selectAll(`.hull`).transition().duration(0).style('opacity', '0');\n        }\n      });\n    },\n    [data, view]\n  );\n\n  if (view !== 'force') return null;\n\n  return (\n    <div className='force'>\n      <div\n        className='tooltip'\n        style={{ position: 'absolute', background: '#e6e6e6', right: '20%', top: '100px', }}\n      ></div>\n      <svg viewBox=\"0 0 875 875\" width=\"80%\" height=\"100%\" id='force-svg' className='svg' style={{ margin: '0 auto', display: 'block', height: '1000px' }}>\n        <g transform=\"translate(50, 0)\">\n          <g id='force-g' className='g' transform='translate(50, 200)'></g>\n          <g className='x-axis' style={{ padding: '100px' }}/>\n          <g className='y-axis' />\n          <g className='x-axis-grid' />\n          <g className='y-axis-grid' />\n          {hulls.map((hull) => (\n            <g className={'hull'} key={hull} />\n          ))}\n        </g>\n      </svg>\n    </div>\n  );\n}\n\nexport default memo(ForceLayout);","import { useD3 } from '../../hooks/useD3';\nimport React, { memo } from 'react';\nimport * as d3 from 'd3';\nimport './GraphLayout.css';\nimport logLossSamples from '../../data/loglosssamples.json';\nimport reverseLogLossSamples from '../../data/reverseloglosssamples.json';\nimport commonSamples from '../../data/commonSamples.json';\nimport reverseCommonSamples from '../../data/reverseCommonSamples.json';\n\nfunction GraphLayout({\n  data,\n  degree,\n  metric,\n  model,\n  overperforming,\n  radiusType,\n  edgeFiltering,\n  edgeForce,\n  setDetails,\n  cursorMode,\n  algorithm,\n  setShowConvexHull,\n  nodeSize,\n  nodeColor\n}) {\n  const margin = { top: 50, right: 30, bottom: 70, left: 85 };\n  const [value, setValue] = React.useState(0);\n  const hulls = Array.from(Array(100).keys());\n  function useForceUpdate() {\n    return () => setValue((value) => value + 1); // update the state to force render\n  }\n  const forceUpdate = useForceUpdate();\n\n  const width = 800;\n  const height = 800;\n\n  let features = [];\n  const groupings = {};\n\n  let samples;\n  let matches = {};\n\n  switch (metric) {\n    case 'Log Loss':\n      if (overperforming) {\n        samples = reverseLogLossSamples;\n        matches = reverseCommonSamples;\n      } else {\n        matches = commonSamples;\n        samples = logLossSamples;\n      }\n      break;\n    default:\n      if (overperforming) samples = reverseLogLossSamples;\n      else samples = logLossSamples;\n      break;\n  }\n\n  data.forEach((obj) => {\n    obj.classifiers = [];\n    let str = obj.slice;\n    while (str.indexOf(':') !== -1) {\n      let temp = str.substring(0, str.indexOf(':'));\n      obj.classifiers.push(temp);\n      if (!features.includes(temp)) features.push(temp);\n      if (degree === obj.classifiers.length) {\n        if (groupings[obj.classifiers.join(', ')])\n          groupings[obj.classifiers.join(', ')]++;\n        else groupings[obj.classifiers.join(', ')] = 1;\n      }\n      if (str.indexOf(',') !== -1) {\n        str = str.substring(str.indexOf(',') + 2);\n      } else {\n        str = '';\n      }\n    }\n  });\n\n  features = features.sort();\n\n  const groupingsArray = Object.keys(groupings)\n    .map((key) => [key, groupings[key]])\n    .sort((a, b) => b[1] - a[1]);\n\n  const topGroupings = groupingsArray.slice(0, 15);\n\n  const xCenter = [];\n  const yCenter = [];\n\n  const xTickDistance =\n    (width - margin.left - margin.right) / (features.length + 1);\n  const yTickDistance =\n    (height - margin.top - margin.bottom) / (features.length + 2);\n\n  for (let i = 0; i < features.length; i++) {\n    xCenter.push(margin.left + (i + 1) * xTickDistance);\n    yCenter.push(2 * margin.top + (i + 1) * yTickDistance);\n  }\n\n  const x = d3\n    .scaleBand()\n    .domain(features)\n    .rangeRound([margin.left, width - margin.right])\n    .padding(0.1);\n\n  const xAxis = (g) =>\n    g\n      .attr('transform', `translate(0,${height - margin.bottom - 670})`)\n      .attr('class', 'xAxis')\n      .call(d3.axisTop(x).tickSizeOuter(0))\n      .selectAll('text')\n      .style(\"font-size\", \"14px\")\n      .attr('transform', 'translate(10,-10)rotate(-45)')\n      .style('text-anchor', 'start');\n\n  const yAxis = (g) =>\n    g\n      .attr('transform', `translate(${margin.left},${30 - margin.bottom})`)\n      .attr('class', 'xAxis')\n      .call(d3.axisLeft(x).tickSizeOuter(0))\n      .selectAll('text')\n      .style(\"font-size\", \"14px\")\n      .style('text-anchor', 'end');\n\n  const xAxisGrid = (g) =>\n    g\n      .attr('transform', `translate(0,${height - margin.bottom})`)\n      .call(\n        d3\n          .axisBottom(x)\n          .tickSizeOuter(0)\n          .tickSizeInner(-height - margin.top + 2 * margin.bottom)\n      )\n      .style('opacity', 0.1)\n      .selectAll('text')\n      .style('display', 'none');\n  const yAxisGrid = (g) =>\n    g\n      .attr('transform', `translate(${margin.left},${30 - margin.bottom})`)\n      .call(\n        d3\n          .axisLeft(x)\n          .tickSizeOuter(0)\n          .tickSizeInner(-width - margin.right + 2 * margin.left)\n      )\n      .style('opacity', 0.1)\n      .selectAll('text')\n      .style('display', 'none');\n\n  const nodes = data.map((obj) => {\n    return {\n      radius: nodeSize === 'size' ? Math.log(obj.size) * 2 : Math.sqrt(obj.accuracy) * 10,\n      category: obj.degree,\n      xFeature: obj.classifiers[0],\n      yFeature: obj.classifiers[1] ?? obj.classifiers[0],\n      slice: obj.slice,\n      size: obj.size,\n      metric: obj.metric,\n      classifiers: obj.classifiers,\n    };\n  });\n\n  function countCommonSamples(slice1, slice2) {\n    let arr1 = samples[slice1];\n    let arr2 = samples[slice2];\n    if (!arr1 || !arr2) return 0;\n    arr1 = arr1.sort((a, b) => 0.5 - Math.random()).slice(0, 2000);\n    return arr1.filter((sample) => arr2.includes(sample)).length;\n  }\n\n  let links = [];\n  let common = {};\n\n  for (let i = 0; i < nodes.length; i++) {\n    for (let j = i + 1; j < nodes.length; j++) {\n      const count = matches[nodes[i].slice + '-' + nodes[j].slice];\n      // const count = countCommonSamples(nodes[i].slice, nodes[j].slice);\n      // common[nodes[i].slice + '-' + nodes[j].slice] = count;\n      // common[nodes[j].slice + '-' + nodes[i].slice] = count;\n      if (count > edgeFiltering) {\n        links.push({\n          source: i,\n          target: j,\n          sliceSource: nodes[i].slice,\n          sliceTarget: nodes[j].slice,\n          count: count,\n        });\n      }\n    }\n  }\n\n  // console.log(JSON.stringify(common));\n\n  // const links = [];\n  // console.log(JSON.stringify(links));\n\n  const graph = {\n    nodes: nodes,\n    links: links,\n  };\n\n  function clamp(x, lo, hi) {\n    return x < lo ? lo : x > hi ? hi : x;\n  }\n\n  const ref = useD3(\n    (svg) => {\n      let convexHullShowing = false;\n      d3.select('.hull').remove();\n      svg = d3.select('.svg')\n      let link = svg\n        .selectAll('.link')\n        .attr('class', 'link')\n        .data(graph.links)\n        .join('line')\n        .classed('link', true);\n      const node = svg\n        .selectAll('.node')\n        .data(graph.nodes)\n        .join('circle')\n        .attr('r', function (d) {\n          return d.radius;\n        })\n        .style('fill', function (d) {\n          if (overperforming)\n            return d3.interpolateBlues(Math.abs((nodeColor === 'loss' ? (d.metric - model) / model : d.accuracy)));\n          return d3.interpolateReds(Math.abs((nodeColor === 'loss' ? (d.metric - model) / model : d.accuracy)));\n        })\n        .classed('node', true)\n        .classed('fixed', (d) => d.fx !== undefined)\n        .on('mouseover', function (event, d) {\n          cursorMode === 'select'\n            ? d3\n                .select(this)\n                .attr('r', d.radius)\n                .style('opacity', '0.7')\n                .style('cursor', 'pointer')\n            : d3\n                .select(this)\n                .attr('r', d.radius)\n                .style('opacity', '0.7')\n                .style('cursor', 'grab');\n          d3.select('.tooltip')\n            .transition()\n            .duration(200)\n            .attr('max-width', '200px')\n            .style('display', 'block')\n            .style('opacity', 0.9)\n            .style('left', (event.clientX + 100) + 'px')\n            .style('top', (event.clientY) + 'px')\n            .style('padding', '1rem 1rem 1rem 1rem')\n          d3.select('.tooltip').html(\n            '<strong>Slice Description: </strong>' +\n              '<br><div style={{margin: \"1rem\"}}> </div>' +\n              d.slice +\n              '<br><br>' +\n              '<strong>Size: </strong>' +\n              '<br>' +\n              d.size +\n              ' samples' +\n              '<br><br>' +\n              '<strong>' +\n              metric +\n              ': ' +\n              '</strong>' +\n              '<br>' +\n              d.metric.toFixed(2) +\n              ' ' +\n              `(${Math.round(((d.metric - model) / model) * 100)}% difference)`\n          );\n        })\n        .on('mouseout', function (d, i) {\n          d3.select(this).attr('r', i.radius).style('opacity', '1');\n          d3.select('.tooltip')\n            .transition()\n            .style('opacity', 0)\n            .style('display', 'none')\n        })\n        .on('click', click);\n\n      const simulation = d3\n        .forceSimulation()\n        .nodes(graph.nodes)\n        .force('charge', d3.forceManyBody().strength(-5))\n        // .force('center', d3.forceCenter(width / 2, height / 2).strength(0.1))\n        .force(\n          'x',\n          d3.forceX().x(function (d) {\n            return xCenter[features.indexOf(d.xFeature)];\n          })\n        )\n        .force(\n          'y',\n          d3.forceY().y(function (d) {\n            if (degree > 1) {\n              return yCenter[features.indexOf(d.yFeature)];\n            } else {\n              return height / 2;\n            }\n          })\n        )\n        .force(\n          'link',\n          d3.forceLink(graph.links).strength((d) => {\n            return (d.count / 100000) * edgeForce;\n          })\n        )\n        .force(\n          'collision',\n          d3.forceCollide().radius(function (d) {\n            return d.radius;\n          })\n        )\n        .on('tick', tick);\n      if (cursorMode === 'drag') {\n        const drag = d3.drag().on('start', dragstart).on('drag', dragged);\n\n        node.call(drag).on('click', click);\n      }\n\n      function tick() {\n        link\n          .attr('x1', (d) =>\n            Math.max(Math.min(d.source.x, width), d.source.radius + 100) + 50\n          )\n          .attr('y1', (d) =>\n            Math.max(Math.min(d.source.y, height - 75), d.source.radius)\n          )\n          .attr('x2', (d) =>\n            Math.max(Math.min(d.target.x, width), d.target.radius + 100) + 50\n          )\n          .attr('y2', (d) =>\n            Math.max(Math.min(d.target.y, height - 75), d.target.radius)\n          )\n          .style('stroke-width', (d) =>\n            Math.min(\n              Math.pow(d.count / 2000, 2) * edgeForce,\n              Math.pow(d.count / 2000, 2) * 3\n            )\n          );\n        node\n          .attr('cx', (d) => Math.max(Math.min(d.x, width), d.radius + 100) + 50)\n          .attr('cy', (d) => Math.max(Math.min(d.y, height - 75), d.radius));\n      }\n\n      function click(event, d) {\n        if (cursorMode === 'select') {\n          node.style('fill', function (d) {\n            if (event.target.__data__ === d) {\n              return '#FFD600';\n            }\n            if (overperforming)\n              return d3.interpolateBlues(Math.abs((nodeColor === 'loss' ? (d.metric - model) / model : d.accuracy)));\n            return d3.interpolateReds(Math.abs((nodeColor === 'loss' ? (d.metric - model) / model : d.accuracy)));\n          });\n          setDetails({\n            slice: d.slice,\n            size: d.size,\n            metric: d.metric,\n            similarSlices: links\n              .sort((a, b) => b.count - a.count)\n              .map((link) => {\n                if (\n                  link.count > edgeFiltering &&\n                  link.sliceSource === d.slice\n                ) {\n                  return link.sliceTarget;\n                } else if (\n                  link.count > edgeFiltering &&\n                  link.sliceTarget === d.slice\n                ) {\n                  return link.sliceSource;\n                }\n                return undefined;\n              })\n              .filter((link) => link !== undefined)\n              .slice(0, 10),\n          });\n        } else {\n          delete d.fx;\n          delete d.fy;\n          d3.select(this).classed('fixed', false);\n          d3.select(this).style('fill', () => {\n            if (overperforming)\n              return d3.interpolateBlues(Math.abs((nodeColor === 'loss' ? (d.metric - model) / model : d.accuracy)));\n            return d3.interpolateReds(Math.abs((nodeColor === 'loss' ? (d.metric - model) / model : d.accuracy)));\n          });\n          simulation.alpha(1).restart();\n        }\n      }\n\n      function dragstart(event, d) {\n        d3.select(this).classed('fixed', true);\n        d3.select(this).style('fill', '#FFD600');\n        setDetails({\n          slice: d.slice,\n          size: d.size,\n          metric: d.metric,\n          similarSlices: links\n            .sort((a, b) => b.count - a.count)\n            .map((link) => {\n              if (link.count > edgeFiltering && link.sliceSource === d.slice) {\n                return link.sliceTarget;\n              } else if (\n                link.count > edgeFiltering &&\n                link.sliceTarget === d.slice\n              ) {\n                return link.sliceSource;\n              }\n              return undefined;\n            })\n            .filter((link) => link !== undefined)\n            .slice(0, 10),\n        });\n      }\n\n      function dragged(event, d) {\n        d.fx = clamp(event.x, 0, width);\n        d.fy = clamp(event.y, 0, height);\n        simulation.alpha(1).restart();\n      }\n\n      const convexHull = (g, opacity) => {\n        const colors = [\n          'gray',\n          'green',\n          'yellow',\n          'black',\n          'purple',\n          'pink',\n          'red',\n          'orange',\n          'brown',\n          'blue',\n          'cyan',\n          'magenta',\n          'lime',\n          'navy',\n          'olive',\n          'teal',\n          'violet',\n          'wheat',\n        ];\n        let vertices = [];\n\n        for (let i = 0; i < topGroupings.length; i++) {\n          vertices = [];\n          for (let j = 0; j < nodes.length; j++) {\n            if (\n              nodes[j].xFeature === topGroupings[i][0].split(', ')[0] &&\n              (degree < 2 ||\n                nodes[j].yFeature === topGroupings[i][0].split(', ')[1])\n            ) {\n              if (degree < 2) {\n                vertices.push([nodes[j].x, height / 2]);\n              } else {\n                vertices.push([nodes[j].x, nodes[j].y]);\n              }\n            }\n          }\n          const hull = d3.polygonHull(vertices);\n          const line = d3.line().curve(d3.curveLinearClosed);\n          if (!hull) return;\n          g.append('path')\n            .attr('class', `path${degree}`)\n            .attr('d', line(hull))\n            .attr('fill', colors[0])\n            .attr('stroke', colors[0])\n            .attr('opacity', opacity);\n        }\n      };\n\n      svg.select('.x-axis-grid').call(xAxisGrid);\n      svg.select('.y-axis-grid').call(yAxisGrid);\n      svg.select('.x-axis').call(xAxis);\n      if (degree >= 2) {\n        svg.select('.y-axis').call(yAxis).style('opacity', '1');\n      } else {\n        svg.select('.y-axis').style('opacity', '0');\n      }\n      d3.select('.switch').on('click', (event, d) => {\n        setShowConvexHull(event.target.checked);\n        convexHullShowing = event.target.checked;\n        if (convexHullShowing)\n          d3.select(`.hull`)\n            .style('opacity', '0')\n            .call(convexHull, 0.25)\n            .transition()\n            .duration(500)\n            .style('opacity', '1');\n        else {\n          d3.select('.hull').remove();\n          d3.selectAll('.hull').transition().duration(0).style('opacity', '0');\n        }\n      });\n    },\n    [data, value]\n  );\n\n  return (\n    <div className='graph' style={{ overflow: 'scroll'}}>\n      <div\n        className='tooltip'\n        style={{\n          position: 'absolute',\n          background: '#e6e6e6',\n          borderRadius: '20px',\n          padding: '1rem',\n        }}\n      ></div>\n      <svg id='graph-svg' className='svg' viewBox=\"0 0 875 875\" width=\"80%\" height=\"80%\" style={{ margin: '0 auto', display: 'block', height: '1000px' }}>\n        <g transform=\"translate(50, 0)\">\n          <g id='graph-g' className='g' transform='translate(50, 200)'></g>\n          <g className='x-axis' />\n          <g className='y-axis' />\n          <g className='x-axis-grid' />\n          <g className='y-axis-grid' />\n          {hulls.map((hull) => (\n            <g className={'hull'} key={hull} />\n          ))}\n        </g>\n      </svg>\n      <br />\n      {/* <Button\n        variant='outlined'\n        onClick={forceUpdate}\n        style={{ margin: '1rem' }}\n      >\n        Recenter\n      </Button> */}\n    </div>\n  );\n}\n\nexport default memo(GraphLayout);","import React, { memo } from 'react';\nimport SliceBarChart from './SliceBarChart';\nimport './Main.css';\nimport ForceLayout from './ForceLayout';\nimport GraphLayout from './GraphLayout';\n\nimport logloss from '../../data/logloss.json';\nimport reverselogloss from '../../data/reverselogloss.json';\n\nconst Main = ({\n  numFeatures,\n  sampleSize,\n  metric,\n  view,\n  sortBy,\n  overperforming,\n  features,\n  radius,\n  edgeFiltering,\n  edgeForce,\n  setDetails,\n  cursorMode,\n  show,\n  algorithm,\n  setShowConvexHull,\n  nodeSize,\n  nodeColor\n}) => {\n  let data;\n  let reversedata;\n  let modelMetric;\n  if (overperforming) {\n    data = Object.values(reverselogloss['data']).map(\n      (obj) => Object.values(obj)[0]\n    );\n    reversedata = Object.values(logloss['data']).map(\n      (obj) => Object.values(obj)[0]\n    );\n    modelMetric = reverselogloss['model'];\n  } else {\n    data = Object.values(logloss['data']).map(\n      (obj) => Object.values(obj)[0]);\n    reversedata = Object.values(reverselogloss['data']).map(\n      (obj) => Object.values(obj)[0]\n    );\n    modelMetric = logloss['model']\n  }\n  const metricArray = data.map((obj) => obj.metric);\n  const reverseMetricArray = reversedata.map((obj) => obj.metric);\n  const max = Math.max(...metricArray, ...reverseMetricArray, modelMetric);\n  let filteredData = data\n    .filter((obj) => {\n      let sliceStr = obj.slice;\n      while (sliceStr.includes(':')) {\n        if (features.includes(sliceStr.substring(0, sliceStr.indexOf(':')))) {\n          return true;\n        }\n        sliceStr = sliceStr.substring(sliceStr.indexOf(':') + 1);\n      }\n      return false;\n    })\n    .filter((obj) => obj.size >= sampleSize)\n    .filter((obj) => obj.degree <= numFeatures)\n    .sort(function (a, b) {\n      if (sortBy === 'size') return b.size - a.size;\n      if (sortBy === 'loss') {\n        if (overperforming) return a.metric - b.metric;\n        return b.metric - a.metric;\n      }\n      if (sortBy === 'accuracy') {\n        return b.accuracy - a.accuracy;\n      }  \n      if (overperforming) return a.metric - b.metric;\n        return b.metric - a.metric;\n    });\n  if (view === 'bar') {\n    filteredData = filteredData.slice(0, 10);\n  } else {\n    filteredData = filteredData.slice(0, show);\n  }\n  return (\n    <div className='main-container' style={{ display: 'block', margin: 'auto', width: '75%'}}>\n      {view === 'bar' ? (\n        <SliceBarChart\n          data={filteredData}\n          model={modelMetric}\n          max={max}\n          view={view}\n          overperforming={overperforming}\n          metric={metric}\n          setDetails={setDetails}\n          nodeColor={nodeColor}\n        />\n      ) : view === 'force' ? (\n        <ForceLayout\n          data={filteredData}\n          degree={numFeatures}\n          view={view}\n          metric={metric}\n          model={modelMetric}\n          overperforming={overperforming}\n          setDetails={setDetails}\n          radius={radius}\n          setShowConvexHull={setShowConvexHull}\n          nodeSize={nodeSize}\n          nodeColor={nodeColor}\n        />\n      ) : (\n        <GraphLayout\n          data={filteredData}\n          degree={numFeatures}\n          metric={metric}\n          model={modelMetric}\n          overperforming={overperforming}\n          radiusType={radius}\n          edgeFiltering={edgeFiltering}\n          edgeForce={edgeForce}\n          setDetails={setDetails}\n          cursorMode={cursorMode}\n          algorithm={algorithm}\n          setShowConvexHull={setShowConvexHull}\n          nodeSize={nodeSize}\n          nodeColor={nodeColor}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(Main);\n","import React from 'react';\nimport Nav from './components/Nav/Nav';\nimport LeftDrawer from './components/LeftDrawer/LeftDrawer';\nimport RightDrawer from './components/RightDrawer/RightDrawer';\nimport Main from './components/Main/Main';\nimport featuresData from './data/features.json'\n\nwindow.onbeforeunload = function () {\n  window.scrollTo(0, 0);\n};\n\nfunction App() {\n  const [algorithm, setAlgorithm] = React.useState('slicefinder');\n  const [numFeatures, setNumFeatures] = React.useState(2);\n  const [sampleSize, setSampleSize] = React.useState(0);\n  const [metric, setMetric] = React.useState('Log Loss');\n  const [view, setView] = React.useState('force');\n  const [sortBy, setSortBy] = React.useState('loss');\n  const [overperforming, setOverperforming] = React.useState(false);\n  const [radius, setRadius] = React.useState('log');\n  const [edgeFiltering, setEdgeFiltering] = React.useState(500);\n  const [edgeThickness, setEdgeThickness] = React.useState(1);\n  const [edgeForce, setEdgeForce] = React.useState(1);\n  const [cursorMode, setCursorMode] = React.useState('select');\n  const [show, setShow] = React.useState(100);\n  const [nodeSize, setNodeSize] = React.useState('size')\n  const [nodeColor, setNodeColor] = React.useState('loss')\n  const [features, setFeatures] = React.useState(featuresData.features);\n  const [details, setDetails] = React.useState(null);\n  const setDetailsCallback = React.useCallback((details) => {\n    setDetails(details);\n  }, []);\n  const [showConvexHull, setShowConvexHull] = React.useState(false);\n\n  return (\n    <div className='App'>\n      <Nav\n        view={view}\n        setView={setView}\n        algorithm={algorithm}\n        setAlgorithm={setAlgorithm}\n      />\n      <LeftDrawer\n        numFeatures={numFeatures}\n        setNumFeatures={setNumFeatures}\n        sampleSize={sampleSize}\n        setSampleSize={setSampleSize}\n        metric={metric}\n        setMetric={setMetric}\n        sortBy={sortBy}\n        setSortBy={setSortBy}\n        overperforming={overperforming}\n        setOverperforming={setOverperforming}\n        features={features}\n        setFeatures={setFeatures}\n        view={view}\n        radius={radius}\n        setRadius={setRadius}\n        edgeFiltering={edgeFiltering}\n        setEdgeFiltering={setEdgeFiltering}\n        edgeForce={edgeForce}\n        setEdgeForce={setEdgeForce}\n        cursorMode={cursorMode}\n        setCursorMode={setCursorMode}\n        show={show}\n        setShow={setShow}\n        nodeSize={nodeSize}\n        setNodeSize={setNodeSize}\n        nodeColor={nodeColor}\n        setNodeColor={setNodeColor}\n        showConvexHull={showConvexHull}\n        setShowConvexHull={setShowConvexHull}\n      />\n      {/* <RightDrawer\n        details={details}\n        metric={metric}\n        overperforming={overperforming}\n        view={view}\n        convexHull={showConvexHull}\n      /> */}\n      <Main\n        numFeatures={numFeatures}\n        sampleSize={sampleSize}\n        metric={metric}\n        view={view}\n        sortBy={sortBy}\n        overperforming={overperforming}\n        features={features}\n        radius={radius}\n        edgeFiltering={edgeFiltering}\n        edgeForce={edgeForce}\n        setDetails={setDetailsCallback}\n        cursorMode={cursorMode}\n        show={show}\n        algorithm={algorithm}\n        setShowConvexHull={setShowConvexHull}\n        nodeSize={nodeSize}\n        nodeColor={nodeColor}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}